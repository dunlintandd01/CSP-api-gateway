var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ANSWER_DISPLAY_MODE.html",[0,0.639,1,1.801]],["body/interfaces/ANSWER_DISPLAY_MODE.html",[0,1.18,1,2.467,2,1.375,3,0.151,4,0.13,5,0.13,6,1.927,7,0.291,8,1.319,9,3.574,10,3.893,11,3.574,12,0.278,13,1.812,14,0.019,15,2.799,16,2.799,17,1.812,18,2.799,19,2.799,20,2.799,21,1.812,22,2.799,23,2.799,24,1.812,25,2.623,26,2.799,27,2.799,28,2.799,29,1.812,30,2.799,31,2.799,32,2.799,33,1.709,34,1.307,35,2.056,36,2.198,37,1.927,38,0.974,39,0.368,40,0.009,41,0.013,42,0.009]],["title/interfaces/AUTH_MODE.html",[0,0.639,24,1.801]],["body/interfaces/AUTH_MODE.html",[0,1.176,1,1.792,2,1.36,3,0.15,4,0.128,5,0.128,6,1.905,7,0.287,8,1.309,9,2.778,10,3.675,11,2.778,12,0.277,13,1.792,14,0.019,15,2.778,16,2.778,17,1.792,18,2.778,19,2.778,20,2.778,21,1.792,22,2.778,23,2.778,24,2.448,25,3.337,26,3.56,27,3.56,28,3.56,29,1.792,30,2.778,31,2.778,32,2.778,33,1.69,34,1.292,35,2.033,36,2.182,37,1.905,38,0.966,39,0.364,40,0.009,41,0.013,42,0.009]],["title/injectables/AdminAuthGuard.html",[43,0.872,44,2.19]],["body/injectables/AdminAuthGuard.html",[3,0.163,4,0.14,5,0.14,7,0.313,12,0.163,14,0.019,34,1.406,39,0.526,40,0.01,41,0.013,42,0.01,43,1.255,44,3.151,45,1.645,46,3.432,47,1.456,48,4.561,49,4.561,50,4.561,51,4.866,52,1.023,53,3.999,54,1.456,55,0.518,56,1.386,57,3.058,58,1.456,59,4.561,60,5.065,61,3.999,62,5.124,63,0.488,64,4.561,65,0.55,66,3.432,67,2.371,68,0.117,69,3.999,70,1.255,71,3.432,72,1.559,73,1.151]],["title/injectables/AdminAuthGuard-1.html",[43,0.729,44,1.83,74,1.419]],["body/injectables/AdminAuthGuard-1.html",[3,0.163,4,0.14,5,0.14,7,0.313,12,0.163,14,0.019,34,1.406,39,0.526,40,0.01,41,0.013,42,0.01,43,1.255,44,3.151,45,1.645,47,1.456,48,4.561,49,4.561,50,4.561,51,4.866,52,1.023,54,1.456,55,0.518,56,1.386,57,3.058,58,1.456,59,4.561,60,5.065,62,5.124,63,0.488,64,4.561,65,0.55,66,3.432,67,2.371,68,0.117,70,1.255,71,3.432,72,1.559,73,1.151,75,3.432,76,3.999,77,3.999,78,3.999]],["title/classes/AdminLoginRequestDto.html",[68,0.108,79,2.567]],["body/classes/AdminLoginRequestDto.html",[3,0.182,4,0.157,5,0.157,7,0.351,8,1.493,12,0.182,14,0.019,38,1.279,40,0.011,41,0.015,42,0.011,52,1.102,55,0.741,63,0.526,68,0.167,79,3.98,80,2.061,81,3.847,82,5.415,83,5.415,84,2.355,85,4.914,86,4.483,87,4.483,88,4.034,89,2.324,90,4.825,91,1.948]],["title/injectables/AdminStrategy.html",[43,0.872,92,2.361]],["body/injectables/AdminStrategy.html",[3,0.152,4,0.13,5,0.13,7,0.292,12,0.152,14,0.019,34,1.312,39,0.502,40,0.009,41,0.013,42,0.009,43,1.197,45,1.534,47,1.39,52,0.976,54,1.39,55,0.657,56,1.323,58,1.022,63,0.568,65,0.513,67,2.212,68,0.109,70,0.881,92,3.243,93,3.201,94,1.744,95,3.525,96,1.819,97,2.592,98,3.254,99,3.73,100,4.353,101,3.73,102,2.853,103,3.201,104,3.201,105,2.853,106,2.853,107,1.715,108,3.201,109,3.201,110,3.73,111,2.063,112,3.201,113,3.201,114,3.201,115,3.201,116,2.853,117,3.201,118,3.201,119,3.201,120,3.201,121,3.201,122,2.592,123,2.853,124,3.201,125,3.201,126,3.201,127,3.201]],["title/classes/AllExceptionFilter.html",[68,0.108,128,2.825]],["body/classes/AllExceptionFilter.html",[3,0.137,4,0.118,5,0.118,7,0.264,12,0.137,14,0.019,39,0.334,40,0.009,41,0.012,42,0.009,47,1.298,52,0.65,54,0.925,55,0.437,56,0.881,58,0.925,63,0.503,65,0.465,68,0.139,73,0.972,80,1.553,89,1.751,128,3.622,129,2.898,130,2.455,131,5.469,132,4.12,133,4.736,134,4.694,135,4.694,136,5.929,137,3.377,138,5.469,139,2.898,140,3.622,141,2.583,142,4.736,143,4.064,144,3.622,145,2.898,146,1.739,147,3.377,148,3.377,149,3.377,150,3.377,151,5.929,152,3.377,153,3.073,154,3.377,155,4.12,156,2.898,157,4.736,158,3.377,159,2.898,160,3.377,161,3.377,162,3.377,163,3.377,164,3.377,165,3.377,166,3.377,167,3.377,168,2.347,169,3.377]],["title/modules/AppModule.html",[170,1.063,171,2.567]],["body/modules/AppModule.html",[3,0.124,4,0.107,5,0.107,12,0.124,14,0.019,40,0.008,41,0.011,42,0.008,60,2.338,63,0.619,65,0.421,68,0.089,94,1.335,98,3.147,107,1.405,135,2.623,170,1.49,171,4.862,172,1.257,173,1.585,174,1.813,175,1.813,176,1.585,177,1.585,178,1.691,179,2.623,180,2.623,181,4.003,182,4.003,183,4.003,184,3.842,185,2.616,186,1.813,187,1.813,188,3.057,189,2.938,190,3.598,191,2.623,192,1.954,193,4.412,194,3.057,195,3.057,196,3.057,197,3.057,198,3.066,199,3.057,200,3.057,201,1.954,202,3.057,203,2.623,204,3.057,205,3.057,206,2.125,207,3.057,208,3.057,209,2.82,210,3.057,211,3.057,212,3.057,213,3.057,214,3.057,215,3.057,216,3.057,217,2.151,218,3.057,219,3.057,220,3.057,221,3.057]],["title/controllers/AuthController.html",[222,1.174,223,2.567]],["body/controllers/AuthController.html",[3,0.158,4,0.135,5,0.135,7,0.303,12,0.158,14,0.019,39,0.384,40,0.01,41,0.013,42,0.01,47,1.426,52,0.746,54,1.062,55,0.502,56,1.01,58,1.062,63,0.577,65,0.533,68,0.113,70,0.915,79,4.366,84,1.594,91,1.683,94,1.778,111,2.143,144,3.98,146,1.232,222,1.655,223,3.617,224,1.594,225,3.325,226,4.466,227,3.875,228,5.877,229,5.204,230,3.875,231,3.484,232,2.477,233,2.143,234,3.484,235,3.325,236,3.875,237,3.875,238,3.875,239,5.204,240,1.683,241,3.875,242,3.875,243,3.875,244,3.875,245,3.875]],["title/modules/AuthModule.html",[170,1.063,181,2.361]],["body/modules/AuthModule.html",[3,0.137,4,0.117,5,0.117,12,0.137,14,0.019,40,0.009,41,0.012,42,0.009,63,0.622,65,0.462,67,1.989,68,0.098,92,4.128,94,1.015,98,2.882,107,1.542,118,2.879,120,2.879,121,2.879,122,2.331,123,2.565,170,1.569,172,1.38,173,1.739,174,1.989,175,1.989,176,1.739,177,2.825,178,1.856,181,4.458,185,2.795,186,1.989,187,1.989,189,2.444,190,3.276,209,2.144,217,1.635,223,3.787,224,1.939,234,3.829,235,2.879,246,2.879,247,2.879,248,4.128,249,3.355,250,4.714,251,3.355,252,2.565,253,3.355,254,3.355,255,3.355,256,3.355,257,3.355,258,3.355,259,3.355,260,3.355,261,3.355]],["title/injectables/AuthService.html",[43,0.872,234,2.19]],["body/injectables/AuthService.html",[3,0.14,4,0.12,5,0.12,7,0.27,12,0.14,14,0.019,38,1.254,39,0.548,40,0.009,41,0.012,42,0.009,43,1.134,45,1.418,47,1.316,52,0.925,54,1.316,55,0.622,56,1.253,58,0.944,63,0.55,65,0.474,68,0.101,70,0.814,73,0.992,82,2.958,83,5.133,94,1.673,96,2.342,98,3.259,102,2.636,107,1.585,146,1.902,226,4.123,234,2.848,240,1.498,252,2.636,262,2.958,263,3.447,264,6.514,265,3.447,266,4.804,267,3.447,268,3.447,269,2.958,270,1.976,271,3.447,272,3.447,273,3.447,274,3.447,275,3.447,276,3.447,277,3.447,278,3.447,279,3.447,280,3.447,281,3.447,282,3.447,283,3.447,284,3.447]],["title/classes/CreateGameReq.html",[68,0.108,285,2.567]],["body/classes/CreateGameReq.html",[3,0.195,4,0.167,5,0.167,7,0.374,8,1.556,12,0.195,14,0.019,38,1.148,39,0.644,40,0.012,41,0.015,42,0.012,52,0.92,55,0.619,63,0.548,68,0.174,80,2.199,84,1.967,88,3.814,89,2.48,90,4.562,91,2.078,285,4.146,286,4.105,287,4.783,288,4.783]],["title/classes/CreateHeroRequestDto.html",[68,0.108,289,2.19]],["body/classes/CreateHeroRequestDto.html",[3,0.2,4,0.172,5,0.172,7,0.385,8,1.584,12,0.2,14,0.019,38,1.169,39,0.652,40,0.012,41,0.015,42,0.012,52,0.948,55,0.638,63,0.453,68,0.178,80,2.264,84,2.026,88,4.211,89,2.553,289,3.601,290,4.226,291,4.924]],["title/classes/CreateHeroResponseDto.html",[68,0.108,292,2.19]],["body/classes/CreateHeroResponseDto.html",[3,0.18,4,0.154,5,0.154,7,0.346,8,1.481,12,0.18,14,0.019,38,1.093,39,0.621,40,0.011,41,0.014,42,0.011,52,1.093,55,0.735,63,0.522,68,0.166,80,2.034,84,2.335,88,4.008,89,2.293,130,2.943,292,3.366,293,3.796,294,2.445,295,2.724,296,2.61,297,6.27,298,4.423,299,4.423,300,4.423]],["title/classes/EventBusSDKService.html",[68,0.108,301,2.361]],["body/classes/EventBusSDKService.html",[3,0.157,4,0.135,5,0.135,7,0.302,12,0.157,14,0.019,39,0.514,40,0.01,41,0.013,42,0.01,47,1.422,52,0.999,54,1.422,55,0.759,56,1.354,58,1.058,63,0.477,65,0.531,68,0.113,80,1.774,94,1.774,96,2.531,97,2.682,98,3.286,107,1.774,201,2.467,217,1.882,240,1.677,270,2.135,301,3.318,302,3.312,303,4.455,304,3.75,305,3.86,306,5.191,307,5.617,308,3.86,309,5.191,310,2.255,311,3.86,312,3.86,313,3.86,314,3.312,315,3.312,316,3.86,317,3.86,318,3.86,319,3.86]],["title/interfaces/GAME_STATUS.html",[0,0.639,17,1.801]],["body/interfaces/GAME_STATUS.html",[0,1.18,1,1.812,2,1.375,3,0.151,4,0.13,5,0.13,6,1.927,7,0.291,8,1.319,9,2.799,10,3.687,11,2.799,12,0.278,13,1.812,14,0.019,15,2.799,16,2.799,17,2.467,18,3.574,19,3.574,20,3.574,21,1.812,22,2.799,23,2.799,24,1.812,25,2.623,26,2.799,27,2.799,28,2.799,29,1.812,30,2.799,31,2.799,32,2.799,33,1.709,34,1.307,35,2.056,36,2.198,37,1.927,38,0.974,39,0.368,40,0.009,41,0.013,42,0.009]],["title/interfaces/GAME_TYPE.html",[0,0.639,13,1.801]],["body/interfaces/GAME_TYPE.html",[0,1.18,1,1.812,2,1.375,3,0.151,4,0.13,5,0.13,6,1.927,7,0.291,8,1.319,9,2.799,10,3.893,11,2.799,12,0.278,13,2.467,14,0.019,15,3.574,16,3.574,17,1.812,18,2.799,19,2.799,20,2.799,21,1.812,22,2.799,23,2.799,24,1.812,25,2.623,26,2.799,27,2.799,28,2.799,29,1.812,30,2.799,31,2.799,32,2.799,33,1.709,34,1.307,35,2.056,36,2.198,37,1.927,38,0.974,39,0.368,40,0.009,41,0.013,42,0.009]],["title/classes/Game.html",[68,0.108,320,2.19]],["body/classes/Game.html",[3,0.194,4,0.166,5,0.166,7,0.372,8,1.551,12,0.242,14,0.019,38,1.145,39,0.642,40,0.012,41,0.015,42,0.012,52,0.916,55,0.616,63,0.437,68,0.139,80,2.189,84,1.958,146,1.513,192,3.043,320,3.526,321,3.64,322,6.487,323,4.76,324,5.104,325,4.76,326,3.308,327,4.085]],["title/controllers/GameAdminController.html",[222,1.174,328,2.567]],["body/controllers/GameAdminController.html",[3,0.129,4,0.111,5,0.111,7,0.248,12,0.129,14,0.019,38,1.017,39,0.523,40,0.015,41,0.011,42,0.008,44,1.882,47,1.242,52,0.872,54,1.242,55,0.747,56,1.182,58,1.242,63,0.56,65,0.437,68,0.093,70,1.07,84,1.864,91,1.379,94,1.918,111,1.755,146,1.681,222,1.009,224,1.305,231,3.419,232,2.897,233,1.755,240,1.969,285,4.007,295,1.969,310,2.505,328,3.15,329,2.723,330,2.206,331,3.173,332,3.889,333,3.466,334,3.173,335,3.173,336,3.899,337,3.173,338,2.427,339,3.173,340,3.173,341,1.882,342,3.173,343,4.537,344,3.173,345,3.173,346,2.924,347,2.427,348,2.723,349,3.173,350,2.723,351,3.173,352,3.173,353,2.723,354,2.723,355,3.173,356,3.173,357,3.173]],["title/controllers/GameController.html",[222,1.174,358,2.567]],["body/controllers/GameController.html",[3,0.148,4,0.127,5,0.127,7,0.285,12,0.148,14,0.019,38,1.097,39,0.361,40,0.016,41,0.013,42,0.009,47,1.369,52,0.702,54,1,55,0.647,56,0.951,58,1,63,0.59,65,0.502,68,0.107,70,0.861,72,1.423,73,1.05,84,1.501,91,1.585,94,1.724,111,2.018,140,2.79,141,2.79,146,1.16,222,1.16,224,1.501,233,2.018,240,1.585,295,2.171,310,2.171,320,2.163,330,2.536,333,3.821,336,3.194,338,2.79,341,2.163,343,4.288,346,3.152,347,2.79,348,3.131,350,3.131,353,3.131,354,3.131,358,3.472,359,3.131,360,3.648,361,3.648,362,3.648,363,3.648,364,3.648,365,3.472,366,3.648,367,3.648,368,3.648,369,3.648,370,3.648,371,3.648,372,3.648]],["title/classes/GameDto.html",[68,0.108,336,2.361]],["body/classes/GameDto.html",[3,0.182,4,0.157,5,0.157,7,0.351,8,1.493,12,0.182,14,0.019,37,3.271,38,1.279,39,0.625,40,0.011,41,0.015,42,0.011,52,1.102,55,0.741,63,0.526,68,0.167,80,2.061,84,2.355,85,4.914,88,4.034,89,2.324,90,4.825,91,1.948,336,3.661,373,3.847,374,4.483,375,4.483]],["title/modules/GameModule.html",[170,1.063,182,2.361]],["body/modules/GameModule.html",[3,0.148,4,0.127,5,0.127,12,0.148,14,0.019,39,0.36,40,0.009,41,0.013,42,0.009,63,0.623,65,0.5,68,0.106,94,1.1,98,2.983,107,1.671,170,1.637,172,1.495,173,1.884,174,2.155,175,2.155,176,1.884,177,2.948,178,2.011,182,4.233,185,2.955,186,2.155,187,2.155,189,2.584,190,3.464,191,3.12,192,2.324,209,2.324,217,1.772,224,2.05,320,2.155,324,3.12,326,3.464,328,3.953,346,3.663,347,2.78,358,3.953,376,3.12,377,3.12,378,3.635,379,3.635,380,3.12,381,3.635,382,3.635,383,3.635,384,3.635,385,3.635,386,3.635,387,3.635]],["title/injectables/GameService.html",[43,0.872,346,2.043]],["body/injectables/GameService.html",[2,1.034,3,0.114,4,0.098,5,0.098,7,0.218,12,0.114,14,0.019,33,1.284,36,1.213,38,1.266,39,0.601,40,0.014,41,0.01,42,0.007,43,0.975,45,1.149,47,1.131,52,1.045,54,1.488,55,0.703,56,1.416,58,1.346,63,0.577,65,0.384,68,0.082,70,1.282,73,0.804,94,1.991,96,2.013,146,1.562,192,1.785,240,2.135,270,1.699,295,1.794,310,2.636,320,1.656,332,3.544,333,3.158,338,3.158,346,2.284,380,2.396,388,2.396,389,4.129,390,2.792,391,5.429,392,4.914,393,4.973,394,2.792,395,4.129,396,4.129,397,2.792,398,2.792,399,4.129,400,2.792,401,2.135,402,2.792,403,1.941,404,3.158,405,2.792,406,2.792,407,2.792,408,2.792,409,4.129,410,2.792,411,2.792,412,4.217,413,2.792,414,2.792,415,2.792,416,2.792]],["title/controllers/HealthController.html",[222,1.174,417,2.567]],["body/controllers/HealthController.html",[3,0.175,4,0.15,5,0.15,7,0.335,12,0.175,14,0.019,40,0.011,41,0.014,42,0.011,47,1.525,52,0.826,58,1.176,63,0.568,65,0.591,68,0.125,70,1.013,84,1.765,91,1.864,96,2.092,222,1.364,224,1.765,233,2.373,270,2.29,330,2.982,401,3.281,417,3.869,418,3.682,419,5.567,420,6.539,421,4.29,422,4.29,423,5.567,424,5.567,425,5.567,426,3.281,427,4.29,428,4.29,429,4.29,430,4.29]],["title/modules/HealthModule.html",[170,1.063,183,2.361]],["body/modules/HealthModule.html",[3,0.2,4,0.172,5,0.172,12,0.2,14,0.019,40,0.012,41,0.015,42,0.012,63,0.605,65,0.678,68,0.144,170,1.749,172,2.026,183,3.883,189,2.553,224,2.499,417,4.578,426,3.766,431,4.924,432,6.074,433,4.924]],["title/interfaces/Hero.html",[0,0.639,294,1.441]],["body/interfaces/Hero.html",[0,0.756,2,1.118,3,0.123,4,0.105,5,0.105,7,0.236,8,1.14,12,0.178,14,0.019,34,1.062,38,1.085,39,0.592,40,0.013,41,0.011,42,0.008,55,0.566,63,0.55,65,0.416,68,0.128,70,1.032,72,1.178,73,0.869,74,1.388,91,1.312,94,1.323,130,1.566,146,1.39,153,2.267,217,1.472,222,0.96,231,2.593,232,2.796,233,1.671,240,1.312,270,1.799,289,2.593,292,1.791,294,2.198,295,2.917,296,2.75,310,1.9,341,1.791,434,2.099,435,3.932,436,3.345,437,1.566,438,3.039,439,1.931,440,2.31,441,2.507,442,1.791,443,1.931,444,1.472,445,3.345,446,2.31,447,2.31,448,2.31,449,2.31,450,2.31,451,2.31,452,2.31,453,2.31,454,1.791,455,2.31,456,2.31,457,2.31,458,2.31,459,2.31,460,2.31,461,2.31,462,2.31,463,2.31,464,2.31,465,2.31]],["title/interfaces/Hero-1.html",[0,0.534,74,1.419,294,1.203]],["body/interfaces/Hero-1.html",[0,0.866,2,1.355,3,0.149,4,0.128,5,0.128,7,0.286,8,1.306,12,0.232,14,0.019,36,1.591,38,1.099,39,0.657,40,0.009,41,0.013,42,0.009,55,0.649,63,0.46,65,0.504,68,0.107,70,0.864,72,1.428,73,1.054,74,1.683,153,1.898,155,2.545,222,1.592,270,1.506,294,2.507,295,3.049,296,2.822,437,1.898,441,1.785,442,2.171,444,1.785,466,2.545,467,2.8,468,3.831,469,3.831,470,3.202,471,2.8,472,2.8,473,2.545,474,2.8,475,2.8,476,2.8,477,2.8]],["title/interfaces/Hero-2.html",[0,0.534,294,1.203,473,2.145]],["body/interfaces/Hero-2.html",[0,0.856,2,1.832,3,0.201,4,0.173,5,0.173,7,0.387,8,1.589,12,0.201,14,0.018,38,1.27,39,0.682,40,0.013,41,0.015,42,0.013,55,0.789,294,2.376,295,2.993,296,3.035,478,4.247]],["title/interfaces/HeroById.html",[0,0.639,470,2.361]],["body/interfaces/HeroById.html",[0,0.882,2,1.391,3,0.153,4,0.131,5,0.131,7,0.294,8,1.33,12,0.236,14,0.019,36,1.633,38,0.723,39,0.573,40,0.01,41,0.013,42,0.01,55,0.487,63,0.469,65,0.517,68,0.11,70,0.887,72,1.466,73,1.082,74,1.728,153,1.948,155,2.612,222,1.621,270,1.546,294,2.42,295,3.065,296,2.853,437,1.948,441,1.832,442,2.228,444,1.832,466,2.612,467,2.874,468,3.899,469,3.899,470,3.699,471,2.874,472,2.874,473,2.612,474,2.874,475,2.874,476,2.874,477,2.874]],["title/controllers/HeroController.html",[222,1.174,454,2.19]],["body/controllers/HeroController.html",[0,0.698,3,0.11,4,0.095,5,0.095,7,0.212,12,0.164,14,0.019,34,0.953,38,1.029,39,0.53,40,0.012,41,0.01,42,0.007,47,1.106,52,0.929,54,1.106,55,0.523,56,1.053,58,1.323,63,0.526,65,0.373,68,0.118,70,0.953,72,1.056,73,0.78,74,1.245,84,1.661,91,1.177,94,1.815,130,1.404,139,2.325,146,1.284,153,2.093,217,1.321,222,0.861,224,1.114,231,2.394,232,3.086,233,1.499,240,1.177,270,1.661,289,3.172,292,1.606,294,2.086,295,2.7,296,2.219,310,2.324,330,1.883,341,1.606,434,1.883,435,4.588,436,3.088,437,1.404,438,2.806,439,1.732,440,2.072,441,2.353,442,1.606,443,1.732,444,1.321,445,3.088,446,2.072,447,2.072,448,2.072,449,2.072,450,2.072,451,2.072,452,2.072,453,2.072,454,2.394,455,2.072,456,2.072,457,2.072,458,2.072,459,3.088,460,2.072,461,2.072,462,2.072,463,3.691,464,3.088,465,2.072,479,4.038,480,2.709,481,2.709,482,2.709,483,2.709,484,2.709]],["title/classes/HeroError.html",[68,0.108,443,2.361]],["body/classes/HeroError.html",[0,0.747,3,0.121,4,0.104,5,0.104,7,0.232,8,1.126,12,0.176,14,0.019,34,1.518,38,0.831,39,0.504,40,0.013,41,0.011,42,0.008,52,0.831,54,0.813,55,0.384,56,0.774,63,0.546,65,0.408,68,0.126,70,1.019,72,1.157,73,0.854,74,1.364,80,1.364,91,1.289,94,1.306,96,1.446,130,1.538,146,1.372,153,2.897,217,1.446,222,0.943,231,2.559,232,2.76,233,1.641,240,1.289,270,1.776,289,2.559,292,1.759,294,1.985,295,2.693,296,2.569,310,1.876,341,1.759,434,2.062,435,3.892,436,3.301,437,1.538,438,3,439,1.896,440,2.269,441,2.481,442,1.759,443,2.76,444,2.105,445,4.542,446,3.301,447,2.269,448,2.269,449,2.269,450,2.269,451,2.269,452,2.269,453,2.269,454,1.759,455,2.269,456,2.269,457,2.269,458,2.269,459,2.269,460,2.269,461,2.269,462,2.269,463,2.269,464,2.269,465,2.269,485,4.317]],["title/modules/HeroModule.html",[170,1.063,198,2.567]],["body/modules/HeroModule.html",[3,0.178,4,0.153,5,0.153,12,0.178,14,0.019,39,0.434,40,0.011,41,0.014,42,0.011,63,0.606,65,0.604,68,0.128,168,3.047,170,1.625,172,1.804,189,2.273,198,3.923,224,2.322,294,1.71,437,2.273,454,3.702,486,4.384,487,4.384,488,5.645,489,3.353,490,4.384,491,4.384,492,4.384,493,4.384,494,3.353,495,3.763,496,4.384,497,4.384,498,4.384,499,4.384,500,4.384]],["title/modules/HeroSVCModule.html",[170,1.063,501,2.361]],["body/modules/HeroSVCModule.html",[3,0.205,4,0.176,5,0.176,12,0.205,14,0.019,40,0.013,41,0.016,42,0.013,63,0.567,65,0.695,68,0.148,170,1.776,172,2.077,177,2.617,224,2.537,441,3.247,501,3.943,502,5.049,503,5.049]],["title/controllers/HeroesService.html",[222,1.174,441,1.801]],["body/controllers/HeroesService.html",[0,0.856,3,0.146,4,0.126,5,0.126,7,0.281,12,0.23,14,0.019,36,1.562,38,0.692,39,0.603,40,0.009,41,0.013,42,0.009,47,1.355,52,0.692,54,0.985,55,0.466,56,0.938,58,0.985,63,0.455,65,0.495,68,0.105,70,0.849,72,1.402,73,1.035,74,1.653,84,1.479,153,1.864,155,2.499,222,1.573,224,1.479,270,1.479,294,2.491,295,2.868,296,2.274,437,1.864,441,2.412,442,2.933,444,1.753,466,2.499,467,2.75,468,4.325,469,3.783,470,3.894,471,2.75,472,2.75,473,2.499,474,2.75,475,2.75,476,2.75,477,2.75,504,4.947,505,3.596,506,3.596]],["title/interfaces/IGame.html",[0,0.639,33,1.698]],["body/interfaces/IGame.html",[0,1.172,1,1.766,2,1.341,3,0.147,4,0.126,5,0.126,6,1.878,7,0.283,8,1.296,9,2.75,10,3.659,11,2.75,12,0.276,13,1.766,14,0.019,15,2.75,16,2.75,17,1.766,18,2.75,19,2.75,20,2.75,21,1.766,22,2.75,23,2.75,24,1.766,25,2.577,26,2.75,27,2.75,28,2.75,29,1.766,30,2.75,31,2.75,32,2.75,33,2.286,34,1.748,35,2.75,36,2.16,37,3.167,38,1.273,39,0.605,40,0.009,41,0.013,42,0.009,55,0.644]],["title/injectables/LoggingInterceptor.html",[43,0.872,507,2.825]],["body/injectables/LoggingInterceptor.html",[3,0.154,4,0.132,5,0.132,7,0.296,12,0.154,14,0.019,39,0.375,40,0.01,41,0.013,42,0.01,43,1.21,45,1.558,47,1.404,51,4.76,52,0.729,54,1.038,55,0.49,56,0.987,57,2.896,58,1.038,63,0.534,65,0.521,68,0.111,70,0.894,73,1.09,130,1.963,143,4.398,144,2.896,146,1.847,438,4.037,439,2.421,507,3.919,508,2.896,509,5.124,510,5.124,511,6.224,512,6.224,513,3.787,514,5.124,515,3.561,516,5.124,517,3.787,518,3.25,519,3.787,520,3.787,521,3.787,522,5.124,523,3.787,524,5.124,525,3.787,526,3.25,527,3.787,528,3.787]],["title/injectables/MemberStrategy.html",[43,0.872,248,2.361]],["body/injectables/MemberStrategy.html",[3,0.142,4,0.122,5,0.122,7,0.273,12,0.142,14,0.019,34,1.229,39,0.48,40,0.009,41,0.012,42,0.009,43,1.145,45,1.438,47,1.329,52,0.934,54,1.329,55,0.628,56,1.265,58,0.958,63,0.601,65,0.481,67,2.072,68,0.102,70,0.825,94,1.685,95,3.371,96,1.704,97,2.429,98,3.19,100,4.163,102,2.673,103,3,104,3,105,2.673,106,2.673,107,1.607,108,3,109,3,111,1.933,112,3,113,3,114,3,115,3,116,2.673,117,3,119,3,124,3,125,3,126,3,127,3,168,3.371,201,2.234,248,3.101,489,3.71,529,3,530,3.495,531,3.495,532,4.851,533,3.495,534,3.495,535,3.495,536,3.495,537,3.495,538,3.495,539,3.495,540,3.495]],["title/injectables/ParseObjectIdPipe.html",[43,0.872,365,2.567]],["body/injectables/ParseObjectIdPipe.html",[3,0.137,4,0.117,5,0.117,7,0.262,12,0.137,14,0.019,25,2.825,39,0.332,40,0.009,41,0.012,42,0.009,43,1.113,45,1.38,47,1.292,52,0.646,54,0.919,55,0.434,56,0.875,58,1.292,63,0.433,65,0.462,68,0.098,70,0.792,72,1.308,73,0.966,95,3.276,130,1.739,132,2.331,140,3.605,141,2.565,146,1.066,159,2.879,203,5.073,341,1.989,365,3.276,444,1.635,526,4.045,541,2.879,542,4.045,543,4.714,544,6.633,545,7.051,546,4.714,547,5.073,548,4.045,549,3.355,550,4.714,551,4.714,552,4.488,553,4.045,554,3.355,555,3.355,556,3.355,557,3.355,558,2.565,559,4.714,560,3.355,561,3.355,562,3.355]],["title/injectables/PointsService.html",[43,0.872,563,2.361]],["body/injectables/PointsService.html",[3,0.107,4,0.092,5,0.092,7,0.206,8,1.03,12,0.107,14,0.019,39,0.391,40,0.007,41,0.01,42,0.007,43,0.933,45,1.082,47,1.082,52,0.913,54,1.082,55,0.614,56,1.03,58,0.721,63,0.485,65,0.362,68,0.077,70,0.933,72,1.026,73,1.137,74,1.209,94,1.435,96,1.283,111,1.455,116,2.012,122,3.296,132,1.828,146,1.796,153,1.364,201,2.525,206,1.828,296,3.277,301,3.793,303,2.258,304,1.682,307,3.39,310,1.716,314,2.258,315,2.258,444,2.57,515,4.124,558,2.012,563,2.525,564,2.012,565,4.743,566,2.631,567,3.95,568,2.631,569,5.65,570,5.65,571,5.65,572,4.07,573,5.65,574,5.65,575,5.65,576,2.631,577,4.743,578,2.258,579,2.258,580,2.258,581,2.258,582,2.258,583,2.258,584,2.258,585,2.631,586,2.258,587,2.631,588,2.631,589,2.631,590,2.631,591,2.012,592,3.95,593,2.631,594,2.258,595,2.631,596,2.631,597,2.631,598,2.631,599,2.631,600,2.631,601,2.631,602,2.631]],["title/interfaces/QUESTION_ORDER_MODE.html",[0,0.639,29,1.801]],["body/interfaces/QUESTION_ORDER_MODE.html",[0,1.18,1,1.812,2,1.375,3,0.151,4,0.13,5,0.13,6,1.927,7,0.291,8,1.319,9,2.799,10,3.687,11,2.799,12,0.278,13,1.812,14,0.019,15,2.799,16,2.799,17,1.812,18,2.799,19,2.799,20,2.799,21,1.812,22,2.799,23,2.799,24,1.812,25,2.623,26,2.799,27,2.799,28,2.799,29,2.467,30,3.574,31,3.574,32,3.574,33,1.709,34,1.307,35,2.056,36,2.198,37,1.927,38,0.974,39,0.368,40,0.009,41,0.013,42,0.009]],["title/modules/RedisModule.html",[170,1.063,184,2.361]],["body/modules/RedisModule.html",[0,0.576,3,0.136,4,0.116,5,0.116,12,0.136,14,0.019,39,0.465,40,0.008,41,0.012,42,0.008,47,0.913,52,0.903,54,1.285,55,0.607,56,1.223,58,1.285,63,0.542,65,0.459,68,0.097,70,1.282,73,1.351,146,1.492,170,1.697,172,1.371,177,2.432,178,2.595,184,3.768,189,1.727,206,3.261,403,3.261,494,3.588,603,3.332,604,5.894,605,3.332,606,4.692,607,5.331,608,3.332,609,6.212,610,3.332,611,4.692,612,4.096,613,3.332,614,5.43,615,4.153,616,3.332,617,6.444,618,4.026,619,3.332,620,4.692,621,4.692,622,3.332,623,3.332]],["title/interfaces/RedisModuleAsyncOptions.html",[0,0.639,612,2.567]],["body/interfaces/RedisModuleAsyncOptions.html",[0,0.709,2,1.516,3,0.167,4,0.143,5,0.143,7,0.32,8,1.409,12,0.167,14,0.019,34,1.899,40,0.01,41,0.014,42,0.01,55,0.946,56,1.85,63,0.496,209,4.107,217,3.132,310,1.78,403,2.847,607,4.635,612,3.754,624,3.516,625,5.401,626,6.424,627,6.424,628,4.635,629,4.097,630,4.097,631,4.097]],["title/injectables/S3Service.html",[43,0.872,632,2.361]],["body/injectables/S3Service.html",[3,0.067,4,0.058,5,0.058,7,0.129,8,0.714,12,0.067,14,0.019,38,1.349,39,0.533,40,0.004,41,0.007,42,0.004,43,0.646,45,0.681,47,0.75,52,1.106,54,1.474,55,0.744,56,1.402,58,1.409,63,0.446,65,0.228,68,0.048,70,1.214,72,1.758,73,1.398,74,1.259,94,1.914,96,0.807,97,1.15,98,2.368,107,0.761,111,0.916,132,3.133,146,1.773,168,1.903,201,2.882,206,1.15,231,2.076,240,2.234,270,1.441,304,1.058,310,2.497,444,3.084,494,3.113,552,1.15,558,3.448,594,3.869,632,1.75,633,1.42,634,3.502,635,3.502,636,2.738,637,2.738,638,2.738,639,2.738,640,2.738,641,2.738,642,2.738,643,2.738,644,1.655,645,6.136,646,2.738,647,1.655,648,1.655,649,2.738,650,1.655,651,2.738,652,1.655,653,2.738,654,4.509,655,1.655,656,1.42,657,2.738,658,3.502,659,1.655,660,2.738,661,1.655,662,2.738,663,1.655,664,2.35,665,1.655,666,1.655,667,2.35,668,1.655,669,1.655,670,1.655,671,1.655,672,1.655,673,1.655,674,1.655,675,1.655,676,1.655,677,1.655,678,1.655,679,1.655,680,1.655,681,1.655,682,1.655,683,4.509,684,4.07,685,1.655,686,1.655,687,1.655,688,4.509,689,3.502,690,1.655,691,1.655,692,1.655,693,1.655,694,1.655,695,1.655,696,1.655,697,2.738,698,1.655,699,1.655,700,1.655,701,1.655,702,1.655,703,1.655,704,1.655]],["title/modules/SVCAppModule.html",[170,1.063,705,2.567]],["body/modules/SVCAppModule.html",[3,0.188,4,0.161,5,0.161,12,0.188,14,0.019,40,0.012,41,0.015,42,0.012,63,0.535,65,0.634,68,0.135,170,1.84,172,1.895,173,2.388,174,2.731,175,2.731,176,2.388,177,2.388,178,2.548,185,3.454,186,2.731,187,2.731,189,3.02,501,4.523,705,4.917,706,3.953,707,3.953,708,4.607,709,4.607]],["title/modules/ThirdPartyModule.html",[170,1.063,710,2.567]],["body/modules/ThirdPartyModule.html",[3,0.151,4,0.129,5,0.129,12,0.151,14,0.019,40,0.009,41,0.013,42,0.009,63,0.612,65,0.51,68,0.108,107,1.702,170,1.653,172,1.523,173,1.919,174,2.195,175,2.195,176,1.919,177,2.977,178,3.176,185,2.992,186,2.195,187,2.195,189,1.919,190,3.507,301,3.226,563,4.626,584,3.177,632,4.626,710,4.943,711,3.177,712,3.177,713,3.177,714,3.702,715,3.702,716,3.86,717,3.702,718,3.702]],["title/interfaces/USER_AGENT_LIMIT_MODE.html",[0,0.639,21,1.801]],["body/interfaces/USER_AGENT_LIMIT_MODE.html",[0,1.18,1,1.812,2,1.375,3,0.151,4,0.13,5,0.13,6,1.927,7,0.291,8,1.319,9,2.799,10,3.893,11,2.799,12,0.278,13,1.812,14,0.019,15,2.799,16,2.799,17,1.812,18,2.799,19,2.799,20,2.799,21,2.467,22,3.574,23,3.574,24,1.812,25,2.623,26,2.799,27,2.799,28,2.799,29,1.812,30,2.799,31,2.799,32,2.799,33,1.709,34,1.307,35,2.056,36,2.198,37,1.927,38,0.974,39,0.368,40,0.009,41,0.013,42,0.009]],["title/injectables/ValidationPipe.html",[43,0.872,719,2.825]],["body/injectables/ValidationPipe.html",[3,0.138,4,0.119,5,0.119,7,0.266,12,0.138,14,0.019,38,0.654,39,0.471,40,0.009,41,0.012,42,0.009,43,1.123,45,1.399,47,1.304,52,0.916,54,1.304,55,0.616,56,1.241,58,1.304,63,0.505,65,0.468,68,0.161,70,1.296,72,1.326,89,1.763,94,1.661,95,2.363,130,1.763,134,5.103,146,1.745,156,2.918,240,1.477,270,2.258,296,1.563,547,4.084,548,4.084,552,4.133,553,4.084,572,4.711,591,2.6,719,3.639,720,2.918,721,4.759,722,4.759,723,3.4,724,5.49,725,5.946,726,3.4,727,3.4,728,2.918,729,3.4,730,4.759,731,3.4,732,3.4,733,3.4,734,3.4,735,3.4,736,3.4,737,3.4,738,3.4]],["title/coverage.html",[739,3.854]],["body/coverage.html",[0,1.125,1,1.007,5,0.072,6,2.923,13,1.007,14,0.019,17,1.007,21,1.007,24,1.007,29,1.007,33,0.95,40,0.005,41,0.008,42,0.005,43,1.487,44,1.943,46,1.772,55,0.267,68,0.176,73,0.595,75,1.772,79,1.435,81,1.772,92,1.32,93,1.772,128,1.58,129,1.772,176,1.071,222,1.711,223,1.435,225,1.772,234,1.225,248,1.32,262,1.772,285,1.435,286,1.772,289,1.225,290,1.772,292,1.225,293,1.772,294,1.588,301,1.32,302,1.772,320,1.225,321,2.506,326,1.435,328,1.435,329,1.772,336,1.32,346,1.143,358,1.435,359,1.772,365,1.435,373,1.772,388,1.772,404,1.58,417,1.435,418,1.772,434,3.222,441,1.598,443,1.32,454,1.225,466,2.831,470,1.32,478,1.772,507,1.58,508,2.506,515,2.277,529,1.772,541,1.772,563,1.32,564,2.506,591,5.735,612,1.435,615,1.58,624,1.772,628,3.495,632,1.32,633,1.772,716,1.58,719,1.58,720,1.772,739,1.58,740,2.065,741,2.065,742,2.065,743,6.3,744,6.731,745,2.812,746,6.025,747,1.772,748,6.409,749,1.772,750,4.073,751,5.639,752,2.812,753,1.772,754,2.065,755,2.065,756,1.772,757,1.772,758,1.772,759,1.772,760,2.812,761,2.065,762,2.065,763,2.065]],["title/dependencies.html",[173,2.303,495,2.648]],["body/dependencies.html",[14,0.019,40,0.009,41,0.012,42,0.009,65,0.479,67,2.065,68,0.142,89,1.806,91,1.513,105,3.701,106,2.664,107,1.601,122,3.363,145,4.153,173,1.806,192,2.227,252,2.664,269,2.989,304,3.094,393,2.989,401,2.664,403,2.421,412,4.153,426,2.664,437,1.806,439,2.227,578,2.989,579,2.989,580,2.989,582,2.989,583,2.989,664,2.989,667,2.989,728,2.989,764,3.483,765,3.483,766,3.483,767,3.483,768,3.483,769,3.483,770,3.483,771,3.483,772,6.009,773,3.483,774,3.483,775,3.483,776,3.483,777,3.483,778,3.483,779,3.483,780,3.483,781,3.483,782,4.839,783,3.483,784,3.483,785,3.483,786,3.483,787,3.483,788,3.483,789,3.483,790,3.483,791,3.483,792,3.483,793,3.483,794,3.483,795,3.483,796,3.483,797,3.483,798,3.483,799,3.483,800,3.483,801,3.483,802,3.483,803,3.483,804,3.483,805,3.483,806,3.483,807,3.483,808,3.483]],["title/miscellaneous/functions.html",[809,2.145,810,3.812]],["body/miscellaneous/functions.html",[7,0.418,14,0.016,40,0.014,41,0.016,42,0.014,176,3.539,615,5.221,752,4.588,753,5.858,759,4.588,809,3.715,810,4.588,811,6.384,812,5.346]],["title/index.html",[7,0.241,813,3.086,814,3.086]],["body/index.html",[4,0.133,14,0.019,40,0.01,41,0.013,42,0.01,123,2.918,489,2.918,542,3.274,739,2.918,815,3.815,816,3.815,817,5.151,818,3.815,819,3.815,820,3.815,821,3.815,822,3.815,823,3.815,824,5.831,825,3.815,826,3.815,827,3.815,828,3.815,829,6.868,830,3.815,831,3.815,832,3.274,833,6.718,834,3.815,835,3.815,836,5.151,837,3.815,838,3.815,839,3.815,840,3.815,841,5.151,842,5.151,843,3.815,844,3.815,845,3.815,846,5.151,847,5.151,848,3.815,849,3.815,850,3.815,851,3.815,852,3.274,853,3.815,854,3.815,855,3.815,856,3.815,857,3.815,858,3.815,859,3.815,860,3.815,861,3.815,862,3.815,863,3.815,864,3.815,865,3.815,866,3.815,867,3.815,868,3.815,869,3.815]],["title/modules.html",[172,2.073]],["body/modules.html",[14,0.015,40,0.012,41,0.015,42,0.012,171,3.277,172,1.94,181,3.014,182,3.014,183,3.014,184,3.014,198,3.277,501,3.014,705,3.277,710,3.277,852,5.986,870,6.975,871,6.975,872,7.367,873,6.772,874,6.772]],["title/overview.html",[875,4.324]],["body/overview.html",[2,1.289,14,0.019,40,0.009,41,0.012,42,0.009,45,1.433,80,1.601,92,3.555,170,1.003,171,4.884,172,1.433,173,1.806,174,2.065,175,2.065,176,1.806,177,1.806,178,1.927,179,2.989,180,2.989,181,4.437,182,4.036,183,3.555,184,3.555,185,2.869,186,2.065,187,2.065,224,1.433,234,3.297,246,2.989,247,2.989,248,3.555,346,3.076,376,2.989,377,2.989,501,3.555,563,4.285,632,4.285,705,4.176,706,2.989,707,2.989,710,4.75,711,2.989,712,2.989,713,2.989,875,2.989,876,4.839,877,3.483,878,3.483,879,3.483]],["title/miscellaneous/variables.html",[809,2.145,880,3.812]],["body/miscellaneous/variables.html",[7,0.271,14,0.019,38,0.668,40,0.009,41,0.012,42,0.009,55,0.625,70,1.14,73,1.598,94,1.05,98,2.706,146,1.104,209,2.219,217,1.692,304,3.086,310,1.508,321,2.654,326,3.355,327,2.979,404,3.692,508,2.654,515,4.17,518,2.979,552,4.82,564,2.654,581,2.979,586,2.979,618,2.979,656,5.952,716,3.692,745,2.979,747,4.143,749,4.143,756,2.979,757,4.143,758,2.979,760,2.979,809,2.412,832,2.979,880,2.979,881,4.827,882,4.827,883,3.471,884,3.471,885,3.471,886,3.471,887,3.471,888,3.471,889,3.471,890,3.471,891,3.471,892,3.471,893,4.827,894,4.827,895,3.471,896,3.471,897,3.471,898,3.471,899,3.471,900,3.471]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":591,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":74,"title":{"injectables/AdminAuthGuard-1.html":{},"interfaces/Hero-1.html":{}},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["1.24.6",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["10001",{"_index":475,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["11",{"_index":878,"title":{},"body":{"overview.html":{}}}],["12.1.4",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["12h",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["13",{"_index":879,"title":{},"body":{"overview.html":{}}}],["2",{"_index":473,"title":{"interfaces/Hero-2.html":{}},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["2.0.0",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["2.908.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["4.27.2",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["5.12.8",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":877,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["7.1.2",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["73.0.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":876,"title":{},"body":{"overview.html":{}}}],["9.0.2",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":535,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["_id",{"_index":37,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/GameDto.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["absolute",{"_index":538,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["accesskeyid",{"_index":670,"title":{},"body":{"injectables/S3Service.html":{}}}],["accountid",{"_index":569,"title":{},"body":{"injectables/PointsService.html":{}}}],["add",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["admin",{"_index":110,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["admin/game",{"_index":331,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["adminauthguard",{"_index":44,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["adminlogin",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["adminlogin(@body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminlogin(authcode",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["adminlogin(body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminloginrequestdto",{"_index":79,"title":{"classes/AdminLoginRequestDto.html":{}},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["adminstrategy",{"_index":92,"title":{"injectables/AdminStrategy.html":{}},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["admintoken",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["algorithm",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":119,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["allexceptionfilter",{"_index":128,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":853,"title":{},"body":{"index.html":{}}}],["answer_display_mode",{"_index":1,"title":{"interfaces/ANSWER_DISPLAY_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["apibearerauth",{"_index":344,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apibearerauth('admin",{"_index":352,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apiokresponse",{"_index":343,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apiproperty",{"_index":90,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["apiproperty()@isstring",{"_index":287,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["apitags",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["apitags('auth",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":350,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apitags('health",{"_index":428,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('hero",{"_index":453,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["app",{"_index":831,"title":{},"body":{"index.html":{}}}],["applications",{"_index":823,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":171,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":631,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["argumentexception",{"_index":556,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["argumentmetadata",{"_index":725,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":136,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["array",{"_index":737,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["asc",{"_index":30,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["async",{"_index":94,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":575,"title":{},"body":{"injectables/PointsService.html":{}}}],["auth.controller",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/admin.guard",{"_index":345,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["auth_mode",{"_index":24,"title":{"interfaces/AUTH_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["authcode",{"_index":82,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["authcontroller",{"_index":223,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":66,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["authguard('admin",{"_index":69,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["authguard('member",{"_index":78,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["authmodule",{"_index":181,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":862,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":234,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":874,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["aws",{"_index":664,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["aws.config.update",{"_index":669,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3",{"_index":677,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3.types",{"_index":662,"title":{},"body":{"injectables/S3Service.html":{}}}],["backers",{"_index":854,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/S3Service.html":{}}}],["body.authcode",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.redirecturl",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":572,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapmicroservices",{"_index":753,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":872,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":870,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":680,"title":{},"body":{"injectables/S3Service.html":{}}}],["building",{"_index":818,"title":{},"body":{"index.html":{}}}],["cache",{"_index":412,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":363,"title":{},"body":{"controllers/GameController.html":{}}}],["cachekey",{"_index":410,"title":{},"body":{"injectables/GameService.html":{}}}],["cachemodule",{"_index":379,"title":{},"body":{"modules/GameModule.html":{}}}],["cachemodule.registerasync",{"_index":383,"title":{},"body":{"modules/GameModule.html":{}}}],["callhandler",{"_index":512,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":48,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["canactivate(context",{"_index":50,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["catch",{"_index":132,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["catch(exception",{"_index":133,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["check",{"_index":420,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":68,"title":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/HeroError.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":80,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/HeroError.html":{},"overview.html":{}}}],["client",{"_index":456,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["clientgrpc",{"_index":436,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["clientsmodule",{"_index":487,"title":{},"body":{"modules/HeroModule.html":{}}}],["clientsmodule.register",{"_index":491,"title":{},"body":{"modules/HeroModule.html":{}}}],["cluster_appmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":376,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_providers",{"_index":377,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_svcappmodule",{"_index":706,"title":{},"body":{"modules/SVCAppModule.html":{},"overview.html":{}}}],["cluster_svcappmodule_imports",{"_index":707,"title":{},"body":{"modules/SVCAppModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule",{"_index":711,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_exports",{"_index":712,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_providers",{"_index":713,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["code",{"_index":155,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["comming",{"_index":521,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["commitlint/config",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["completedts",{"_index":573,"title":{},"body":{"injectables/PointsService.html":{}}}],["config/configuration",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{}}}],["configmodule.forroot",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":98,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('event_bus_exchange_create_mode",{"_index":892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('hk01_sso_public_key",{"_index":536,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["configservice.get('http_cache_ttl",{"_index":385,"title":{},"body":{"modules/GameModule.html":{}}}],["configservice.get('mongo_database",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo_pass",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo_url",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mongo_user",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_host",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('rmq_url",{"_index":891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('sso_secret",{"_index":118,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["configuration",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":146,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"classes/HeroError.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["constructor(@inject('hero_package",{"_index":455,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["constructor(configservice",{"_index":97,"title":{},"body":{"injectables/AdminStrategy.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["constructor(errorcode",{"_index":446,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["constructor(eventbussdkservice",{"_index":566,"title":{},"body":{"injectables/PointsService.html":{}}}],["constructor(gamemodel",{"_index":390,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(jwtservice",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["context",{"_index":57,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":519,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":222,"title":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["controller('admin/game",{"_index":349,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["controller('game",{"_index":367,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('health",{"_index":427,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('hero",{"_index":452,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["controllers",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HeroController.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"overview.html":{}}}],["conventional",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["copysource",{"_index":692,"title":{},"body":{"injectables/S3Service.html":{}}}],["coverage",{"_index":739,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":463,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["create(createheroinput",{"_index":480,"title":{},"body":{"controllers/HeroController.html":{}}}],["created",{"_index":406,"title":{},"body":{"injectables/GameService.html":{}}}],["created.save",{"_index":408,"title":{},"body":{"injectables/GameService.html":{}}}],["creategame",{"_index":332,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["creategame(@body",{"_index":356,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(body",{"_index":334,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(name",{"_index":396,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamereq",{"_index":285,"title":{"classes/CreateGameReq.html":{}},"body":{"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["createheroinput",{"_index":464,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["createheroinput.name",{"_index":465,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["createherorequestdto",{"_index":289,"title":{"classes/CreateHeroRequestDto.html":{}},"body":{"classes/CreateHeroRequestDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["createheroresponsedto",{"_index":292,"title":{"classes/CreateHeroResponseDto.html":{}},"body":{"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["ctx",{"_index":147,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":150,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":149,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["data",{"_index":506,"title":{},"body":{"controllers/HeroesService.html":{}}}],["data.id",{"_index":477,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["date().toisostring",{"_index":167,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["date.now",{"_index":524,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["dbname",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["decorators",{"_index":84,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{}}}],["default",{"_index":656,"title":{},"body":{"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":52,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["defines",{"_index":543,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["definition",{"_index":312,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["delete",{"_index":636,"title":{},"body":{"injectables/S3Service.html":{}}}],["delete(key",{"_index":643,"title":{},"body":{"injectables/S3Service.html":{}}}],["deleted",{"_index":20,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":31,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["description",{"_index":542,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"index.html":{}}}],["development",{"_index":832,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["digital/eventbus",{"_index":582,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["digital/shared",{"_index":578,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["document",{"_index":35,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["documentation",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":474,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["dotenv",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["draft",{"_index":18,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["dto",{"_index":440,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["dto/adminlogin.dto",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos",{"_index":348,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["dynamicmodule",{"_index":609,"title":{},"body":{"modules/RedisModule.html":{}}}],["e2e",{"_index":843,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":819,"title":{},"body":{"index.html":{}}}],["email",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["env",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envelope",{"_index":307,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["env}.config.yml",{"_index":889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":62,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["error",{"_index":444,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["error('protobuf",{"_index":595,"title":{},"body":{"injectables/PointsService.html":{}}}],["error('s3",{"_index":688,"title":{},"body":{"injectables/S3Service.html":{}}}],["error('test",{"_index":461,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["errorcode",{"_index":445,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["errors",{"_index":732,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":734,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors[0",{"_index":735,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["established",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":579,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["event_bus_sdk",{"_index":890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventbus",{"_index":600,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk",{"_index":581,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["eventbussdk.createenvelopewithbody(message",{"_index":597,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk.provider",{"_index":717,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["eventbussdk.service",{"_index":584,"title":{},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{}}}],["eventbussdkproviders",{"_index":716,"title":{},"body":{"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventbussdkservice",{"_index":301,"title":{"classes/EventBusSDKService.html":{}},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{}}}],["exception",{"_index":138,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.constraints",{"_index":160,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":158,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['code",{"_index":165,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['details",{"_index":164,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['message",{"_index":154,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfilter",{"_index":131,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["executioncontext",{"_index":51,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["expected",{"_index":562,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["expiresin",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":12,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["express",{"_index":145,"title":{},"body":{"classes/AllExceptionFilter.html":{},"dependencies.html":{}}}],["ext",{"_index":697,"title":{},"body":{"injectables/S3Service.html":{}}}],["extends",{"_index":34,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"interfaces/IGame.html":{},"injectables/MemberStrategy.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["extractjwt",{"_index":103,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":114,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["failed",{"_index":561,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["fails",{"_index":557,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filename",{"_index":648,"title":{},"body":{"injectables/S3Service.html":{}}}],["findone",{"_index":504,"title":{},"body":{"controllers/HeroesService.html":{}}}],["findone(data",{"_index":442,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{}}}],["folder1",{"_index":699,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1}/${folder2}/${key",{"_index":703,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder2",{"_index":701,"title":{},"body":{"injectables/S3Service.html":{}}}],["forroot",{"_index":605,"title":{},"body":{"modules/RedisModule.html":{}}}],["forroot(options",{"_index":606,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync",{"_index":610,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":611,"title":{},"body":{"modules/RedisModule.html":{}}}],["found",{"_index":371,"title":{},"body":{"controllers/GameController.html":{}}}],["framework",{"_index":817,"title":{},"body":{"index.html":{}}}],["fs",{"_index":533,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["function",{"_index":628,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["functions",{"_index":810,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":320,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["game.controller",{"_index":382,"title":{},"body":{"modules/GameModule.html":{}}}],["game.name",{"_index":387,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":347,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["game_data:${id",{"_index":411,"title":{},"body":{"injectables/GameService.html":{}}}],["game_status",{"_index":17,"title":{"interfaces/GAME_STATUS.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["game_type",{"_index":13,"title":{"interfaces/GAME_TYPE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["gameadmin.controller",{"_index":381,"title":{},"body":{"modules/GameModule.html":{}}}],["gameadmincontroller",{"_index":328,"title":{"controllers/GameAdminController.html":{}},"body":{"controllers/GameAdminController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamecompleted",{"_index":585,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.create(pojo",{"_index":596,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.verify(pojo",{"_index":593,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecontroller",{"_index":358,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamedto",{"_index":336,"title":{"classes/GameDto.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"coverage.html":{}}}],["gamedto})@get('/:id",{"_index":361,"title":{},"body":{"controllers/GameController.html":{}}}],["gameid",{"_index":577,"title":{},"body":{"injectables/PointsService.html":{}}}],["gameid.tostring",{"_index":590,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamemodel",{"_index":395,"title":{},"body":{"injectables/GameService.html":{}}}],["gamemodule",{"_index":182,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameschema",{"_index":326,"title":{},"body":{"classes/Game.html":{},"modules/GameModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gameservice",{"_index":346,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genkeybyfilename",{"_index":637,"title":{},"body":{"injectables/S3Service.html":{}}}],["genkeybyfilename(filename",{"_index":646,"title":{},"body":{"injectables/S3Service.html":{}}}],["get('/:id",{"_index":353,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["get('/:id')@apiokresponse({type",{"_index":339,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["get(':id",{"_index":459,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["get()@healthcheck",{"_index":421,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(key",{"_index":649,"title":{},"body":{"injectables/S3Service.html":{}}}],["getbyid",{"_index":479,"title":{},"body":{"controllers/HeroController.html":{}}}],["getbyid(@param('id",{"_index":460,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["getbyid(id",{"_index":482,"title":{},"body":{"controllers/HeroController.html":{}}}],["getgame",{"_index":333,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgame(@param('id",{"_index":354,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["getgame(id",{"_index":338,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgamewithcache",{"_index":389,"title":{},"body":{"injectables/GameService.html":{}}}],["getgamewithcache(id",{"_index":399,"title":{},"body":{"injectables/GameService.html":{}}}],["getobjecthead",{"_index":638,"title":{},"body":{"injectables/S3Service.html":{}}}],["getobjecthead(key",{"_index":651,"title":{},"body":{"injectables/S3Service.html":{}}}],["getredistoken",{"_index":615,"title":{},"body":{"modules/RedisModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gets3param",{"_index":639,"title":{},"body":{"injectables/S3Service.html":{}}}],["gets3param(key",{"_index":653,"title":{},"body":{"injectables/S3Service.html":{}}}],["getting",{"_index":813,"title":{"index.html":{}},"body":{}}],["global",{"_index":621,"title":{},"body":{"modules/RedisModule.html":{}}}],["google",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["google.auth.oauth2",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleapis",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["graph",{"_index":873,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":849,"title":{},"body":{"index.html":{}}}],["grpc",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["grpcmethod",{"_index":468,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["handle",{"_index":525,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handlerequest",{"_index":49,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["handlerequest(err",{"_index":59,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["health",{"_index":419,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":433,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":423,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":424,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":417,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":183,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helmet",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":859,"title":{},"body":{"index.html":{}}}],["hero",{"_index":294,"title":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{}},"body":{"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["hero.controller",{"_index":490,"title":{},"body":{"modules/HeroModule.html":{}}}],["hero/hero.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["hero_package",{"_index":492,"title":{},"body":{"modules/HeroModule.html":{}}}],["herobyid",{"_index":470,"title":{"interfaces/HeroById.html":{}},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["herocontroller",{"_index":454,"title":{"controllers/HeroController.html":{}},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"coverage.html":{}}}],["heroerror",{"_index":443,"title":{"classes/HeroError.html":{}},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["heroesservice",{"_index":441,"title":{"controllers/HeroesService.html":{}},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["heromodule",{"_index":198,"title":{"modules/HeroModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeroModule.html":{},"modules.html":{}}}],["heroscv/herosvc.module",{"_index":709,"title":{},"body":{"modules/SVCAppModule.html":{}}}],["herosvc.controller",{"_index":503,"title":{},"body":{"modules/HeroSVCModule.html":{}}}],["herosvcmodule",{"_index":501,"title":{"modules/HeroSVCModule.html":{}},"body":{"modules/HeroSVCModule.html":{},"modules/SVCAppModule.html":{},"modules.html":{},"overview.html":{}}}],["hk01",{"_index":122,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/PointsService.html":{},"dependencies.html":{}}}],["hk01.protobuf.game.mcgame",{"_index":586,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["hk01_webview_only",{"_index":22,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["host",{"_index":135,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["host.switchtohttp",{"_index":148,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["hs256",{"_index":120,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["httpexception",{"_index":140,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["httpexception('game",{"_index":370,"title":{},"body":{"controllers/GameController.html":{}}}],["https://nestjs.com",{"_index":866,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":141,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["httpstatus.bad_request",{"_index":159,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["httpstatus.internal_server_error",{"_index":152,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":372,"title":{},"body":{"controllers/GameController.html":{}}}],["id",{"_index":295,"title":{},"body":{"classes/CreateHeroResponseDto.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{}}}],["identifier",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["igame",{"_index":33,"title":{"interfaces/IGame.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"injectables/GameService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":115,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["implements",{"_index":130,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":63,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{}}}],["in_question",{"_index":9,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["initializing",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["inject('event_bus_sdk",{"_index":311,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["inject(getredistoken",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":43,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":45,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":402,"title":{},"body":{"injectables/GameService.html":{}}}],["injectmodel(game.name",{"_index":405,"title":{},"body":{"injectables/GameService.html":{}}}],["injectredis",{"_index":404,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insert",{"_index":599,"title":{},"body":{"injectables/PointsService.html":{}}}],["installation",{"_index":828,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":830,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":157,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["instead",{"_index":539,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["integrate",{"_index":594,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["intercept",{"_index":509,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":510,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"overview.html":{}}}],["interfaces/hero.interface",{"_index":300,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["ioredis",{"_index":403,"title":{},"body":{"injectables/GameService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"dependencies.html":{}}}],["ioredis(options",{"_index":620,"title":{},"body":{"modules/RedisModule.html":{}}}],["ioredismoduleconnectiontoken",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfirsttimegamer",{"_index":571,"title":{},"body":{"injectables/PointsService.html":{}}}],["isglobal",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":297,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["isstring",{"_index":88,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/GameDto.html":{}}}],["isstring()@apiproperty",{"_index":85,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/GameDto.html":{}}}],["issuer",{"_index":121,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["items",{"_index":471,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["john",{"_index":472,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["join",{"_index":489,"title":{},"body":{"modules/HeroModule.html":{},"injectables/MemberStrategy.html":{},"index.html":{}}}],["join(__dirname",{"_index":497,"title":{},"body":{"modules/HeroModule.html":{}}}],["js",{"_index":583,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["json.parse(cache",{"_index":414,"title":{},"body":{"injectables/GameService.html":{}}}],["json.stringify(result",{"_index":416,"title":{},"body":{"injectables/GameService.html":{}}}],["jwt",{"_index":106,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":113,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["jwtmodule",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":863,"title":{},"body":{"index.html":{}}}],["key",{"_index":645,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(0",{"_index":700,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(1",{"_index":702,"title":{},"body":{"injectables/S3Service.html":{}}}],["legend",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["license",{"_index":869,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":847,"title":{},"body":{"index.html":{}}}],["load",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["loader",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["localhost:50051",{"_index":500,"title":{},"body":{"modules/HeroModule.html":{}}}],["logger",{"_index":515,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('eventbussdk",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('requestlog",{"_index":518,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["logger(pointsservice.name",{"_index":588,"title":{},"body":{"injectables/PointsService.html":{}}}],["logger.log",{"_index":527,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger.log('rmq",{"_index":893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`request",{"_index":520,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logginginterceptor",{"_index":507,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["lotteryrewardid",{"_index":574,"title":{},"body":{"injectables/PointsService.html":{}}}],["manager",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":41,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxtimeout",{"_index":318,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["member",{"_index":534,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["member_bind_phone",{"_index":28,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["member_without_bind_phone",{"_index":27,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["memberstrategy",{"_index":248,"title":{"injectables/MemberStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":153,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{}}}],["metadata",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":724,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":47,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["middlewares/objectid.pipe",{"_index":366,"title":{},"body":{"controllers/GameController.html":{}}}],["miscellaneous",{"_index":809,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":846,"title":{},"body":{"index.html":{}}}],["mode",{"_index":836,"title":{},"body":{"index.html":{}}}],["model",{"_index":391,"title":{},"body":{"injectables/GameService.html":{}}}],["module",{"_index":170,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["modulemetadata",{"_index":629,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":544,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["mongoose",{"_index":401,"title":{},"body":{"injectables/GameService.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["mongoosehealthindicator",{"_index":425,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{}}}],["mongoosemodule.forfeature",{"_index":386,"title":{},"body":{"modules/GameModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":858,"title":{},"body":{"index.html":{}}}],["move",{"_index":640,"title":{},"body":{"injectables/S3Service.html":{}}}],["move(key",{"_index":657,"title":{},"body":{"injectables/S3Service.html":{}}}],["multiple_choice",{"_index":15,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["myśliwiec",{"_index":864,"title":{},"body":{"index.html":{}}}],["name",{"_index":39,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["nest",{"_index":824,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":868,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":514,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":65,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":630,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":107,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":437,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"classes/Game.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":67,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":426,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["new",{"_index":73,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newkey",{"_index":658,"title":{},"body":{"injectables/S3Service.html":{}}}],["newpayload",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":511,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["node.js",{"_index":816,"title":{},"body":{"index.html":{}}}],["none",{"_index":10,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["now",{"_index":523,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":528,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":829,"title":{},"body":{"index.html":{}}}],["number",{"_index":296,"title":{},"body":{"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["number(configservice.get('redis_port",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2client",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2client.gettoken(authcode",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":730,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.freeze",{"_index":679,"title":{},"body":{"injectables/S3Service.html":{}}}],["objectid",{"_index":545,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objectid.createfromhexstring(value",{"_index":560,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["observable",{"_index":438,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{}}}],["onmoduleinit",{"_index":435,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["open",{"_index":848,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":494,"title":{},"body":{"modules/HeroModule.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["options.imports",{"_index":623,"title":{},"body":{"modules/RedisModule.html":{}}}],["out",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["overview",{"_index":875,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":495,"title":{"dependencies.html":{}},"body":{"modules/HeroModule.html":{}}}],["param",{"_index":341,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":683,"title":{},"body":{"injectables/S3Service.html":{}}}],["parseobjectidpipe",{"_index":365,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/GameController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["pass",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["passport",{"_index":105,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":108,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["passportstrategy(strategy",{"_index":109,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["path",{"_index":168,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/HeroModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["path.extname(filename",{"_index":698,"title":{},"body":{"injectables/S3Service.html":{}}}],["payload",{"_index":102,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/MemberStrategy.html":{}}}],["payload.email",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.name",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.picture",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.sub",{"_index":125,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["payload.username",{"_index":127,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["pick",{"_index":625,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["pipe",{"_index":526,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["pipetransform",{"_index":553,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":727,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":731,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":856,"title":{},"body":{"index.html":{}}}],["points.service",{"_index":715,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["pointsservice",{"_index":563,"title":{"injectables/PointsService.html":{}},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["pojo",{"_index":589,"title":{},"body":{"injectables/PointsService.html":{}}}],["port",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["post('/')@apiokresponse({type",{"_index":335,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["post('adminlogin",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["post_game",{"_index":11,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["prefix",{"_index":330,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{}}}],["private",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":838,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":815,"title":{},"body":{"index.html":{}}}],["project",{"_index":123,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["promise",{"_index":310,"title":{},"body":{"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["prop",{"_index":322,"title":{},"body":{"classes/Game.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"classes/HeroError.html":{},"interfaces/IGame.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["proto",{"_index":580,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["proto/hero.proto",{"_index":498,"title":{},"body":{"modules/HeroModule.html":{}}}],["protopath",{"_index":496,"title":{},"body":{"modules/HeroModule.html":{}}}],["provide",{"_index":618,"title":{},"body":{"modules/RedisModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":614,"title":{},"body":{"modules/RedisModule.html":{}}}],["providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HeroSVCModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["psy_test",{"_index":16,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["public",{"_index":25,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["publish",{"_index":303,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["publish(routingpath",{"_index":306,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["published",{"_index":19,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["publishgamecompleted",{"_index":565,"title":{},"body":{"injectables/PointsService.html":{}}}],["publishgamecompleted(gameid",{"_index":568,"title":{},"body":{"injectables/PointsService.html":{}}}],["question_order_mode",{"_index":29,"title":{"interfaces/QUESTION_ORDER_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["queue",{"_index":601,"title":{},"body":{"injectables/PointsService.html":{}}}],["r",{"_index":665,"title":{},"body":{"injectables/S3Service.html":{}}}],["r.merge(r.clone(this.s3setting",{"_index":682,"title":{},"body":{"injectables/S3Service.html":{}}}],["ramda",{"_index":666,"title":{},"body":{"injectables/S3Service.html":{}}}],["random",{"_index":32,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["read",{"_index":857,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":532,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["readonly",{"_index":36,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"injectables/GameService.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["record",{"_index":654,"title":{},"body":{"injectables/S3Service.html":{}}}],["redirecturl",{"_index":83,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["redis",{"_index":393,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_module_connection_token",{"_index":757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisclient",{"_index":392,"title":{},"body":{"injectables/GameService.html":{}}}],["redisconnectionprovider",{"_index":617,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":184,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["redismoduleasyncoptions",{"_index":612,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["redisoptions",{"_index":607,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["reflect",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":674,"title":{},"body":{"injectables/S3Service.html":{}}}],["remarks",{"_index":554,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["repository",{"_index":827,"title":{},"body":{"index.html":{}}}],["request",{"_index":143,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["request.path",{"_index":522,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request.url",{"_index":169,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["res",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.set('authorization",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["response",{"_index":144,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{}}}],["response.json",{"_index":162,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["result",{"_index":40,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":42,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":316,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["retry",{"_index":315,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["return",{"_index":70,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":58,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["routingpath",{"_index":309,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["rpcexception",{"_index":469,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["rs256",{"_index":540,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["run",{"_index":833,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":439,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":517,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":634,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.service",{"_index":718,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["s3service",{"_index":632,"title":{"injectables/S3Service.html":{}},"body":{"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["s3setting",{"_index":635,"title":{},"body":{"injectables/S3Service.html":{}}}],["scalable",{"_index":820,"title":{},"body":{"index.html":{}}}],["schema",{"_index":324,"title":{},"body":{"classes/Game.html":{},"modules/GameModule.html":{}}}],["schemafactory",{"_index":325,"title":{},"body":{"classes/Game.html":{}}}],["schemafactory.createforclass(game",{"_index":327,"title":{},"body":{"classes/Game.html":{},"miscellaneous/variables.html":{}}}],["schemas",{"_index":380,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{}}}],["scoreingame",{"_index":570,"title":{},"body":{"injectables/PointsService.html":{}}}],["sdk",{"_index":304,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sdk.connect",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":672,"title":{},"body":{"injectables/S3Service.html":{}}}],["secretorkey",{"_index":117,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["server",{"_index":821,"title":{},"body":{"index.html":{}}}],["side",{"_index":822,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":851,"title":{},"body":{"index.html":{}}}],["src/.../configuration.ts",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eventbussdk.provider.ts",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.schema.ts",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.interceptor.ts",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../points.service.ts",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/adminlogin.dto.ts",{"_index":81,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/adminlogin.dto.ts:11",{"_index":87,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/dto/adminlogin.dto.ts:7",{"_index":86,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/guards/admin.guard.ts",{"_index":46,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts:10",{"_index":53,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/admin.guard.ts:14",{"_index":61,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/member.guard.ts",{"_index":75,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{},"coverage.html":{}}}],["src/auth/guards/member.guard.ts:10",{"_index":76,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/guards/member.guard.ts:14",{"_index":77,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/strategies/admin.strategy.ts",{"_index":93,"title":{},"body":{"injectables/AdminStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/admin.strategy.ts:18",{"_index":101,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/admin.strategy.ts:7",{"_index":99,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts",{"_index":529,"title":{},"body":{"injectables/MemberStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/member.strategy.ts:25",{"_index":531,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts:9",{"_index":530,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/config/configuration.ts",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/dtos/creategame.dto.ts",{"_index":286,"title":{},"body":{"classes/CreateGameReq.html":{},"coverage.html":{}}}],["src/game/dtos/creategame.dto.ts:7",{"_index":288,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["src/game/dtos/game.dto.ts",{"_index":373,"title":{},"body":{"classes/GameDto.html":{},"coverage.html":{}}}],["src/game/dtos/game.dto.ts:11",{"_index":375,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/dtos/game.dto.ts:7",{"_index":374,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/game.controller.ts",{"_index":359,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:26",{"_index":362,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":378,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":388,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:11",{"_index":394,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:17",{"_index":397,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:22",{"_index":398,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:26",{"_index":400,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/gameadmin.controller.ts",{"_index":329,"title":{},"body":{"controllers/GameAdminController.html":{},"coverage.html":{}}}],["src/game/gameadmin.controller.ts:20",{"_index":340,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:29",{"_index":337,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/interfaces/game.interface.ts",{"_index":6,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["src/game/schemas/game.schema.ts",{"_index":321,"title":{},"body":{"classes/Game.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/schemas/game.schema.ts:6",{"_index":323,"title":{},"body":{"classes/Game.html":{}}}],["src/health/health.controller.ts",{"_index":418,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":422,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":431,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/hero/dto/createhero.request.dto.ts",{"_index":290,"title":{},"body":{"classes/CreateHeroRequestDto.html":{},"coverage.html":{}}}],["src/hero/dto/createhero.request.dto.ts:5",{"_index":291,"title":{},"body":{"classes/CreateHeroRequestDto.html":{}}}],["src/hero/dto/createhero.response.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateHeroResponseDto.html":{},"coverage.html":{}}}],["src/hero/dto/createhero.response.dto.ts:10",{"_index":299,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["src/hero/dto/createhero.response.dto.ts:7",{"_index":298,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["src/hero/hero.controller.ts",{"_index":434,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["src/hero/hero.controller.ts:25",{"_index":485,"title":{},"body":{"classes/HeroError.html":{}}}],["src/hero/hero.controller.ts:41",{"_index":484,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.controller.ts:46",{"_index":483,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.controller.ts:53",{"_index":481,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.module.ts",{"_index":486,"title":{},"body":{"modules/HeroModule.html":{}}}],["src/hero/interfaces/hero.interface.ts",{"_index":478,"title":{},"body":{"interfaces/Hero-2.html":{},"coverage.html":{}}}],["src/heroscv/herosvc.controller.ts",{"_index":466,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["src/heroscv/herosvc.controller.ts:21",{"_index":505,"title":{},"body":{"controllers/HeroesService.html":{}}}],["src/heroscv/herosvc.module.ts",{"_index":502,"title":{},"body":{"modules/HeroSVCModule.html":{}}}],["src/main.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/exception.filter.ts",{"_index":129,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/middlewares/exception.filter.ts:13",{"_index":137,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/middlewares/logger.interceptor.ts",{"_index":508,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/logger.interceptor.ts:15",{"_index":513,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/middlewares/objectid.pipe.ts",{"_index":541,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["src/middlewares/objectid.pipe.ts:23",{"_index":549,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["src/middlewares/validation.pipe.ts",{"_index":720,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/middlewares/validation.pipe.ts:18",{"_index":723,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/middlewares/validation.pipe.ts:6",{"_index":726,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/redis/constants.ts",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/redis/decorators.ts",{"_index":758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/redis/interface.ts",{"_index":624,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["src/redis/redis.module.ts",{"_index":603,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.module.ts:21",{"_index":613,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.module.ts:9",{"_index":608,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/utils.ts",{"_index":759,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/svc.module.ts",{"_index":708,"title":{},"body":{"modules/SVCAppModule.html":{}}}],["src/thirdparty/eventbussdk.provider.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/eventbussdk.service.ts",{"_index":302,"title":{},"body":{"classes/EventBusSDKService.html":{},"coverage.html":{}}}],["src/thirdparty/eventbussdk.service.ts:10",{"_index":308,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/eventbussdk.service.ts:4",{"_index":305,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/points.service.ts",{"_index":564,"title":{},"body":{"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/points.service.ts:10",{"_index":567,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/points.service.ts:16",{"_index":576,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/s3.service.ts",{"_index":633,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/thirdparty/s3.service.ts:10",{"_index":663,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:11",{"_index":642,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:25",{"_index":655,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:32",{"_index":661,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:43",{"_index":644,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:55",{"_index":659,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:69",{"_index":650,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:80",{"_index":647,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:89",{"_index":652,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/thirdparty.module.ts",{"_index":714,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["staff",{"_index":26,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["start",{"_index":834,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":837,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":839,"title":{},"body":{"index.html":{}}}],["started",{"_index":814,"title":{"index.html":{}},"body":{}}],["starter",{"_index":826,"title":{},"body":{"index.html":{}}}],["statements",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":604,"title":{},"body":{"modules/RedisModule.html":{}}}],["status",{"_index":151,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["statuscode",{"_index":163,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["stay",{"_index":860,"title":{},"body":{"index.html":{}}}],["store",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["strategies/admin.strategy",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/member.strategy",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":104,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["string",{"_index":38,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":112,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["super(message",{"_index":447,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["super.canactivate(context",{"_index":71,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["support",{"_index":852,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svcappmodule",{"_index":705,"title":{"modules/SVCAppModule.html":{}},"body":{"modules/SVCAppModule.html":{},"modules.html":{},"overview.html":{}}}],["svg",{"_index":871,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":516,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["terminusmodule",{"_index":432,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":842,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":845,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":844,"title":{},"body":{"index.html":{}}}],["tests",{"_index":841,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":850,"title":{},"body":{"index.html":{}}}],["thirdpartymodule",{"_index":710,"title":{"modules/ThirdPartyModule.html":{}},"body":{"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["this.authservice.adminlogin",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.client.getservice('heroesservice",{"_index":458,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.configservice.get('event_bus_max_timeout",{"_index":319,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('event_bus_retry_time",{"_index":317,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('s3_bucket",{"_index":681,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_bucket')}/${key",{"_index":693,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_key",{"_index":671,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_secret",{"_index":673,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_region",{"_index":675,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('sso_google_cilentid",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('sso_google_secret",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.constructor.name",{"_index":449,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.delete(key",{"_index":695,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.errorcode",{"_index":451,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.eventbussdkservice.publish(topic",{"_index":598,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.gamemodel",{"_index":407,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamemodel.findbyid(id",{"_index":409,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameservice.creategame(name",{"_index":357,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgame(id",{"_index":355,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgamewithcache(id",{"_index":369,"title":{},"body":{"controllers/GameController.html":{}}}],["this.getobjecthead(key",{"_index":689,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(key",{"_index":684,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(newkey",{"_index":691,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.health.check([async",{"_index":429,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.heroesservice",{"_index":457,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.heroesservice.findone",{"_index":462,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.items.find",{"_index":476,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["this.jwtservice.decode(tk.tokens.id_token",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(newpayload",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":587,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.logger.error('eventbus",{"_index":602,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.message",{"_index":450,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.mongoose.pingcheck('mongoose",{"_index":430,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.name",{"_index":448,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.redisclient.get(cachekey",{"_index":413,"title":{},"body":{"injectables/GameService.html":{}}}],["this.redisclient.set(cachekey",{"_index":415,"title":{},"body":{"injectables/GameService.html":{}}}],["this.s3",{"_index":676,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.copyobject(params).promise",{"_index":694,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.deleteobject(params).promise",{"_index":690,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.getobject(params).promise",{"_index":696,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.headobject(params).promise",{"_index":704,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.upload(params).promise",{"_index":686,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3setting",{"_index":678,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.sdk.publish",{"_index":313,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.tovalidate(metatype",{"_index":729,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":72,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["throws",{"_index":555,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["timestamp",{"_index":166,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["tk",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["topic",{"_index":314,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["touch",{"_index":861,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":721,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":722,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":547,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":548,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"injectables/ValidationPipe.html":{}}}],["transformation",{"_index":546,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transformedobjectid",{"_index":559,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transformer",{"_index":728,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforms",{"_index":551,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transport",{"_index":488,"title":{},"body":{"modules/HeroModule.html":{}}}],["transport.grpc",{"_index":493,"title":{},"body":{"modules/HeroModule.html":{}}}],["true",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["try",{"_index":558,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["ttl",{"_index":384,"title":{},"body":{"modules/GameModule.html":{}}}],["twitter",{"_index":867,"title":{},"body":{"index.html":{}}}],["type",{"_index":55,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":736,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":738,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":825,"title":{},"body":{"index.html":{}}}],["ui",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":64,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["undefined",{"_index":156,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":840,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":134,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["upload",{"_index":641,"title":{},"body":{"injectables/S3Service.html":{}}}],["upload(body",{"_index":660,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded",{"_index":685,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded.location",{"_index":687,"title":{},"body":{"injectables/S3Service.html":{}}}],["uri",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":499,"title":{},"body":{"modules/HeroModule.html":{}}}],["useclass",{"_index":626,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["useexisting",{"_index":627,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["usefactory",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["usefactory(options",{"_index":622,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefilters",{"_index":467,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["useguards",{"_index":342,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useguards(adminauthguard",{"_index":351,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useinterceptors",{"_index":364,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":368,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor)@apiokresponse({type",{"_index":360,"title":{},"body":{"controllers/GameController.html":{}}}],["user",{"_index":60,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"modules/AppModule.html":{}}}],["user_agent_limit_mode",{"_index":21,"title":{"interfaces/USER_AGENT_LIMIT_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["userid",{"_index":124,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["username",{"_index":126,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["usevalue",{"_index":619,"title":{},"body":{"modules/RedisModule.html":{}}}],["using",{"_index":537,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["utils",{"_index":616,"title":{},"body":{"modules/RedisModule.html":{}}}],["uuid",{"_index":667,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":668,"title":{},"body":{"injectables/S3Service.html":{}}}],["validate",{"_index":95,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":733,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":100,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["validates",{"_index":550,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["validation",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["validation_error",{"_index":161,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationerror",{"_index":142,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationpipe",{"_index":719,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":89,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/GameDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":552,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":880,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyerr",{"_index":592,"title":{},"body":{"injectables/PointsService.html":{}}}],["void",{"_index":139,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/HeroController.html":{}}}],["watch",{"_index":835,"title":{},"body":{"index.html":{}}}],["web_only",{"_index":23,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["website",{"_index":865,"title":{},"body":{"index.html":{}}}],["yaml_config_filename",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":855,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ANSWER_DISPLAY_MODE.html":{"url":"interfaces/ANSWER_DISPLAY_MODE.html","title":"interface - ANSWER_DISPLAY_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ANSWER_DISPLAY_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        IN_QUESTION\n                                \n                                \n                                        NONE\n                                \n                                \n                                        POST_GAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        IN_QUESTION\n                                    \n                                \n                                \n                                    \n                                        IN_QUESTION:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POST_GAME\n                                    \n                                \n                                \n                                    \n                                        POST_GAME:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AUTH_MODE.html":{"url":"interfaces/AUTH_MODE.html","title":"interface - AUTH_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AUTH_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        MEMBER_BIND_PHONE\n                                \n                                \n                                        MEMBER_WITHOUT_BIND_PHONE\n                                \n                                \n                                        PUBLIC\n                                \n                                \n                                        STAFF\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MEMBER_BIND_PHONE\n                                    \n                                \n                                \n                                    \n                                        MEMBER_BIND_PHONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MEMBER_WITHOUT_BIND_PHONE\n                                    \n                                \n                                \n                                    \n                                        MEMBER_WITHOUT_BIND_PHONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUBLIC\n                                    \n                                \n                                \n                                    \n                                        PUBLIC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        STAFF\n                                    \n                                \n                                \n                                    \n                                        STAFF:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard.html":{"url":"injectables/AdminAuthGuard.html","title":"injectable - AdminAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/admin.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('admin') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard-1.html":{"url":"injectables/AdminAuthGuard-1.html","title":"injectable - AdminAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/member.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('member') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminLoginRequestDto.html":{"url":"classes/AdminLoginRequestDto.html","title":"class - AdminLoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminLoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/adminLogin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authCode\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AdminLoginRequestDto {\n  @IsString()\n  @ApiProperty()\n  authCode: string;\n\n  @IsString()\n  @ApiProperty()\n  redirectUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStrategy.html":{"url":"injectables/AdminStrategy.html","title":"injectable - AdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/admin.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/admin.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/admin.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AdminStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SSO_SECRET'),\n      algorithms: ['HS256'],\n      // issuer: 'hk01-project',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = exception['message'];\n    let code = 'UNDEFINED';\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n    }\n    if (exception instanceof ValidationError) {\n      status = HttpStatus.BAD_REQUEST;\n      message = exception.constraints;\n      code = 'VALIDATION_ERROR';\n    }\n\n    response.json({\n      statusCode: status,\n      message: exception['details'] || message,\n      code: exception['code'] || code,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport configuration from './config/configuration';\nimport { HealthModule } from './health/health.module';\nimport { AuthModule } from './auth/auth.module';\nimport { RedisModule } from './redis/redis.module';\n\n// import { HeroModule } from './hero/hero.module';\nimport { GameModule } from './game/game.module';\n\n@Module({\n  imports: [\n    HealthModule,\n    // TODO: add validation\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n        user: configService.get('MONGO_USER'),\n        pass: configService.get('MONGO_PASS'),\n        dbName: configService.get('MONGO_DATABASE'),\n      }),\n      inject: [ConfigService],\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        host: configService.get('REDIS_HOST'),\n        port: Number(configService.get('REDIS_PORT')),\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    // HeroModule,\n    GameModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(body: AdminLoginRequestDto, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('adminLogin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AdminLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Response } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AuthService } from './auth.service';\nimport { AdminLoginRequestDto } from './dto/adminLogin.dto';\n\n@Controller('')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('adminLogin')\n  async adminLogin(@Body() body: AdminLoginRequestDto, @Response() res: any) {\n    const adminToken = await this.authService.adminLogin(\n      body.authCode,\n      body.redirectUrl,\n    );\n    res.set('Authorization', `Bearer ${adminToken}`);\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            MemberStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AdminStrategy } from './strategies/admin.strategy';\nimport { MemberStrategy } from './strategies/member.strategy';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SSO_SECRET'),\n        signOptions: {\n          expiresIn: '12h',\n          algorithm: 'HS256',\n          // issuer: 'hk01-project',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AdminStrategy, MemberStrategy, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(authCode: string, redirectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google } from 'googleapis';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async adminLogin(authCode: string, redirectUrl: string) {\n    const oAuth2Client = new google.auth.OAuth2(\n      this.configService.get('SSO_GOOGLE_CILENTID'),\n      this.configService.get('SSO_GOOGLE_SECRET'),\n      redirectUrl,\n    );\n    const tk = await oAuth2Client.getToken(authCode);\n    const payload: any = this.jwtService.decode(tk.tokens.id_token);\n    const newPayload = {\n      email: payload.email,\n      name: payload.name,\n      avatar: payload.picture,\n    };\n    return this.jwtService.sign(newPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameReq.html":{"url":"classes/CreateGameReq.html","title":"class - CreateGameReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/createGame.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/createGame.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGameReq {\n  @ApiProperty()\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHeroRequestDto.html":{"url":"classes/CreateHeroRequestDto.html","title":"class - CreateHeroRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHeroRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/dto/createHero.request.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.request.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateHeroRequestDto {\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHeroResponseDto.html":{"url":"classes/CreateHeroResponseDto.html","title":"class - CreateHeroResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHeroResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/dto/createHero.response.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Hero\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.response.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.response.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator';\n\nimport { Hero } from '../interfaces/hero.interface';\n\nexport class CreateHeroResponseDto implements Hero {\n  @IsInt()\n  id: number;\n\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBusSDKService.html":{"url":"classes/EventBusSDKService.html","title":"class - EventBusSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBusSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/eventBusSDK.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, sdk: any)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/eventBusSDK.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(routingPath: any, envelope: any)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/eventBusSDK.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routingPath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    envelope\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport class EventBusSDKService {\n  constructor(\n    private configService: ConfigService,\n    @Inject('EVENT_BUS_SDK') private sdk: any, // TODO: type definition\n  ) {}\n\n  async publish(routingPath: any, envelope: any): Promise {\n    await this.sdk.publish({\n      topic: routingPath,\n      envelope: envelope,\n      retry: {\n        retries: this.configService.get('EVENT_BUS_RETRY_TIME'),\n        maxTimeout: this.configService.get('EVENT_BUS_MAX_TIMEOUT'),\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GAME_STATUS.html":{"url":"interfaces/GAME_STATUS.html","title":"interface - GAME_STATUS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GAME_STATUS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        DELETED\n                                \n                                \n                                        DRAFT\n                                \n                                \n                                        PUBLISHED\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DELETED\n                                    \n                                \n                                \n                                    \n                                        DELETED:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRAFT\n                                    \n                                \n                                \n                                    \n                                        DRAFT:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUBLISHED\n                                    \n                                \n                                \n                                    \n                                        PUBLISHED:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GAME_TYPE.html":{"url":"interfaces/GAME_TYPE.html","title":"interface - GAME_TYPE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GAME_TYPE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        MULTIPLE_CHOICE\n                                \n                                \n                                        NONE\n                                \n                                \n                                        PSY_TEST\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MULTIPLE_CHOICE\n                                    \n                                \n                                \n                                    \n                                        MULTIPLE_CHOICE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PSY_TEST\n                                    \n                                \n                                \n                                    \n                                        PSY_TEST:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/schemas/game.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/schemas/game.schema.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema()\nexport class Game {\n  @Prop()\n  name: string;\n}\n\nexport const GameSchema = SchemaFactory.createForClass(Game);\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameAdminController.html":{"url":"controllers/GameAdminController.html","title":"controller - GameAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/gameAdmin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, UseGuards } from '@nestjs/common';\nimport { ApiTags, ApiOkResponse, ApiBearerAuth } from '@nestjs/swagger';\n\nimport { AdminAuthGuard } from '../auth/guards/admin.guard';\n\nimport { GameService } from './game.service';\nimport { CreateGameReq, GameDto } from './dtos';\n\n@Controller('admin/game')\n@ApiTags('game')\n// @UseGuards(AdminAuthGuard)\n@ApiBearerAuth('admin')\nexport class GameAdminController {\n  constructor(private gameService: GameService) {}\n\n  @Get('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async getGame(@Param('id') id: string): Promise {\n    const result = await this.gameService.getGame(id);\n    return result;\n  }\n\n  @Post('/')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async createGame(@Body() body: CreateGameReq): Promise {\n    const { name } = body;\n    const result = await this.gameService.createGame(name);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CacheInterceptor)@ApiOkResponse({type: GameDto})@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\nimport { GameService } from './game.service';\nimport { GameDto } from './dtos';\nimport { ParseObjectIdPipe } from '../middlewares/objectId.pipe';\n\n@Controller('game')\n@ApiTags('game')\nexport class GameController {\n  constructor(private gameService: GameService) {}\n\n  @UseInterceptors(CacheInterceptor)\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  @Get('/:id')\n  async getGame(@Param('id', ParseObjectIdPipe) id: string): Promise {\n    const result = await this.gameService.getGameWithCache(id);\n    if (!result) {\n      throw new HttpException('Game Not Found', HttpStatus.NOT_FOUND);\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDto.html":{"url":"classes/GameDto.html","title":"class - GameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/game.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class GameDto {\n  @IsString()\n  @ApiProperty()\n  _id: string;\n\n  @IsString()\n  @ApiProperty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameAdminController\n                        \n                        \n                            GameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { GameService } from './game.service';\nimport { Game, GameSchema } from './schemas';\nimport { GameAdminController } from './gameAdmin.controller';\nimport { GameController } from './game.controller';\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        ttl: configService.get('HTTP_CACHE_TTL'),\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([{ name: Game.name, schema: GameSchema }]),\n  ],\n  controllers: [GameAdminController, GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getGameWithCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameModel: Model, redisClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGameWithCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameWithCache(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Redis } from 'ioredis';\n\nimport { Game } from './schemas';\nimport { IGame } from './interfaces';\nimport { InjectRedis } from '../redis';\n\n@Injectable()\nexport class GameService {\n  constructor(\n    @InjectModel(Game.name) private readonly gameModel: Model,\n    @InjectRedis() private redisClient: Redis,\n  ) {}\n\n  async createGame(name: string): Promise {\n    const created = new this.gameModel({ name });\n    return created.save();\n  }\n\n  async getGame(id: string): Promise {\n    return this.gameModel.findById(id);\n  }\n\n  async getGameWithCache(id: string): Promise {\n    const cacheKey = `game_data:${id}`;\n    const cache = await this.redisClient.get(cacheKey);\n    if (cache) {\n      return JSON.parse(cache);\n    }\n    let result;\n    if (!cache) {\n      result = await this.gameModel.findById(id);\n      await this.redisClient.set(cacheKey, JSON.stringify(result));\n    }\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  MongooseHealthIndicator,\n} from '@nestjs/terminus';\n\n@Controller('health')\n@ApiTags('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private mongoose: MongooseHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([async () => this.mongoose.pingCheck('mongoose')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero.html":{"url":"interfaces/Hero.html","title":"interface - Hero","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero-1.html":{"url":"interfaces/Hero-1.html","title":"interface - Hero-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero-2.html":{"url":"interfaces/Hero-2.html","title":"interface - Hero-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/interfaces/hero.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Hero {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeroById.html":{"url":"interfaces/HeroById.html","title":"interface - HeroById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeroById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HeroController.html":{"url":"controllers/HeroController.html","title":"controller - HeroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HeroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                hero\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createHeroInput: CreateHeroRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/hero/hero.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createHeroInput\n                                    \n                                                CreateHeroRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/hero/hero.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/hero/hero.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeroError.html":{"url":"classes/HeroError.html","title":"class - HeroError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeroError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode, message)\n                    \n                \n                        \n                            \n                                Defined in src/hero/hero.controller.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/hero/hero.controller.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeroModule.html":{"url":"modules/HeroModule.html","title":"module - HeroModule","body":"\n                   \n\n\n\n\n    Modules\n    HeroModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/hero/hero.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HeroController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { join } from 'path';\nimport { HeroController } from './hero.controller';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'HERO_PACKAGE',\n        transport: Transport.GRPC,\n        options: {\n          package: 'hero',\n          protoPath: join(__dirname, '../../proto/hero.proto'),\n          url: 'localhost:50051',\n        },\n      },\n    ]),\n  ],\n  controllers: [HeroController],\n})\nexport class HeroModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeroSVCModule.html":{"url":"modules/HeroSVCModule.html","title":"module - HeroSVCModule","body":"\n                   \n\n\n\n\n    Modules\n    HeroSVCModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/heroscv/herosvc.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HeroesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HeroesService } from './herosvc.controller';\n\n@Module({\n  controllers: [HeroesService],\n  providers: [],\n})\nexport class HeroSVCModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HeroesService.html":{"url":"controllers/HeroesService.html","title":"controller - HeroesService","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HeroesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(data: HeroById)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod()\n                \n            \n\n            \n                \n                    Defined in src/heroscv/herosvc.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                HeroById\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Hero\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGame.html":{"url":"interfaces/IGame.html","title":"interface - IGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/logger.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst logger = new Logger('RequestLog');\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n\n    logger.log(`Request Comming [${request.path}]`);\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          logger.log(\n            `Request Response [${request.path} (${Date.now() - now}ms)]`,\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberStrategy.html":{"url":"injectables/MemberStrategy.html","title":"injectable - MemberStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/member.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/member.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/member.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class MemberStrategy extends PassportStrategy(Strategy, 'member') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: readFileSync(\n        join(\n          __dirname,\n          '../../..',\n          configService.get('HK01_SSO_PUBLIC_KEY'),\n        ), // TODO: using absolute path instead\n      ),\n      algorithms: ['RS256'],\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/objectId.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Defines the pipe for MongoDB ObjectID validation and transformation\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/objectId.pipe.ts:23\n                \n            \n\n\n            \n                \n                    Validates and transforms a value to a MongoDB ObjectID\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe value to validate and transform\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ObjectID\n\n                    \n                    \n                        The MongoDB ObjectID\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ObjectID } from 'mongodb';\n\n/**\n * Defines the pipe for MongoDB ObjectID validation and transformation\n */\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n  /**\n   * Validates and transforms a value to a MongoDB ObjectID\n   *\n   * @remarks\n   * Throws a ArgumentException if the validation fails\n   *\n   * @param value - The value to validate and transform\n   * @returns The MongoDB ObjectID\n   */\n  public transform(value: any): ObjectID {\n    try {\n      const transformedObjectId: ObjectID = ObjectID.createFromHexString(value);\n      return transformedObjectId;\n    } catch (error) {\n      throw new HttpException(\n        'Validation failed (ObjectId is expected)',\n        HttpStatus.BAD_REQUEST,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsService.html":{"url":"injectables/PointsService.html","title":"injectable - PointsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/points.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publishGameCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventBusSDKService: EventBusSDKService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventBusSDKService\n                                                  \n                                                        \n                                                                        EventBusSDKService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publishGameCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publishGameCompleted(gameId: number, accountId: number, scoreInGame: number, isFirstTimeGamer: boolean, completedTs: number, lotteryRewardId: number, attempt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/points.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreInGame\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFirstTimeGamer\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    completedTs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lotteryRewardId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attempt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { hk01 } from '@hk01-digital/shared-event-proto';\nimport EventbusSDK from '@hk01-digital/eventbus-js-sdk';\nimport { EventBusSDKService } from './eventBusSDK.service';\n\nconst { GameCompleted } = hk01.protobuf.game.mcgame;\n\n@Injectable()\nexport class PointsService {\n  logger: Logger;\n\n  constructor(private eventBusSDKService: EventBusSDKService) {\n    this.logger = new Logger(PointsService.name);\n  }\n\n  async publishGameCompleted(\n    gameId: number,\n    accountId: number,\n    scoreInGame: number,\n    isFirstTimeGamer: boolean,\n    completedTs: number,\n    lotteryRewardId: number,\n    attempt: number,\n  ): Promise {\n    try {\n      const pojo = {\n        gameId: gameId.toString(),\n        accountId: accountId,\n        scoreInGame: scoreInGame,\n        isFirstTimeGamer: isFirstTimeGamer === true ? 1 : 0,\n        attempt: attempt,\n        completedTs: completedTs,\n        lotteryRewardId: lotteryRewardId,\n      };\n\n      const verifyErr = GameCompleted.verify(pojo);\n      if (verifyErr) {\n        //TODO: integrate error\n        throw new Error('protobuf error');\n      }\n\n      const message = GameCompleted.create(pojo);\n      const { topic, envelope } = EventbusSDK.createEnvelopeWithBody(message);\n      return this.eventBusSDKService.publish(topic, envelope);\n    } catch (error) {\n      //TODO: insert to eventbus retry queue\n      this.logger.error('eventbus publish error');\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QUESTION_ORDER_MODE.html":{"url":"interfaces/QUESTION_ORDER_MODE.html","title":"interface - QUESTION_ORDER_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QUESTION_ORDER_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ASC\n                                \n                                \n                                        DESC\n                                \n                                \n                                        RANDOM\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ASC\n                                    \n                                \n                                \n                                    \n                                        ASC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DESC\n                                    \n                                \n                                \n                                    \n                                        DESC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RANDOM\n                                    \n                                \n                                \n                                    \n                                        RANDOM:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RedisOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/redis/redis.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RedisOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: RedisModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/redis/redis.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RedisModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Provider, DynamicModule } from '@nestjs/common';\nimport IORedis, { RedisOptions } from 'ioredis';\n\nimport { getRedisToken } from './utils';\nimport { RedisModuleAsyncOptions } from './interface';\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useValue: new IORedis(options),\n    };\n    return {\n      global: true,\n      module: RedisModule,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n  static forRootAsync(options: RedisModuleAsyncOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useFactory(options: RedisOptions) {\n        return new IORedis(options);\n      },\n    };\n\n    return {\n      global: true,\n      module: RedisModule,\n      imports: options.imports,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisModuleAsyncOptions.html":{"url":"interfaces/RedisModuleAsyncOptions.html","title":"interface - RedisModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedisModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\nimport { RedisOptions } from 'ioredis';\n\nexport interface RedisModuleAsyncOptions\n  extends Pick {\n  inject?: any[];\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (...args: any[]) => Promise | RedisOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/s3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                s3\n                            \n                            \n                                s3Setting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                genKeyByFilename\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getObjectHead\n                            \n                            \n                                    Private\n                                getS3Param\n                            \n                            \n                                    Async\n                                move\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKeyByFilename\n                        \n                        \n                    \n                \n            \n            \n                \ngenKeyByFilename(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjectHead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjectHead(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getS3Param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Param(key: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            move\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    move(key: string, newKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AWS.S3.Types\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3Setting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport * as AWS from 'aws-sdk'\nimport * as R from 'ramda'\nimport path from 'path'\nimport uuid from 'uuid/v4'\n\n@Injectable()\nexport class S3Service {\n  s3: AWS.S3.Types\n  s3Setting: Record\n\n  constructor(private configService: ConfigService) {\n    AWS.config.update({\n      accessKeyId: this.configService.get('S3_CLIENT_KEY'),\n      secretAccessKey: this.configService.get('S3_CLIENT_SECRET'),\n      region: this.configService.get('S3_REGION'),\n    })\n    this.s3 = new AWS.S3()\n    this.s3Setting = Object.freeze({\n      Bucket: this.configService.get('S3_BUCKET'),\n    })\n  }\n\n  private getS3Param(key: string, options: Record = {}): any {\n    return R.merge(R.clone(this.s3Setting), {\n      Key: key,\n      ...options,\n    })\n  }\n\n  async upload(body: string, key: string): Promise {\n    const params = this.getS3Param(key, { Body: body })\n    try {\n      const uploaded = await this.s3.upload(params).promise()\n      return uploaded.Location\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async delete(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      await this.s3.deleteObject(params).promise()\n      return true\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async move(key: string, newKey: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(newKey, {\n      CopySource: `${this.configService.get('S3_BUCKET')}/${key}`,\n    })\n    try {\n      await this.s3.copyObject(params).promise()\n      return await this.delete(key)\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async get(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.getObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  genKeyByFilename(filename: string): string {\n    const ext = path.extname(filename)\n    let key = uuid() + ext\n    const folder1 = key.substr(0, 1)\n    const folder2 = key.substr(1, 1)\n    key = `${folder1}/${folder2}/${key}`\n    return key\n  }\n\n  async getObjectHead(key: string): Promise {\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.headObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SVCAppModule.html":{"url":"modules/SVCAppModule.html","title":"module - SVCAppModule","body":"\n                   \n\n\n\n\n    Modules\n    SVCAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SVCAppModule\n\n\n\ncluster_SVCAppModule_imports\n\n\n\n\nHeroSVCModule\n\nHeroSVCModule\n\n\n\nSVCAppModule\n\nSVCAppModule\n\nSVCAppModule -->\n\nHeroSVCModule->SVCAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/svc.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeroSVCModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { HeroSVCModule } from './heroscv/herosvc.module';\n\n@Module({\n  imports: [HeroSVCModule],\n})\nexport class SVCAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdPartyModule.html":{"url":"modules/ThirdPartyModule.html","title":"module - ThirdPartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdPartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/thirdParty/thirdParty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { PointsService } from './points.service'\nimport { EventBusSDKService } from './eventBusSDK.service'\nimport { eventBusSDKProviders } from './eventBusSDK.provider'\nimport { S3Service } from './s3.service'\n\n@Module({\n  imports: [ConfigModule],\n  providers: [\n    ...eventBusSDKProviders,\n    PointsService,\n    EventBusSDKService,\n    S3Service,\n  ],\n  exports: [PointsService, S3Service],\n})\nexport class ThirdPartyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/USER_AGENT_LIMIT_MODE.html":{"url":"interfaces/USER_AGENT_LIMIT_MODE.html","title":"interface - USER_AGENT_LIMIT_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  USER_AGENT_LIMIT_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        HK01_WEBVIEW_ONLY\n                                \n                                \n                                        NONE\n                                \n                                \n                                        WEB_ONLY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HK01_WEBVIEW_ONLY\n                                    \n                                \n                                \n                                    \n                                        HK01_WEBVIEW_ONLY:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WEB_ONLY\n                                    \n                                \n                                \n                                    \n                                        WEB_ONLY:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE';\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE';\n  PSY_TEST: 'PSY_TEST';\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT';\n  PUBLISHED: 'PUBLISHED';\n  DELETED: 'DELETED';\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE';\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY';\n  WEB_ONLY: 'WEB_ONLY';\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC';\n  STAFF: 'STAFF';\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE';\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE';\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE';\n  IN_QUESTION: 'IN_QUESTION';\n  POST_GAME: 'POST_GAME';\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC';\n  DESC: 'DESC';\n  RANDOM: 'RANDOM';\n}\n\nexport interface IGame extends Document {\n  readonly _id: string;\n  readonly name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/validation.pipe.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw errors[0];\n    }\n    return value;\n  }\n\n  private toValidate(metatype: unknown): boolean {\n    const types: unknown[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/adminLogin.dto.ts\n            \n            class\n            AdminLoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/admin.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/member.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/admin.strategy.ts\n            \n            injectable\n            AdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/member.strategy.ts\n            \n            injectable\n            MemberStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dtos/createGame.dto.ts\n            \n            class\n            CreateGameReq\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/dtos/game.dto.ts\n            \n            class\n            GameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/game/gameAdmin.controller.ts\n            \n            controller\n            GameAdminController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            ANSWER_DISPLAY_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            AUTH_MODE\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            GAME_STATUS\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            GAME_TYPE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            IGame\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            QUESTION_ORDER_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            USER_AGENT_LIMIT_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/schemas/game.schema.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/schemas/game.schema.ts\n            \n            variable\n            GameSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/dto/createHero.request.dto.ts\n            \n            class\n            CreateHeroRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/dto/createHero.response.dto.ts\n            \n            class\n            CreateHeroResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            controller\n            HeroController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            class\n            HeroError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            interface\n            HeroesService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/interfaces/hero.interface.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            controller\n            HeroesService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            interface\n            HeroById\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrapMicroServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.interceptor.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/objectId.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/middlewares/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/redis/constants.ts\n            \n            variable\n            REDIS_MODULE_CONNECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/decorators.ts\n            \n            variable\n            InjectRedis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/interface.ts\n            \n            interface\n            RedisModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/redis/utils.ts\n            \n            function\n            getRedisToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            eventBusSDKProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.service.ts\n            \n            class\n            EventBusSDKService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            injectable\n            PointsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @commitlint/config-conventional : ^12.1.4\n        \n            @grpc/proto-loader : ^0.6.0\n        \n            @hk01-digital/eventbus-js-sdk : ^3.2.0\n        \n            @hk01-digital/shared-event-proto : ^2.23.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.15\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/terminus : ^7.1.2\n        \n            aws-sdk : ^2.908.0\n        \n            cache-manager : ^3.4.3\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^9.0.2\n        \n            googleapis : ^73.0.0\n        \n            grpc : ^1.24.6\n        \n            helmet : ^4.6.0\n        \n            ioredis : ^4.27.2\n        \n            mongoose : ^5.12.8\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuid : 3.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrapMicroServices   (src/.../main.ts)\n                        \n                        \n                            getRedisToken   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bootstrapMicroServices\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrapMicroServices()\n                \n            \n\n\n\n\n        \n    \n    src/redis/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRedisToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetRedisToken()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeroModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeroSVCModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SVCAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdPartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_SVCAppModule\n\n\n\ncluster_SVCAppModule_imports\n\n\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nHeroSVCModule\n\nHeroSVCModule\n\n\n\nSVCAppModule\n\nSVCAppModule\n\nSVCAppModule -->\n\nHeroSVCModule->SVCAppModule\n\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../configuration.ts)\n                        \n                        \n                            eventBusSDKProviders   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            GameSchema   (src/.../game.schema.ts)\n                        \n                        \n                            InjectRedis   (src/.../decorators.ts)\n                        \n                        \n                            logger   (src/.../logger.interceptor.ts)\n                        \n                        \n                            logger   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            REDIS_MODULE_CONNECTION_TOKEN   (src/.../constants.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../configuration.ts)\n                        \n                        \n                               (src/.../points.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV || 'development'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YAML_CONFIG_FILENAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${env}.config.yml`\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/eventBusSDK.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventBusSDKProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'EVENT_BUS_SDK',\n    useFactory: async (configService: ConfigService): Promise => {\n      const sdk = new EventBusSDK(\n        configService.get('RMQ_URL'),\n        configService.get('EVENT_BUS_EXCHANGE_CREATE_MODE'),\n      );\n\n      logger.log('RMQ connection initializing...');\n      sdk.connect();\n      logger.log('RMQ connection established');\n\n      return sdk;\n    },\n    inject: [ConfigService],\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('EventBusSDK')\n                        \n                    \n\n\n            \n        \n\n    src/game/schemas/game.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GameSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Game)\n                        \n                    \n\n\n            \n        \n\n    src/redis/decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectRedis\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return Inject(getRedisToken());\n}\n                        \n                    \n\n\n            \n        \n\n    src/middlewares/logger.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('RequestLog')\n                        \n                    \n\n\n            \n        \n\n    src/redis/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REDIS_MODULE_CONNECTION_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IORedisModuleConnectionToken'\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/points.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : hk01.protobuf.game.mcgame\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
