var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdminAuthGuard.html",[0,0.736,1,1.965]],["body/injectables/AdminAuthGuard.html",[0,1.041,1,2.781,2,1.457,3,0.233,4,0.233,5,0.203,6,3.114,7,0.551,8,1.341,9,4.17,10,4.17,11,4.17,12,4.432,13,0.975,14,3.669,15,1.426,16,0.024,17,1.183,18,0.592,19,1.341,20,2.749,21,1.341,22,4.17,23,5.235,24,3.669,25,4.702,26,0.312,27,4.17,28,0.398,29,3.114,30,2.077,31,0.233,32,0.012,33,2.077,34,3.669,35,1.426,36,3.114,37,2.077,38,1.457,39,0.012,40,0.017,41,0.012]],["title/injectables/AdminAuthGuard-1.html",[0,0.615,1,1.642,42,1.958]],["body/injectables/AdminAuthGuard-1.html",[0,1.041,1,2.781,2,1.457,3,0.233,4,0.233,5,0.203,7,0.551,8,1.341,9,4.17,10,4.17,11,4.17,12,4.432,13,0.975,15,1.426,16,0.024,17,1.183,18,0.592,19,1.341,20,2.749,21,1.341,22,4.17,23,5.235,25,4.702,26,0.312,27,4.17,28,0.398,29,3.114,30,2.077,31,0.233,32,0.012,33,2.077,35,1.426,36,3.114,37,2.077,38,1.457,39,0.012,40,0.017,41,0.012,43,3.114,44,3.669,45,3.669,46,3.669]],["title/classes/AdminLoginRequestDto.html",[32,0.012,47,2.343]],["body/classes/AdminLoginRequestDto.html",[3,0.263,4,0.263,5,0.229,7,0.62,13,1.055,16,0.024,18,0.858,26,0.338,31,0.263,32,0.018,39,0.014,40,0.018,41,0.014,47,3.586,48,2.012,49,3.509,50,2.585,51,4.984,52,4.984,53,2.628,54,2.411,55,4.51,56,4.134,57,4.134,58,4.399,59,2.34,60,4.399,61,2.012]],["title/injectables/AdminStrategy.html",[0,0.736,62,2.136]],["body/injectables/AdminStrategy.html",[0,0.992,2,1.356,3,0.217,4,0.217,5,0.189,7,0.512,8,1.277,13,0.929,15,1.358,16,0.024,17,1.127,18,0.755,19,1.277,21,0.931,26,0.365,28,0.37,30,1.932,31,0.217,32,0.012,33,1.932,35,0.991,39,0.012,40,0.016,41,0.012,62,2.879,63,2.897,64,1.549,65,3.505,66,1.661,67,2.303,68,2.635,69,3.413,70,3.971,71,3.413,72,2.557,73,2.897,74,2.897,75,2.557,76,2.557,77,1.356,78,2.897,79,2.897,80,3.413,81,1.787,82,2.897,83,2.897,84,2.897,85,2.897,86,2.557,87,2.897,88,2.897,89,2.897,90,2.897,91,2.897,92,2.303,93,2.897,94,2.897,95,2.897,96,2.557,97,2.897]],["title/classes/AllExceptionFilter.html",[32,0.012,98,2.601]],["body/classes/AllExceptionFilter.html",[3,0.196,4,0.196,5,0.17,7,0.462,8,1.188,13,0.611,15,0.894,16,0.024,17,0.742,18,0.497,19,0.84,21,0.84,26,0.321,28,0.334,31,0.196,32,0.015,38,1.223,39,0.01,40,0.015,41,0.01,48,1.498,59,1.743,98,3.262,99,2.613,100,3.262,101,5.052,102,4.115,103,4.354,104,4.288,105,3.785,106,5.492,107,3.079,108,5.052,109,3.079,110,3.696,111,2.613,112,4.354,113,3.696,114,3.262,115,2.613,116,1.882,117,3.079,118,3.079,119,3.079,120,3.079,121,4.661,122,3.079,123,4.661,124,3.079,125,5.492,126,2.307,127,4.354,128,3.079,129,3.079,130,3.079,131,3.079,132,3.079,133,3.079,134,3.079,135,3.079,136,3.079,137,3.079,138,2.307,139,3.079]],["title/modules/AppModule.html",[140,0.483,141,2.343]],["body/modules/AppModule.html",[3,0.171,4,0.171,5,0.149,16,0.024,18,0.435,26,0.402,28,0.292,31,0.171,32,0.009,39,0.009,40,0.013,41,0.009,64,0.782,68,2.189,77,1.07,96,2.018,105,2.018,140,0.652,141,4.569,142,0.782,143,1.31,144,1.524,145,1.524,146,1.31,147,0.942,148,1.41,149,2.286,150,2.286,151,3.537,152,3.537,153,3.537,154,3.537,155,3.537,156,3.537,157,3.537,158,2.238,159,1.524,160,1.524,161,2.693,162,2.453,163,2.433,164,2.286,165,1.817,166,2.693,167,2.693,168,2.693,169,2.693,170,2.693,171,2.693,172,2.693,173,2.693,174,1.524,175,2.693,176,2.693,177,2.286,178,2.693,179,2.693,180,2.693,181,2.693,182,2.693,183,2.693,184,2.693,185,2.433,186,2.693,187,1.41]],["title/controllers/AuthController.html",[188,1.575,189,2.343]],["body/controllers/AuthController.html",[3,0.226,4,0.226,5,0.196,7,0.533,8,1.311,13,0.705,15,1.031,16,0.024,17,0.855,18,0.573,19,0.969,21,0.969,26,0.371,28,0.385,31,0.226,32,0.012,35,1.031,39,0.012,40,0.016,41,0.012,47,3.939,54,1.611,61,1.728,64,1.581,81,1.859,114,3.601,116,1.323,188,2.18,189,3.243,190,1.728,191,3.014,192,4.079,193,3.551,194,5.448,195,4.806,196,3.551,197,4.082,198,3.014,199,2.396,200,3.083,201,3.014,202,3.551,203,3.551,204,3.551,205,4.806,206,1.728,207,3.551,208,3.551,209,3.551,210,3.551,211,3.551]],["title/modules/AuthModule.html",[140,0.483,151,2.136]],["body/modules/AuthModule.html",[3,0.194,4,0.194,5,0.169,16,0.024,26,0.401,28,0.332,30,1.731,31,0.194,32,0.01,39,0.01,40,0.015,41,0.01,62,3.694,64,0.888,68,2.322,77,1.214,88,2.595,90,2.595,91,2.595,92,2.063,93,2.595,140,0.7,142,0.888,143,1.488,144,1.731,145,1.731,146,1.488,147,1.76,148,1.601,151,4.002,158,2.452,159,1.731,160,1.731,162,2.269,163,2.667,174,1.731,187,1.601,189,3.396,190,2.108,200,3.397,201,2.595,212,2.595,213,2.595,214,3.694,215,3.058,216,4.333,217,3.058,218,2.291,219,3.058,220,3.058,221,3.058,222,3.058,223,3.058,224,3.058,225,3.058,226,3.058,227,3.058]],["title/injectables/AuthService.html",[0,0.736,200,1.965]],["body/injectables/AuthService.html",[0,0.937,2,1.249,3,0.2,4,0.2,5,0.174,7,0.472,8,1.206,13,0.877,15,1.283,16,0.024,17,1.231,18,0.714,19,1.206,21,0.858,26,0.352,28,0.341,31,0.2,32,0.011,35,0.913,38,1.249,39,0.011,40,0.015,41,0.011,51,2.669,52,4.705,53,2.568,64,1.484,66,2.151,68,2.638,72,2.356,77,1.249,116,2.065,192,3.752,200,2.502,206,1.53,218,2.356,228,2.669,229,3.145,230,6.057,231,3.145,232,4.42,233,3.145,234,3.145,235,2.669,236,2.502,237,3.145,238,3.145,239,3.145,240,3.145,241,3.145,242,3.145,243,3.145,244,3.145,245,3.145,246,3.145,247,3.145,248,3.145,249,3.145,250,3.145]],["title/modules/CampaignModule.html",[140,0.483,152,2.136]],["body/modules/CampaignModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,152,3.644,251,4.919]],["title/modules/CoreModule.html",[140,0.483,153,2.136]],["body/modules/CoreModule.html",[3,0.216,4,0.216,5,0.188,16,0.024,26,0.382,28,0.369,31,0.216,32,0.012,39,0.012,40,0.016,41,0.012,64,0.987,68,2.431,77,1.35,105,2.547,140,0.741,142,0.987,143,1.654,144,1.924,145,1.924,146,1.654,147,1.189,148,1.78,153,4.09,158,2.641,159,1.924,160,1.924,162,2.789,163,2.872,174,1.924,177,2.886,185,2.093,187,1.78,252,2.886,253,2.886,254,3.82,255,3.984,256,3.4,257,3.4,258,4.666,259,3.4,260,3.4,261,3.4,262,3.4,263,3.4,264,3.4,265,3.4,266,3.4]],["title/classes/CreateGameReq.html",[32,0.012,267,2.343]],["body/classes/CreateGameReq.html",[3,0.281,4,0.281,5,0.245,7,0.664,13,0.878,16,0.024,17,1.46,18,0.714,26,0.352,31,0.281,32,0.019,39,0.015,40,0.019,41,0.015,48,2.153,50,2.699,53,2.353,54,2.008,58,4.156,59,2.505,60,4.156,61,2.153,267,3.744,268,3.756,269,4.425,270,4.425]],["title/classes/EventBusSDKService.html",[32,0.012,271,2.136]],["body/classes/EventBusSDKService.html",[3,0.225,4,0.225,5,0.196,7,0.531,8,1.308,13,0.951,15,1.391,16,0.024,17,1.154,18,0.878,19,1.308,21,0.965,26,0.304,28,0.384,31,0.225,32,0.012,39,0.012,40,0.016,41,0.012,48,1.721,64,1.578,66,2.332,67,2.387,68,2.663,77,1.404,187,1.852,206,1.721,236,2.713,271,2.95,272,3.002,273,4.068,274,3.346,275,3.536,276,4.793,277,5.17,278,3.536,279,4.793,280,2.332,281,3.536,282,2.387,283,3.536,284,3.536,285,3.002,286,3.002,287,3.536,288,3.536,289,3.536,290,3.536]],["title/modules/FormModule.html",[140,0.483,291,2.601]],["body/modules/FormModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,291,4.436,292,4.919]],["title/classes/Game.html",[32,0.012,293,1.818]],["body/classes/Game.html",[3,0.182,4,0.182,5,0.158,7,0.62,13,1.23,16,0.024,17,1.168,18,1,26,0.308,31,0.182,32,0.01,33,2.337,39,0.01,40,0.014,41,0.01,48,1.391,50,2.01,53,2.489,54,2.81,121,4.115,126,2.142,293,2.163,294,2.427,295,4.083,296,4.848,297,2.984,298,3.505,299,3.505,300,3.505,301,3.505,302,4.507,303,4.848,304,2.859,305,2.163,306,4.848,307,2.859,308,2.859,309,2.859,310,2.859,311,4.13,312,2.859,313,2.859,314,2.427,315,5.31,316,2.859,317,4.78,318,2.859,319,2.427,320,2.859,321,2.859,322,4.13,323,1.929,324,2.859,325,3.505,326,2.427,327,2.859,328,2.142,329,2.859,330,2.859]],["title/controllers/GameAdminController.html",[188,1.575,331,2.343]],["body/controllers/GameAdminController.html",[1,1.255,3,0.141,4,0.141,5,0.123,7,0.333,8,0.932,13,0.929,15,1.359,16,0.024,17,1.218,18,0.928,19,1.278,21,1.278,26,0.339,28,0.241,31,0.141,32,0.008,35,1.359,39,0.017,40,0.012,41,0.008,54,2.124,61,1.079,64,1.804,81,1.162,116,1.552,188,1.006,190,1.079,197,4.416,198,2.9,199,1.497,206,2.278,267,3.755,280,2.796,293,1.789,297,3.287,305,3.086,331,2.306,332,1.883,333,1.662,334,2.218,335,2.9,336,2.9,337,2.56,338,3.537,339,2.218,340,2.218,341,3.627,342,2.218,343,1.883,344,2.218,345,2.218,346,1.662,347,2.218,348,2.218,349,1.883,350,2.218,351,2.218,352,2.218,353,1.883,354,1.883,355,2.218,356,4.291,357,2.218,358,2.218,359,2.182,360,1.662,361,1.883,362,2.218,363,2.218,364,1.883,365,2.218,366,2.218,367,1.883,368,1.883,369,2.218,370,2.218,371,2.218,372,2.218,373,2.218,374,2.218,375,2.218,376,2.218,377,2.218]],["title/controllers/GameController.html",[188,1.575,378,2.343]],["body/controllers/GameController.html",[3,0.215,4,0.215,5,0.187,7,0.508,8,1.27,13,0.672,15,0.983,16,0.024,17,0.816,18,0.751,19,0.924,21,0.924,26,0.364,28,0.367,31,0.215,32,0.011,35,0.983,37,1.917,38,1.345,39,0.019,40,0.016,41,0.011,54,1.537,61,1.648,64,1.543,81,1.774,110,2.875,111,2.875,116,1.261,188,1.537,190,1.648,199,2.286,206,1.648,280,2.264,293,1.774,297,2.864,305,2.784,333,2.538,337,3.486,341,2.864,346,2.538,354,2.875,356,3.95,359,2.784,360,2.538,361,2.875,364,2.875,367,2.875,368,2.875,378,3.14,379,2.875,380,3.387,381,3.387,382,3.387,383,3.387,384,3.387,385,4.653,386,3.387,387,3.387,388,3.387,389,3.387,390,3.387,391,3.387]],["title/classes/GameDto.html",[32,0.012,341,2.136]],["body/classes/GameDto.html",[3,0.261,4,0.261,5,0.228,7,0.618,13,1.052,16,0.024,17,1.411,18,0.855,26,0.337,31,0.261,32,0.018,39,0.014,40,0.018,41,0.014,48,2.002,50,2.578,53,2.246,54,2.403,55,3.493,58,3.969,59,2.329,60,4.389,61,2.002,297,3.606,305,2.774,341,3.26,392,3.493,393,4.115,394,4.115,395,4.115,396,5.297]],["title/modules/GameModule.html",[140,0.483,154,2.136]],["body/modules/GameModule.html",[3,0.216,4,0.216,5,0.188,16,0.024,26,0.404,28,0.369,31,0.216,32,0.012,39,0.012,40,0.016,41,0.012,64,0.987,68,2.431,77,1.35,140,0.741,142,0.987,143,1.654,144,1.924,145,1.924,146,1.654,147,1.863,148,1.78,154,3.82,158,2.641,159,1.924,160,1.924,162,2.443,163,2.872,164,2.886,165,2.294,174,1.924,187,1.78,190,2.27,293,1.78,331,3.595,359,3.25,360,2.547,378,3.595,397,2.886,398,2.886,399,3.4,400,3.4,401,3.4,402,3.4,403,2.886,404,3.4,405,3.4,406,3.4,407,3.4]],["title/injectables/GameService.html",[0,0.736,359,1.818]],["body/injectables/GameService.html",[0,0.71,2,0.859,3,0.137,4,0.137,5,0.12,7,0.325,8,0.915,13,1.049,15,1.535,16,0.024,17,1.372,18,0.854,19,1.443,21,1.364,26,0.336,28,0.235,31,0.137,32,0.007,35,1.535,39,0.018,40,0.011,41,0.007,53,1.74,64,1.856,66,1.631,116,1.721,165,1.46,206,2.573,236,1.897,280,2.909,293,2.984,297,2.843,305,3.236,323,1.46,335,2.845,336,2.845,337,2.511,338,2.845,343,2.845,346,2.511,349,2.845,359,1.755,403,1.837,408,1.837,409,3.352,410,2.164,411,4.62,412,4.103,413,3.922,414,2.164,415,3.352,416,3.352,417,2.164,418,2.164,419,2.164,420,3.352,421,2.164,422,2.164,423,2.164,424,1.46,425,2.511,426,2.164,427,2.164,428,2.164,429,2.164,430,2.164,431,2.164,432,3.352,433,2.164,434,2.164,435,2.164,436,3.482,437,2.164,438,2.164,439,2.164,440,2.164]],["title/controllers/HealthController.html",[188,1.575,441,2.343]],["body/controllers/HealthController.html",[3,0.252,4,0.252,5,0.219,7,0.595,8,1.412,13,0.787,16,0.024,21,1.082,26,0.366,28,0.43,31,0.252,32,0.013,35,1.151,39,0.013,40,0.017,41,0.013,54,1.8,61,1.93,66,1.93,188,1.8,190,1.93,199,2.677,236,2.928,333,2.972,441,3.491,442,3.367,443,5.173,444,6.1,445,3.967,446,3.967,447,5.173,448,5.173,449,5.173,450,2.972,451,3.967,452,3.967,453,3.967,454,3.967,455,3.967]],["title/modules/HealthModule.html",[140,0.483,254,2.136]],["body/modules/HealthModule.html",[3,0.29,4,0.29,5,0.252,16,0.024,26,0.39,28,0.495,31,0.29,32,0.015,39,0.015,40,0.019,41,0.015,140,0.787,142,1.324,162,2.389,190,2.751,254,3.48,441,4.147,450,3.418,456,4.563,457,5.654,458,4.563]],["title/injectables/LoggingInterceptor.html",[0,0.736,459,2.601]],["body/injectables/LoggingInterceptor.html",[0,1.002,2,1.377,3,0.22,4,0.22,5,0.192,7,0.52,8,1.29,12,4.331,13,0.688,15,1.006,16,0.024,17,0.835,18,0.56,19,0.946,20,2.597,21,0.946,26,0.342,28,0.376,31,0.22,32,0.012,35,1.006,38,1.377,39,0.012,40,0.016,41,0.012,100,2.597,113,4.014,114,2.597,116,2.004,459,3.543,460,2.597,461,4.728,462,4.728,463,5.78,464,5.78,465,3.467,466,5.381,467,4.728,468,3.191,469,2.943,470,4.728,471,3.467,472,2.943,473,3.467,474,3.467,475,3.467,476,4.728,477,3.467,478,4.728,479,3.467,480,3.467,481,3.467,482,3.467]],["title/injectables/MemberStrategy.html",[0,0.736,214,2.136]],["body/injectables/MemberStrategy.html",[0,0.946,2,1.267,3,0.203,4,0.203,5,0.176,7,0.479,8,1.218,13,0.886,15,1.296,16,0.024,17,1.075,18,0.721,19,1.218,21,0.871,26,0.387,28,0.346,30,1.806,31,0.203,32,0.011,33,1.806,35,0.926,39,0.011,40,0.015,41,0.011,64,1.495,65,3.345,66,1.553,67,2.153,68,2.58,70,3.79,72,2.39,73,2.708,74,2.708,75,2.39,76,2.39,77,1.267,78,2.708,79,2.708,81,1.671,82,2.708,83,2.708,84,2.708,85,2.708,86,2.39,87,2.708,89,2.708,94,2.708,95,2.708,96,2.39,97,2.708,138,3.345,214,2.748,282,2.153,483,2.708,484,3.191,485,3.191,486,4.465,487,3.191,488,4.465,489,3.191,490,3.191,491,3.191,492,3.191,493,3.191,494,3.191,495,3.191]],["title/classes/Operation.html",[32,0.012,295,2.343]],["body/classes/Operation.html",[3,0.239,4,0.239,5,0.208,7,0.565,13,1.186,16,0.024,18,0.965,26,0.239,31,0.239,32,0.013,39,0.013,40,0.017,41,0.013,48,1.831,50,2.431,53,2.534,54,2.711,295,3.372,298,4.762,299,4.762,300,4.762,301,4.762,302,5.073,314,4.762,317,5.28,319,4.762,323,2.54,496,3.194,497,3.763,498,3.763,499,3.763,500,3.763,501,3.763]],["title/modules/OperationLogModule.html",[140,0.483,502,2.601]],["body/modules/OperationLogModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,502,4.436,503,4.919]],["title/modules/PlayerModule.html",[140,0.483,155,2.136]],["body/modules/PlayerModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,155,3.644,504,4.919]],["title/injectables/PointsService.html",[0,0.736,505,2.136]],["body/injectables/PointsService.html",[0,0.764,2,0.945,3,0.151,4,0.151,5,0.132,7,0.357,8,0.984,13,0.864,15,1.047,16,0.024,17,0.868,18,0.703,19,0.984,21,0.649,26,0.308,28,0.258,31,0.151,32,0.008,35,1.047,37,1.347,38,1.432,39,0.008,40,0.012,41,0.008,42,1.606,50,1.755,64,1.264,66,1.158,81,1.246,86,1.783,92,2.937,102,1.783,116,1.943,123,2.02,185,1.465,271,3.379,273,2.02,274,1.465,277,3.06,280,1.755,282,2.433,285,2.02,286,2.02,305,3.482,468,3.705,505,2.219,506,1.783,507,4.353,508,2.38,509,3.606,510,2.38,511,5.218,512,5.218,513,5.218,514,3.695,515,5.218,516,5.218,517,5.218,518,2.38,519,4.353,520,2.02,521,2.02,522,2.02,523,2.02,524,2.02,525,2.02,526,2.02,527,2.38,528,2.02,529,2.38,530,2.38,531,2.02,532,2.38,533,2.38,534,1.783,535,3.606,536,2.38,537,2.02,538,4.122,539,2.38,540,2.38,541,2.38,542,2.38,543,2.38,544,2.38,545,2.38,546,2.38]],["title/modules/QuizModule.html",[140,0.483,156,2.136]],["body/modules/QuizModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,156,3.644,547,4.919]],["title/modules/RedisModule.html",[140,0.483,255,2.136]],["body/modules/RedisModule.html",[3,0.193,4,0.193,5,0.168,8,0.829,13,0.856,15,1.252,16,0.024,17,1.038,18,0.696,19,1.177,21,1.177,26,0.347,28,0.329,31,0.193,32,0.01,35,1.455,38,1.712,39,0.01,40,0.015,41,0.01,116,1.606,140,0.759,142,0.881,147,1.508,148,2.258,162,1.59,185,2.654,255,3.359,424,2.91,548,3.037,549,5.458,550,3.037,551,4.312,552,4.893,553,3.037,554,3.66,555,5.764,556,3.037,557,4.312,558,3.683,559,3.037,560,5.013,561,3.756,562,3.037,563,1.869,564,5.988,565,3.66,566,3.037,567,4.312,568,4.312,569,3.037,570,3.037]],["title/interfaces/RedisModuleAsyncOptions.html",[558,2.343,563,2.136]],["body/interfaces/RedisModuleAsyncOptions.html",[3,0.239,4,0.239,5,0.208,7,0.565,16,0.024,18,1.102,19,1.808,26,0.317,31,0.239,33,2.828,39,0.013,40,0.017,41,0.013,50,2.431,174,3.383,187,3.129,280,1.831,326,3.194,424,2.54,552,4.241,558,3.372,563,2.316,571,3.194,572,4.997,573,5.976,574,5.976,575,4.241,576,3.763,577,3.763,578,3.763]],["title/modules/RewardModule.html",[140,0.483,157,2.136]],["body/modules/RewardModule.html",[3,0.313,4,0.313,5,0.272,16,0.023,26,0.313,28,0.534,31,0.313,32,0.017,39,0.017,40,0.02,41,0.017,140,0.824,142,1.428,147,1.72,157,3.644,579,4.919]],["title/injectables/S3Service.html",[0,0.736,580,2.136]],["body/injectables/S3Service.html",[0,0.524,2,0.589,3,0.094,4,0.094,5,0.082,7,0.222,8,0.675,13,1.053,15,1.437,16,0.024,17,1.192,18,0.856,19,1.351,21,1.289,26,0.283,28,0.161,31,0.094,32,0.005,35,1.371,37,2.334,38,1.769,39,0.005,40,0.008,41,0.005,42,1.668,50,1.203,53,2.769,64,1.702,66,0.721,67,1,68,1.889,77,0.589,81,0.776,102,3.089,116,1.915,138,1.852,185,0.912,197,2.382,206,2.299,236,1.8,274,0.912,280,2.581,282,2.783,328,1.111,353,2.098,531,3.5,537,3.5,538,4.977,554,3.149,580,1.521,581,1.258,582,3.179,583,3.179,584,2.472,585,2.472,586,2.472,587,2.472,588,2.472,589,2.472,590,2.472,591,1.483,592,5.68,593,2.472,594,1.483,595,1.483,596,2.472,597,1.483,598,2.472,599,1.483,600,2.472,601,4.123,602,1.483,603,1,604,2.472,605,3.179,606,1.483,607,2.472,608,1.483,609,2.472,610,1.483,611,2.098,612,1.483,613,1.483,614,2.098,615,1.483,616,1.483,617,1.483,618,1.483,619,1.483,620,1.483,621,1.483,622,1.483,623,1.483,624,1.483,625,1.483,626,1.483,627,1.483,628,1.483,629,1.483,630,4.123,631,3.71,632,1.483,633,1.483,634,1.483,635,4.123,636,3.179,637,1.483,638,1.483,639,1.483,640,1.483,641,1.483,642,1.483,643,1.483,644,2.472,645,1.483,646,1.483,647,1.483,648,1.483,649,1.483,650,1.483,651,1.483]],["title/modules/ThirdPartyModule.html",[140,0.483,652,2.343]],["body/modules/ThirdPartyModule.html",[3,0.215,4,0.215,5,0.187,16,0.024,26,0.394,28,0.367,31,0.215,32,0.011,39,0.011,40,0.016,41,0.011,77,1.345,140,0.74,142,0.983,143,1.648,144,1.917,145,1.917,146,1.648,147,1.859,148,2.784,158,2.634,159,1.917,160,1.917,162,1.774,163,2.864,271,2.864,505,4.161,526,2.875,580,4.161,652,4.481,653,2.875,654,2.875,655,2.875,656,3.387,657,3.387,658,3.486,659,3.387,660,3.387]],["title/injectables/ValidationPipe.html",[0,0.736,661,2.601]],["body/injectables/ValidationPipe.html",[0,0.928,2,1.231,3,0.197,4,0.197,5,0.171,7,0.465,8,1.194,13,0.869,15,1.27,16,0.024,17,1.054,18,0.707,19,1.194,21,1.194,26,0.322,28,0.336,31,0.197,32,0.017,35,1.472,37,1.755,39,0.01,40,0.015,41,0.01,53,1.315,59,1.755,64,1.472,65,2.323,100,2.323,104,4.676,116,1.889,126,2.323,206,1.509,236,2.87,305,1.624,514,4.305,534,2.323,603,3.718,661,3.279,662,2.632,663,4.376,664,4.376,665,4.376,666,3.101,667,5.071,668,4.376,669,5.509,670,3.101,671,4.376,672,3.101,673,2.632,674,3.101,675,4.376,676,3.101,677,3.101,678,3.101,679,3.101,680,3.101,681,3.101,682,3.101,683,3.101]],["title/coverage.html",[684,3.546]],["body/coverage.html",[0,1.309,1,2.083,5,0.135,6,2.076,16,0.024,18,0.395,32,0.019,38,0.971,39,0.008,40,0.012,41,0.008,43,2.076,47,1.651,49,2.076,62,1.505,63,2.076,98,1.833,99,2.076,146,1.19,188,2.234,189,1.651,191,2.076,200,1.385,214,1.505,228,2.076,267,1.651,268,2.076,271,1.505,272,2.076,293,1.281,294,2.076,295,1.651,331,1.651,332,2.076,341,1.505,359,1.281,378,1.651,379,2.076,392,2.076,408,2.076,425,1.833,441,1.651,442,2.076,459,1.833,460,2.758,468,2.484,483,2.076,496,2.076,505,1.505,506,2.758,534,5.236,558,1.651,561,1.833,563,1.505,571,2.076,575,3.124,580,1.505,581,2.076,658,1.833,661,1.833,662,2.076,684,1.833,685,2.446,686,2.446,687,2.446,688,5.548,689,6.06,690,4.426,691,3.124,692,5.924,693,2.076,694,6.174,695,2.076,696,2.076,697,2.076,698,2.076,699,2.076,700,2.446,701,2.446,702,2.076,703,3.124,704,2.446,705,2.446,706,2.446,707,2.446]],["title/dependencies.html",[143,2.031,708,2.901]],["body/dependencies.html",[16,0.024,28,0.341,30,1.78,32,0.015,39,0.011,40,0.015,41,0.011,59,1.78,61,1.53,75,3.312,76,2.356,77,1.249,92,2.983,115,3.752,143,1.53,165,2.122,218,2.356,235,2.669,274,2.72,323,2.122,413,2.669,424,2.122,436,3.752,450,2.356,469,2.669,520,2.669,521,2.669,522,2.669,524,2.669,525,2.669,611,2.669,614,2.669,673,2.669,709,3.145,710,3.145,711,3.145,712,3.145,713,3.145,714,3.145,715,3.145,716,3.145,717,5.544,718,3.145,719,3.145,720,3.145,721,3.145,722,4.42,723,3.145,724,3.145,725,3.145,726,3.145,727,4.42,728,3.145,729,3.145,730,3.145,731,3.145,732,3.145,733,3.145,734,3.145,735,3.145,736,3.145,737,3.145,738,3.145,739,3.145,740,3.145,741,3.145,742,3.145,743,3.145,744,3.145,745,3.145,746,3.145,747,3.145,748,3.145,749,3.145,750,3.145,751,3.145,752,3.145,753,3.145,754,3.145,755,3.145]],["title/miscellaneous/enumerations.html",[756,1.642,757,3.543]],["body/miscellaneous/enumerations.html",[7,0.738,16,0.023,39,0.017,40,0.02,41,0.017,325,5.025,603,4.286,756,2.784,757,4.176,758,4.919,759,4.919,760,5.92,761,5.92,762,5.92]],["title/miscellaneous/functions.html",[756,1.642,763,3.543]],["body/miscellaneous/functions.html",[7,0.764,16,0.02,39,0.017,40,0.02,41,0.017,146,3.136,561,4.828,699,4.32,702,4.32,756,2.881,763,4.32,764,5.09,765,5.09]],["title/index.html",[7,0.435,766,2.901,767,2.901]],["body/index.html",[16,0.024,39,0.014,40,0.018,41,0.014,684,3.187,768,4.254,769,4.254,770,6.716,771,4.254,772,4.254,773,3.611,774,6.61,775,4.254,776,4.254,777,5.411,778,4.254,779,4.254,780,4.254,781,4.254,782,5.411,783,5.411,784,4.254,785,4.254,786,4.254]],["title/modules.html",[142,1.374]],["body/modules.html",[16,0.018,39,0.014,40,0.018,41,0.014,141,2.726,142,1.173,151,2.486,152,2.486,153,2.486,154,2.486,155,2.486,156,2.486,157,2.486,254,2.486,255,2.486,291,3.026,502,3.026,652,2.726,787,6.364,788,6.364,789,6.364,790,6.982,791,6.727,792,6.727]],["title/overview.html",[793,4.017]],["body/overview.html",[2,1.154,16,0.023,39,0.01,40,0.014,41,0.01,42,1.961,48,1.414,62,3.011,140,0.404,141,4.571,142,0.844,143,1.414,144,1.645,145,1.645,146,1.414,147,1.016,148,1.522,149,2.467,150,2.467,151,3.9,152,3.011,153,3.9,154,3.488,155,3.011,156,3.011,157,3.011,158,2.365,159,1.645,160,1.645,190,1.414,200,2.769,212,2.467,213,2.467,214,3.011,252,2.467,253,2.467,254,3.011,255,3.293,359,2.562,397,2.467,398,2.467,505,3.742,563,1.789,580,3.742,652,4.199,653,2.467,654,2.467,655,2.467,793,2.467,794,2.906,795,2.906,796,2.906,797,2.906]],["title/miscellaneous/variables.html",[756,1.642,798,3.543]],["body/miscellaneous/variables.html",[7,0.489,16,0.024,18,0.732,35,1.316,38,2.07,39,0.011,40,0.015,41,0.011,53,1.383,64,0.947,68,2.21,116,1.215,174,1.846,187,1.708,274,2.79,280,1.587,328,4.801,425,3.397,460,2.444,468,3.801,472,2.768,506,2.444,523,2.768,528,2.768,565,2.768,603,4.325,658,3.397,691,2.768,693,3.848,695,3.848,696,2.768,697,3.848,698,2.768,703,2.768,756,1.846,773,2.768,798,2.768,799,4.534,800,4.534,801,3.261,802,3.261,803,3.261,804,3.261,805,3.261,806,3.261,807,3.261,808,3.261,809,3.261,810,4.534,811,4.534,812,3.261,813,3.261,814,3.261,815,3.261,816,3.261,817,3.261]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":534,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":42,"title":{"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{},"overview.html":{}}}],["1.24.6",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":796,"title":{},"body":{"overview.html":{}}}],["12.1.4",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["12h",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["13",{"_index":794,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["2.908.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":795,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["4.27.2",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":797,"title":{},"body":{"overview.html":{}}}],["7.1.2",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["73.0.0",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":490,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["absolute",{"_index":493,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["abstract",{"_index":501,"title":{},"body":{"classes/Operation.html":{}}}],["accesskeyid",{"_index":617,"title":{},"body":{"injectables/S3Service.html":{}}}],["accountid",{"_index":511,"title":{},"body":{"injectables/PointsService.html":{}}}],["admin",{"_index":80,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["admin/game",{"_index":334,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["adminauthguard",{"_index":1,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["adminlogin",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["adminlogin(@body",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminlogin(authcode",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["adminlogin(body",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminloginrequestdto",{"_index":47,"title":{"classes/AdminLoginRequestDto.html":{}},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["adminstrategy",{"_index":62,"title":{"injectables/AdminStrategy.html":{}},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["admintoken",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["algorithm",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":89,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["allexceptionfilter",{"_index":98,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["apibearerauth",{"_index":357,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apibearerauth('admin",{"_index":366,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apiokresponse",{"_index":356,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apiproperty",{"_index":60,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["apiproperty()@isstring",{"_index":269,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["apitags",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}}}],["apitags('auth",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":364,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apitags('health",{"_index":452,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":772,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":578,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["argumentmetadata",{"_index":669,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":106,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["array",{"_index":682,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":64,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":517,"title":{},"body":{"injectables/PointsService.html":{}}}],["auth.controller",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/admin.guard",{"_index":358,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["authcode",{"_index":51,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["authcontroller",{"_index":189,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":29,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["authguard('admin",{"_index":34,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["authguard('member",{"_index":46,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["authmodule",{"_index":151,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":200,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":792,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["aws",{"_index":611,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["aws.config.update",{"_index":616,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3",{"_index":624,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3.types",{"_index":609,"title":{},"body":{"injectables/S3Service.html":{}}}],["bearer",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"injectables/S3Service.html":{}}}],["body.authcode",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.redirecturl",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":514,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":790,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":787,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":627,"title":{},"body":{"injectables/S3Service.html":{}}}],["cache",{"_index":436,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":383,"title":{},"body":{"controllers/GameController.html":{}}}],["cachekey",{"_index":434,"title":{},"body":{"injectables/GameService.html":{}}}],["cachemodule",{"_index":400,"title":{},"body":{"modules/GameModule.html":{}}}],["cachemodule.registerasync",{"_index":404,"title":{},"body":{"modules/GameModule.html":{}}}],["callhandler",{"_index":464,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["campaign/campaign.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["campaignmodule",{"_index":152,"title":{"modules/CampaignModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CampaignModule.html":{},"modules.html":{},"overview.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["catch(exception",{"_index":103,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["check",{"_index":444,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":32,"title":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":48,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":252,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":397,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_providers",{"_index":398,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule",{"_index":653,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_exports",{"_index":654,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_providers",{"_index":655,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["code",{"_index":125,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["column",{"_index":317,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["column()@index('game_name_idx",{"_index":308,"title":{},"body":{"classes/Game.html":{}}}],["column({default",{"_index":310,"title":{},"body":{"classes/Game.html":{}}}],["comming",{"_index":475,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["commitlint/config",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":324,"title":{},"body":{"classes/Game.html":{}}}],["completedts",{"_index":515,"title":{},"body":{"injectables/PointsService.html":{}}}],["config/configuration",{"_index":259,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{}}}],["configmodule.forroot",{"_index":261,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":68,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('event_bus_exchange_create_mode",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('hk01_sso_public_key",{"_index":491,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["configservice.get('http_cache_ttl",{"_index":406,"title":{},"body":{"modules/GameModule.html":{}}}],["configservice.get('mysql_database",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_host",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_password",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_port",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_user",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_host",{"_index":265,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.get('rmq_url",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('sso_secret",{"_index":88,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["configuration",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{}}}],["connection",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":116,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":66,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["constructor(configservice",{"_index":67,"title":{},"body":{"injectables/AdminStrategy.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["constructor(eventbussdkservice",{"_index":508,"title":{},"body":{"injectables/PointsService.html":{}}}],["constructor(gamerepository",{"_index":410,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(jwtservice",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["context",{"_index":20,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":473,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":188,"title":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('admin/game",{"_index":363,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["controller('game",{"_index":386,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('health",{"_index":451,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["conventional",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["copysource",{"_index":639,"title":{},"body":{"injectables/S3Service.html":{}}}],["core/core.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["core/redis",{"_index":426,"title":{},"body":{"injectables/GameService.html":{}}}],["coremodule",{"_index":153,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":684,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":298,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["createdatecolumn",{"_index":314,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["createdby",{"_index":299,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["creategame",{"_index":335,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["creategame(@body",{"_index":370,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(body",{"_index":339,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(name",{"_index":416,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamereq",{"_index":267,"title":{"classes/CreateGameReq.html":{}},"body":{"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["ctx",{"_index":117,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":120,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":119,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["database",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":302,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["date().toisostring",{"_index":137,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["date.now",{"_index":478,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["db",{"_index":453,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["decorators",{"_index":54,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"classes/Operation.html":{}}}],["default",{"_index":328,"title":{},"body":{"classes/Game.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["definition",{"_index":283,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["delete",{"_index":353,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/S3Service.html":{}}}],["delete('/:id",{"_index":375,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete('/:id')@apiokresponse({type",{"_index":344,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete(key",{"_index":590,"title":{},"body":{"injectables/S3Service.html":{}}}],["deleted",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deletedat",{"_index":296,"title":{},"body":{"classes/Game.html":{}}}],["deletedatecolumn",{"_index":303,"title":{},"body":{"classes/Game.html":{}}}],["deletegame",{"_index":336,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["deletegame(@param('id",{"_index":376,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["deletegame(id",{"_index":343,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["dependencies",{"_index":143,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["development",{"_index":773,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["digital/eventbus",{"_index":524,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["digital/shared",{"_index":520,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["documentation",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["draft",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto/adminlogin.dto",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos",{"_index":361,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["dynamicmodule",{"_index":555,"title":{},"body":{"modules/RedisModule.html":{}}}],["e2e",{"_index":784,"title":{},"body":{"index.html":{}}}],["email",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["entities",{"_index":362,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["entities/game.entity",{"_index":403,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{}}}],["entity",{"_index":322,"title":{},"body":{"classes/Game.html":{}}}],["enum",{"_index":311,"title":{},"body":{"classes/Game.html":{}}}],["enumerations",{"_index":757,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envelope",{"_index":277,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["env}.config.yml",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":25,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["error",{"_index":538,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["error('protobuf",{"_index":539,"title":{},"body":{"injectables/PointsService.html":{}}}],["error('s3",{"_index":635,"title":{},"body":{"injectables/S3Service.html":{}}}],["errors",{"_index":677,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":679,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors[0",{"_index":680,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["established",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":521,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["event_bus_sdk",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventbus",{"_index":544,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk",{"_index":523,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["eventbussdk.createenvelopewithbody(message",{"_index":541,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk.provider",{"_index":659,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["eventbussdk.service",{"_index":526,"title":{},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{}}}],["eventbussdkproviders",{"_index":658,"title":{},"body":{"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventbussdkservice",{"_index":271,"title":{"classes/EventBusSDKService.html":{}},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{}}}],["exception",{"_index":108,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.constraints",{"_index":130,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":128,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['code",{"_index":135,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['details",{"_index":134,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['message",{"_index":124,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfilter",{"_index":101,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["expiresin",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":31,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["express",{"_index":115,"title":{},"body":{"classes/AllExceptionFilter.html":{},"dependencies.html":{}}}],["ext",{"_index":644,"title":{},"body":{"injectables/S3Service.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/Game.html":{},"injectables/MemberStrategy.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":73,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":84,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["false",{"_index":86,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filename",{"_index":595,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1",{"_index":646,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1}/${folder2}/${key",{"_index":650,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder2",{"_index":648,"title":{},"body":{"injectables/S3Service.html":{}}}],["formmodule",{"_index":291,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules.html":{}}}],["forroot",{"_index":550,"title":{},"body":{"modules/RedisModule.html":{}}}],["forroot(options",{"_index":551,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync",{"_index":556,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":557,"title":{},"body":{"modules/RedisModule.html":{}}}],["found",{"_index":390,"title":{},"body":{"controllers/GameController.html":{}}}],["fs",{"_index":487,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["function",{"_index":575,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["functions",{"_index":763,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":293,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["game.controller",{"_index":402,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":360,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["game_data:${id",{"_index":435,"title":{},"body":{"injectables/GameService.html":{}}}],["game_status_enum",{"_index":325,"title":{},"body":{"classes/Game.html":{},"miscellaneous/enumerations.html":{}}}],["game_status_enum.draft",{"_index":329,"title":{},"body":{"classes/Game.html":{}}}],["game_status_enum})@index('game_status_idx",{"_index":312,"title":{},"body":{"classes/Game.html":{}}}],["gameadmin.controller",{"_index":401,"title":{},"body":{"modules/GameModule.html":{}}}],["gameadmincontroller",{"_index":331,"title":{"controllers/GameAdminController.html":{}},"body":{"controllers/GameAdminController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamecompleted",{"_index":527,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.create(pojo",{"_index":540,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.verify(pojo",{"_index":536,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecontroller",{"_index":378,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamedto",{"_index":341,"title":{"classes/GameDto.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"coverage.html":{}}}],["gamedto})@get('/:id",{"_index":381,"title":{},"body":{"controllers/GameController.html":{}}}],["gameid",{"_index":519,"title":{},"body":{"injectables/PointsService.html":{}}}],["gameid.tostring",{"_index":533,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamemodule",{"_index":154,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gamerepository",{"_index":415,"title":{},"body":{"injectables/GameService.html":{}}}],["gameservice",{"_index":359,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genkeybyfilename",{"_index":584,"title":{},"body":{"injectables/S3Service.html":{}}}],["genkeybyfilename(filename",{"_index":593,"title":{},"body":{"injectables/S3Service.html":{}}}],["get('/:id",{"_index":367,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["get('/:id')@apiokresponse({type",{"_index":347,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["get()@healthcheck",{"_index":445,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(key",{"_index":596,"title":{},"body":{"injectables/S3Service.html":{}}}],["getgame",{"_index":337,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgame(@param('id",{"_index":368,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["getgame(id",{"_index":346,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgamewithcache",{"_index":409,"title":{},"body":{"injectables/GameService.html":{}}}],["getgamewithcache(id",{"_index":420,"title":{},"body":{"injectables/GameService.html":{}}}],["getobjecthead",{"_index":585,"title":{},"body":{"injectables/S3Service.html":{}}}],["getobjecthead(key",{"_index":598,"title":{},"body":{"injectables/S3Service.html":{}}}],["getredistoken",{"_index":561,"title":{},"body":{"modules/RedisModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gets3param",{"_index":586,"title":{},"body":{"injectables/S3Service.html":{}}}],["gets3param(key",{"_index":600,"title":{},"body":{"injectables/S3Service.html":{}}}],["getting",{"_index":766,"title":{"index.html":{}},"body":{}}],["global",{"_index":568,"title":{},"body":{"modules/RedisModule.html":{}}}],["google",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["google.auth.oauth2",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleapis",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["graph",{"_index":791,"title":{},"body":{"modules.html":{}}}],["grpc",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":479,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handlerequest",{"_index":10,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["handlerequest(err",{"_index":22,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["health",{"_index":443,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":458,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":260,"title":{},"body":{"modules/CoreModule.html":{}}}],["healthcheck",{"_index":447,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":448,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":441,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":254,"title":{"modules/HealthModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helmet",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["hk01",{"_index":92,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/PointsService.html":{},"dependencies.html":{}}}],["hk01.protobuf.game.mcgame",{"_index":528,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":105,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["host.switchtohttp",{"_index":118,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["hs256",{"_index":90,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["httpexception",{"_index":110,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpexception('game",{"_index":389,"title":{},"body":{"controllers/GameController.html":{}}}],["httpstatus",{"_index":111,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpstatus.bad_request",{"_index":129,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":122,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":391,"title":{},"body":{"controllers/GameController.html":{}}}],["id",{"_index":297,"title":{},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{}}}],["identifier",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":85,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["implements",{"_index":100,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":26,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index('game_name_idx",{"_index":327,"title":{},"body":{"classes/Game.html":{}}}],["index('game_status_idx",{"_index":330,"title":{},"body":{"classes/Game.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["inherited",{"_index":315,"title":{},"body":{"classes/Game.html":{}}}],["initializing",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["inject('event_bus_sdk",{"_index":281,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["inject(getredistoken",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectredis",{"_index":425,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":423,"title":{},"body":{"injectables/GameService.html":{}}}],["injectrepository(game",{"_index":427,"title":{},"body":{"injectables/GameService.html":{}}}],["insert",{"_index":543,"title":{},"body":{"injectables/PointsService.html":{}}}],["installation",{"_index":769,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":771,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":127,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["instead",{"_index":494,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["integrate",{"_index":537,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["intercept",{"_index":461,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":462,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":563,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":326,"title":{},"body":{"classes/Game.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["ioredis",{"_index":424,"title":{},"body":{"injectables/GameService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"dependencies.html":{}}}],["ioredis(options",{"_index":567,"title":{},"body":{"modules/RedisModule.html":{}}}],["ioredismoduleconnectiontoken",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfirsttimegamer",{"_index":513,"title":{},"body":{"injectables/PointsService.html":{}}}],["isglobal",{"_index":262,"title":{},"body":{"modules/CoreModule.html":{}}}],["isint",{"_index":396,"title":{},"body":{"classes/GameDto.html":{}}}],["isint()@apiproperty",{"_index":393,"title":{},"body":{"classes/GameDto.html":{}}}],["isstring",{"_index":58,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["isstring()@apiproperty",{"_index":55,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/GameDto.html":{}}}],["issuer",{"_index":91,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["join",{"_index":488,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["js",{"_index":525,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["json.parse(cache",{"_index":438,"title":{},"body":{"injectables/GameService.html":{}}}],["json.stringify(result",{"_index":440,"title":{},"body":{"injectables/GameService.html":{}}}],["jwt",{"_index":76,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":83,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["jwtmodule",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":592,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(0",{"_index":647,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(1",{"_index":649,"title":{},"body":{"injectables/S3Service.html":{}}}],["legend",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["load",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{}}}],["loader",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":468,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('eventbussdk",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('requestlog",{"_index":472,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["logger(pointsservice.name",{"_index":530,"title":{},"body":{"injectables/PointsService.html":{}}}],["logger.log",{"_index":481,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger.log('rmq",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`request",{"_index":474,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logginginterceptor",{"_index":459,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["lotteryrewardid",{"_index":516,"title":{},"body":{"injectables/PointsService.html":{}}}],["manager",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":40,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxtimeout",{"_index":289,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["mcgame",{"_index":768,"title":{},"body":{"index.html":{}}}],["member",{"_index":489,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["memberstrategy",{"_index":214,"title":{"injectables/MemberStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":123,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/PointsService.html":{}}}],["metadata",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":667,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":756,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":777,"title":{},"body":{"index.html":{}}}],["module",{"_index":140,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"modules/ThirdPartyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["modulemetadata",{"_index":576,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["modules",{"_index":142,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":587,"title":{},"body":{"injectables/S3Service.html":{}}}],["move(key",{"_index":604,"title":{},"body":{"injectables/S3Service.html":{}}}],["mysql",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":17,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["nestinterceptor",{"_index":467,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":577,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":77,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":30,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":61,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":450,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"dependencies.html":{}}}],["new",{"_index":38,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newgame",{"_index":428,"title":{},"body":{"injectables/GameService.html":{}}}],["newkey",{"_index":605,"title":{},"body":{"injectables/S3Service.html":{}}}],["newpayload",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":463,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now",{"_index":477,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":482,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":770,"title":{},"body":{"index.html":{}}}],["number",{"_index":305,"title":{},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["number(configservice.get('redis_port",{"_index":266,"title":{},"body":{"modules/CoreModule.html":{}}}],["oauth2client",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2client.gettoken(authcode",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":675,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.freeze",{"_index":626,"title":{},"body":{"injectables/S3Service.html":{}}}],["observable",{"_index":466,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["operation",{"_index":295,"title":{"classes/Operation.html":{}},"body":{"classes/Game.html":{},"classes/Operation.html":{},"coverage.html":{}}}],["operation:11",{"_index":320,"title":{},"body":{"classes/Game.html":{}}}],["operation:14",{"_index":321,"title":{},"body":{"classes/Game.html":{}}}],["operation:5",{"_index":316,"title":{},"body":{"classes/Game.html":{}}}],["operation:8",{"_index":318,"title":{},"body":{"classes/Game.html":{}}}],["operationlogmodule",{"_index":502,"title":{"modules/OperationLogModule.html":{}},"body":{"modules/OperationLogModule.html":{},"modules.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":554,"title":{},"body":{"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["options.imports",{"_index":570,"title":{},"body":{"modules/RedisModule.html":{}}}],["out",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["overview",{"_index":793,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":708,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":354,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["param('id",{"_index":373,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":630,"title":{},"body":{"injectables/S3Service.html":{}}}],["parseintpipe",{"_index":385,"title":{},"body":{"controllers/GameController.html":{}}}],["passport",{"_index":75,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":78,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["passportstrategy(strategy",{"_index":79,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["password",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":138,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["path.extname(filename",{"_index":645,"title":{},"body":{"injectables/S3Service.html":{}}}],["payload",{"_index":72,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/MemberStrategy.html":{}}}],["payload.email",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.name",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.picture",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.sub",{"_index":95,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["payload.username",{"_index":97,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["pick",{"_index":572,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["pipe",{"_index":480,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":671,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":672,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":676,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["player/player.module",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["playermodule",{"_index":155,"title":{"modules/PlayerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["points.service",{"_index":657,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["pointsservice",{"_index":505,"title":{"injectables/PointsService.html":{}},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["pojo",{"_index":532,"title":{},"body":{"injectables/PointsService.html":{}}}],["port",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["post",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{}}}],["post('/')@apiokresponse({type",{"_index":340,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["post('adminlogin",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":333,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}}}],["primarygeneratedcolumn",{"_index":306,"title":{},"body":{"classes/Game.html":{}}}],["private",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":779,"title":{},"body":{"index.html":{}}}],["project",{"_index":93,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["promise",{"_index":280,"title":{},"body":{"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":50,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{}}}],["proto",{"_index":522,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["provide",{"_index":565,"title":{},"body":{"modules/RedisModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":560,"title":{},"body":{"modules/RedisModule.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"modules/FormModule.html":{},"modules/GameModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/RewardModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["publish",{"_index":273,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["publish(routingpath",{"_index":276,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["published",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["publishgamecompleted",{"_index":507,"title":{},"body":{"injectables/PointsService.html":{}}}],["publishgamecompleted(gameid",{"_index":510,"title":{},"body":{"injectables/PointsService.html":{}}}],["put",{"_index":352,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id",{"_index":372,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id')@apiokresponse({type",{"_index":350,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["queue",{"_index":545,"title":{},"body":{"injectables/PointsService.html":{}}}],["quiz/quiz.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["quizmodule",{"_index":156,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["r",{"_index":612,"title":{},"body":{"injectables/S3Service.html":{}}}],["r.merge(r.clone(this.s3setting",{"_index":629,"title":{},"body":{"injectables/S3Service.html":{}}}],["ramda",{"_index":613,"title":{},"body":{"injectables/S3Service.html":{}}}],["readfilesync",{"_index":486,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["record",{"_index":601,"title":{},"body":{"injectables/S3Service.html":{}}}],["redirecturl",{"_index":52,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["redis",{"_index":413,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{}}}],["redis_module_connection_token",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisclient",{"_index":412,"title":{},"body":{"injectables/GameService.html":{}}}],["redisconnectionprovider",{"_index":564,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":255,"title":{"modules/RedisModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":264,"title":{},"body":{"modules/CoreModule.html":{}}}],["redismoduleasyncoptions",{"_index":558,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["redisoptions",{"_index":552,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["reflect",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":621,"title":{},"body":{"injectables/S3Service.html":{}}}],["repository",{"_index":411,"title":{},"body":{"injectables/GameService.html":{}}}],["request",{"_index":113,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["request.path",{"_index":476,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request.url",{"_index":139,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["res",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.set('authorization",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["response",{"_index":114,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{}}}],["response.json",{"_index":132,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["result",{"_index":39,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":41,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":287,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["retry",{"_index":286,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["return",{"_index":35,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["reward/reward.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["rewardmodule",{"_index":157,"title":{"modules/RewardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RewardModule.html":{},"modules.html":{},"overview.html":{}}}],["rimraf",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["routingpath",{"_index":279,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["rs256",{"_index":495,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["run",{"_index":774,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":469,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":471,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":582,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.service",{"_index":660,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["s3service",{"_index":580,"title":{"injectables/S3Service.html":{}},"body":{"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["s3setting",{"_index":583,"title":{},"body":{"injectables/S3Service.html":{}}}],["scoreingame",{"_index":512,"title":{},"body":{"injectables/PointsService.html":{}}}],["sdk",{"_index":274,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sdk.connect",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":619,"title":{},"body":{"injectables/S3Service.html":{}}}],["secretorkey",{"_index":87,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["signoptions",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CampaignModule.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"modules/FormModule.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"modules/RewardModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["src/.../configuration.ts",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eventbussdk.provider.ts",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.interface.ts",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.interceptor.ts",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../points.service.ts",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/adminlogin.dto.ts",{"_index":49,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/adminlogin.dto.ts:11",{"_index":57,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/dto/adminlogin.dto.ts:7",{"_index":56,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts:10",{"_index":14,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/admin.guard.ts:14",{"_index":24,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/member.guard.ts",{"_index":43,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{},"coverage.html":{}}}],["src/auth/guards/member.guard.ts:10",{"_index":44,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/guards/member.guard.ts:14",{"_index":45,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/strategies/admin.strategy.ts",{"_index":63,"title":{},"body":{"injectables/AdminStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/admin.strategy.ts:18",{"_index":71,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/admin.strategy.ts:7",{"_index":69,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts",{"_index":483,"title":{},"body":{"injectables/MemberStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/member.strategy.ts:25",{"_index":485,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts:9",{"_index":484,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/campaign/campaign.module.ts",{"_index":251,"title":{},"body":{"modules/CampaignModule.html":{}}}],["src/common/entities/operation.entity.ts",{"_index":496,"title":{},"body":{"classes/Operation.html":{},"coverage.html":{}}}],["src/common/entities/operation.entity.ts:11",{"_index":499,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:14",{"_index":500,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:5",{"_index":497,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:8",{"_index":498,"title":{},"body":{"classes/Operation.html":{}}}],["src/core/config/configuration.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":256,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/health/health.controller.ts",{"_index":442,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/core/health/health.controller.ts:19",{"_index":446,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/core/health/health.module.ts",{"_index":456,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/core/middlewares/exception.filter.ts",{"_index":99,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/core/middlewares/exception.filter.ts:13",{"_index":107,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/core/middlewares/logger.interceptor.ts",{"_index":460,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/middlewares/logger.interceptor.ts:15",{"_index":465,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/middlewares/validation.pipe.ts",{"_index":662,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/core/middlewares/validation.pipe.ts:18",{"_index":666,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/core/middlewares/validation.pipe.ts:6",{"_index":670,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/core/redis/constants.ts",{"_index":696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/redis/decorators.ts",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/redis/interface.ts",{"_index":571,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["src/core/redis/redis.module.ts",{"_index":548,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/redis.module.ts:21",{"_index":559,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/redis.module.ts:9",{"_index":553,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/utils.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/form/form.module.ts",{"_index":292,"title":{},"body":{"modules/FormModule.html":{}}}],["src/game/dtos/creategame.dto.ts",{"_index":268,"title":{},"body":{"classes/CreateGameReq.html":{},"coverage.html":{}}}],["src/game/dtos/creategame.dto.ts:7",{"_index":270,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["src/game/dtos/game.dto.ts",{"_index":392,"title":{},"body":{"classes/GameDto.html":{},"coverage.html":{}}}],["src/game/dtos/game.dto.ts:11",{"_index":395,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/dtos/game.dto.ts:7",{"_index":394,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entities/game.entity.ts",{"_index":294,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:15",{"_index":307,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:19",{"_index":309,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:23",{"_index":313,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:26",{"_index":304,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":379,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:26",{"_index":382,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":399,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":408,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:10",{"_index":414,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:17",{"_index":417,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:23",{"_index":422,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:28",{"_index":419,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:32",{"_index":418,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:37",{"_index":421,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/gameadmin.controller.ts",{"_index":332,"title":{},"body":{"controllers/GameAdminController.html":{},"coverage.html":{}}}],["src/game/gameadmin.controller.ts:30",{"_index":348,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:39",{"_index":342,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:49",{"_index":351,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:61",{"_index":345,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/interfaces/game.interface.ts",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/main.ts",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/operationlog/operationlog.module.ts",{"_index":503,"title":{},"body":{"modules/OperationLogModule.html":{}}}],["src/player/player.module.ts",{"_index":504,"title":{},"body":{"modules/PlayerModule.html":{}}}],["src/quiz/quiz.module.ts",{"_index":547,"title":{},"body":{"modules/QuizModule.html":{}}}],["src/reward/reward.module.ts",{"_index":579,"title":{},"body":{"modules/RewardModule.html":{}}}],["src/thirdparty/eventbussdk.provider.ts",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/eventbussdk.service.ts",{"_index":272,"title":{},"body":{"classes/EventBusSDKService.html":{},"coverage.html":{}}}],["src/thirdparty/eventbussdk.service.ts:10",{"_index":278,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/eventbussdk.service.ts:4",{"_index":275,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/points.service.ts",{"_index":506,"title":{},"body":{"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/points.service.ts:10",{"_index":509,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/points.service.ts:16",{"_index":518,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/s3.service.ts",{"_index":581,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/thirdparty/s3.service.ts:10",{"_index":610,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:11",{"_index":589,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:25",{"_index":602,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:32",{"_index":608,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:43",{"_index":591,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:55",{"_index":606,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:69",{"_index":597,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:80",{"_index":594,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:89",{"_index":599,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/thirdparty.module.ts",{"_index":656,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["start",{"_index":775,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":778,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":780,"title":{},"body":{"index.html":{}}}],["started",{"_index":767,"title":{"index.html":{}},"body":{}}],["statements",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":549,"title":{},"body":{"modules/RedisModule.html":{}}}],["status",{"_index":121,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Game.html":{}}}],["statuscode",{"_index":133,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["store",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["strategies/admin.strategy",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/member.strategy",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":74,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["string",{"_index":53,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"classes/Operation.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":82,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["super.canactivate(context",{"_index":36,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["support",{"_index":788,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":789,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":470,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["terminusmodule",{"_index":457,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":783,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":786,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":785,"title":{},"body":{"index.html":{}}}],["tests",{"_index":782,"title":{},"body":{"index.html":{}}}],["thirdpartymodule",{"_index":652,"title":{"modules/ThirdPartyModule.html":{}},"body":{"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["this.authservice.adminlogin",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('event_bus_max_timeout",{"_index":290,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('event_bus_retry_time",{"_index":288,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('s3_bucket",{"_index":628,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_bucket')}/${key",{"_index":640,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_key",{"_index":618,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_secret",{"_index":620,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_region",{"_index":622,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('sso_google_cilentid",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('sso_google_secret",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":455,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(key",{"_index":642,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.eventbussdkservice.publish(topic",{"_index":542,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.gamerepository.create",{"_index":429,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.findone(id",{"_index":432,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.save(newgame",{"_index":430,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.softdelete(id",{"_index":433,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.update(id",{"_index":431,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameservice.creategame(name",{"_index":371,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.deletegame(id",{"_index":377,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgame(id",{"_index":369,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgamewithcache(id",{"_index":388,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.updategame(id",{"_index":374,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.getobjecthead(key",{"_index":636,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(key",{"_index":631,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(newkey",{"_index":638,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.health.check",{"_index":454,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.decode(tk.tokens.id_token",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(newpayload",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":529,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.logger.error('eventbus",{"_index":546,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.redisclient.get(cachekey",{"_index":437,"title":{},"body":{"injectables/GameService.html":{}}}],["this.redisclient.set(cachekey",{"_index":439,"title":{},"body":{"injectables/GameService.html":{}}}],["this.s3",{"_index":623,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.copyobject(params).promise",{"_index":641,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.deleteobject(params).promise",{"_index":637,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.getobject(params).promise",{"_index":643,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.headobject(params).promise",{"_index":651,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.upload(params).promise",{"_index":633,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3setting",{"_index":625,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.sdk.publish",{"_index":284,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.tovalidate(metatype",{"_index":674,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":37,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameController.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":136,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["tk",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":282,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["topic",{"_index":285,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["tovalidate",{"_index":663,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":665,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":664,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":668,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":673,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["try",{"_index":531,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["ttl",{"_index":405,"title":{},"body":{"modules/GameModule.html":{}}}],["type",{"_index":18,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":323,"title":{},"body":{"classes/Game.html":{},"injectables/GameService.html":{},"classes/Operation.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":449,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{}}}],["typeormmodule.forfeature([game",{"_index":407,"title":{},"body":{"modules/GameModule.html":{}}}],["typeormmodule.forrootasync",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":681,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":683,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["ui",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":27,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["undefined",{"_index":126,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Game.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":781,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":104,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["updatedat",{"_index":300,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updatedatecolumn",{"_index":319,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updatedby",{"_index":301,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updategame",{"_index":338,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["updategame(id",{"_index":349,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["upload",{"_index":588,"title":{},"body":{"injectables/S3Service.html":{}}}],["upload(body",{"_index":607,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded",{"_index":632,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded.location",{"_index":634,"title":{},"body":{"injectables/S3Service.html":{}}}],["useclass",{"_index":573,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["useexisting",{"_index":574,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["usefactory",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["usefactory(options",{"_index":569,"title":{},"body":{"modules/RedisModule.html":{}}}],["useguards",{"_index":355,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useguards(adminauthguard",{"_index":365,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useinterceptors",{"_index":384,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":387,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor)@apiokresponse({type",{"_index":380,"title":{},"body":{"controllers/GameController.html":{}}}],["user",{"_index":23,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["userid",{"_index":94,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["username",{"_index":96,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"injectables/MemberStrategy.html":{}}}],["usevalue",{"_index":566,"title":{},"body":{"modules/RedisModule.html":{}}}],["using",{"_index":492,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["utils",{"_index":562,"title":{},"body":{"modules/RedisModule.html":{}}}],["uuid",{"_index":614,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":615,"title":{},"body":{"injectables/S3Service.html":{}}}],["validate",{"_index":65,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":678,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":70,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["validation_error",{"_index":131,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationerror",{"_index":112,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationpipe",{"_index":661,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":59,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":603,"title":{},"body":{"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":798,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyerr",{"_index":535,"title":{},"body":{"injectables/PointsService.html":{}}}],["void",{"_index":109,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["watch",{"_index":776,"title":{},"body":{"index.html":{}}}],["yaml_config_filename",{"_index":695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdminAuthGuard.html":{"url":"injectables/AdminAuthGuard.html","title":"injectable - AdminAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/admin.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('admin') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard-1.html":{"url":"injectables/AdminAuthGuard-1.html","title":"injectable - AdminAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/member.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('member') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminLoginRequestDto.html":{"url":"classes/AdminLoginRequestDto.html","title":"class - AdminLoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminLoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/adminLogin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authCode\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AdminLoginRequestDto {\n  @IsString()\n  @ApiProperty()\n  authCode: string;\n\n  @IsString()\n  @ApiProperty()\n  redirectUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStrategy.html":{"url":"injectables/AdminStrategy.html","title":"injectable - AdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/admin.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/admin.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/admin.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AdminStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SSO_SECRET'),\n      algorithms: ['HS256'],\n      // issuer: 'hk01-project',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = exception['message'];\n    let code = 'UNDEFINED';\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n    }\n    if (exception instanceof ValidationError) {\n      status = HttpStatus.BAD_REQUEST;\n      message = exception.constraints;\n      code = 'VALIDATION_ERROR';\n    }\n\n    response.json({\n      statusCode: status,\n      message: exception['details'] || message,\n      code: exception['code'] || code,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCampaignModule\n\nCampaignModule\n\nAppModule -->\n\nCampaignModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nAppModule -->\n\nPlayerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRewardModule\n\nRewardModule\n\nAppModule -->\n\nRewardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CampaignModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            PlayerModule\n                        \n                        \n                            QuizModule\n                        \n                        \n                            RewardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CoreModule } from './core/core.module'\nimport { AuthModule } from './auth/auth.module'\nimport { CampaignModule } from './campaign/campaign.module'\nimport { GameModule } from './game/game.module'\nimport { RewardModule } from './reward/reward.module'\nimport { PlayerModule } from './player/player.module'\nimport { QuizModule } from './quiz/quiz.module'\n\n@Module({\n  imports: [\n    CoreModule,\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('MYSQL_HOST'),\n        port: configService.get('MYSQL_PORT'),\n        username: configService.get('MYSQL_USER'),\n        password: configService.get('MYSQL_PASSWORD'),\n        database: configService.get('MYSQL_DATABASE'),\n        autoLoadEntities: true,\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    CampaignModule,\n    GameModule,\n    RewardModule,\n    PlayerModule,\n    QuizModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(body: AdminLoginRequestDto, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('adminLogin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AdminLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Response } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AuthService } from './auth.service';\nimport { AdminLoginRequestDto } from './dto/adminLogin.dto';\n\n@Controller('')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('adminLogin')\n  async adminLogin(@Body() body: AdminLoginRequestDto, @Response() res: any) {\n    const adminToken = await this.authService.adminLogin(\n      body.authCode,\n      body.redirectUrl,\n    );\n    res.set('Authorization', `Bearer ${adminToken}`);\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            MemberStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AdminStrategy } from './strategies/admin.strategy';\nimport { MemberStrategy } from './strategies/member.strategy';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SSO_SECRET'),\n        signOptions: {\n          expiresIn: '12h',\n          algorithm: 'HS256',\n          // issuer: 'hk01-project',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AdminStrategy, MemberStrategy, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(authCode: string, redirectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google } from 'googleapis';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async adminLogin(authCode: string, redirectUrl: string) {\n    const oAuth2Client = new google.auth.OAuth2(\n      this.configService.get('SSO_GOOGLE_CILENTID'),\n      this.configService.get('SSO_GOOGLE_SECRET'),\n      redirectUrl,\n    );\n    const tk = await oAuth2Client.getToken(authCode);\n    const payload: any = this.jwtService.decode(tk.tokens.id_token);\n    const newPayload = {\n      email: payload.email,\n      name: payload.name,\n      avatar: payload.picture,\n    };\n    return this.jwtService.sign(newPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CampaignModule.html":{"url":"modules/CampaignModule.html","title":"module - CampaignModule","body":"\n                   \n\n\n\n\n    Modules\n    CampaignModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/campaign/campaign.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class CampaignModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHealthModule->CoreModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\n\nimport { RedisModule } from './redis/redis.module'\nimport configuration from './config/configuration'\nimport { HealthModule } from './health/health.module'\n\n@Module({\n  imports: [\n    HealthModule,\n    RedisModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        host: configService.get('REDIS_HOST'),\n        port: Number(configService.get('REDIS_PORT')),\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameReq.html":{"url":"classes/CreateGameReq.html","title":"class - CreateGameReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/createGame.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/createGame.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGameReq {\n  @ApiProperty()\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBusSDKService.html":{"url":"classes/EventBusSDKService.html","title":"class - EventBusSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBusSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/eventBusSDK.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, sdk: any)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/eventBusSDK.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(routingPath: any, envelope: any)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/eventBusSDK.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routingPath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    envelope\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport class EventBusSDKService {\n  constructor(\n    private configService: ConfigService,\n    @Inject('EVENT_BUS_SDK') private sdk: any, // TODO: type definition\n  ) {}\n\n  async publish(routingPath: any, envelope: any): Promise {\n    await this.sdk.publish({\n      topic: routingPath,\n      envelope: envelope,\n      retry: {\n        retries: this.configService.get('EVENT_BUS_RETRY_TIME'),\n        maxTimeout: this.configService.get('EVENT_BUS_MAX_TIMEOUT'),\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/form/form.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class FormModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@Index('game_name_idx')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined, enum: GAME_STATUS_ENUM})@Index('game_status_idx')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:14\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  Index,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n} from 'typeorm'\n\nimport { Operation } from '../../common'\nimport { GAME_STATUS_ENUM } from '../interfaces'\n\n@Entity()\nexport class Game extends Operation {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  @Index('game_name_idx')\n  name: string\n\n  @Column({ default: GAME_STATUS_ENUM.DRAFT, enum: GAME_STATUS_ENUM })\n  @Index('game_status_idx')\n  status: string\n\n  @DeleteDateColumn()\n  deletedAt: Date\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameAdminController.html":{"url":"controllers/GameAdminController.html","title":"controller - GameAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/gameAdmin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiTags, ApiOkResponse, ApiBearerAuth } from '@nestjs/swagger'\n\nimport { AdminAuthGuard } from '../auth/guards/admin.guard'\n\nimport { GameService } from './game.service'\nimport { CreateGameReq, GameDto } from './dtos'\nimport { Game } from './entities'\n\n@Controller('admin/game')\n@ApiTags('game')\n// @UseGuards(AdminAuthGuard)\n@ApiBearerAuth('admin')\nexport class GameAdminController {\n  constructor(private gameService: GameService) {}\n\n  @Get('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async getGame(@Param('id') id: number): Promise {\n    const result = await this.gameService.getGame(id)\n    return result\n  }\n\n  @Post('/')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async createGame(@Body() body: CreateGameReq): Promise {\n    const { name } = body\n    const result = await this.gameService.createGame(name)\n    return result\n  }\n\n  @Put('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async updateGame(\n    @Param('id') id: number,\n    @Body() body: CreateGameReq,\n  ): Promise {\n    await this.gameService.updateGame(id, body as Game)\n    return\n  }\n\n  @Delete('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async deleteGame(@Param('id') id: number): Promise {\n    await this.gameService.deleteGame(id)\n    return\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CacheInterceptor)@ApiOkResponse({type: GameDto})@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n  ParseIntPipe,\n} from '@nestjs/common'\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger'\n\nimport { GameService } from './game.service'\nimport { GameDto } from './dtos'\n\n@Controller('game')\n@ApiTags('game')\nexport class GameController {\n  constructor(private gameService: GameService) {}\n\n  @UseInterceptors(CacheInterceptor)\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  @Get('/:id')\n  async getGame(@Param('id', ParseIntPipe) id: number): Promise {\n    const result = await this.gameService.getGameWithCache(id)\n    if (!result) {\n      throw new HttpException('Game Not Found', HttpStatus.NOT_FOUND)\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDto.html":{"url":"classes/GameDto.html","title":"class - GameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/game.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class GameDto {\n  @IsInt()\n  @ApiProperty()\n  id: number\n\n  @IsString()\n  @ApiProperty()\n  name: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameAdminController\n                        \n                        \n                            GameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { GameService } from './game.service'\nimport { GameAdminController } from './gameAdmin.controller'\nimport { GameController } from './game.controller'\n\nimport { Game } from './entities/game.entity'\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        ttl: configService.get('HTTP_CACHE_TTL'),\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forFeature([Game]),\n  ],\n  controllers: [GameAdminController, GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getGameWithCache\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRepository: Repository, redisClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGameWithCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameWithCache(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\nimport { Redis } from 'ioredis'\n\nimport { Game } from './entities/game.entity'\nimport { InjectRedis } from '../core/redis'\n\n@Injectable()\nexport class GameService {\n  constructor(\n    @InjectRepository(Game)\n    private gameRepository: Repository,\n    @InjectRedis() private redisClient: Redis,\n  ) {}\n\n  async createGame(name: string): Promise {\n    const newGame = this.gameRepository.create({ name })\n    const result = await this.gameRepository.save(newGame)\n    return result\n  }\n\n  async updateGame(id: number, game: Game): Promise {\n    await this.gameRepository.update(id, game)\n    return\n  }\n\n  async getGame(id: number): Promise {\n    return this.gameRepository.findOne(id)\n  }\n\n  async deleteGame(id: number): Promise {\n    await this.gameRepository.softDelete(id)\n    return\n  }\n\n  async getGameWithCache(id: number): Promise {\n    const cacheKey = `game_data:${id}`\n    const cache = await this.redisClient.get(cacheKey)\n    if (cache) {\n      return JSON.parse(cache)\n    }\n    let result\n    if (!cache) {\n      result = await this.gameRepository.findOne(id)\n      await this.redisClient.set(cacheKey, JSON.stringify(result))\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/core/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus'\n\n@Controller('health')\n@ApiTags('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/logger.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/logger.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst logger = new Logger('RequestLog');\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n\n    logger.log(`Request Comming [${request.path}]`);\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          logger.log(\n            `Request Response [${request.path} (${Date.now() - now}ms)]`,\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberStrategy.html":{"url":"injectables/MemberStrategy.html","title":"injectable - MemberStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/member.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/member.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/member.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class MemberStrategy extends PassportStrategy(Strategy, 'member') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: readFileSync(\n        join(\n          __dirname,\n          '../../..',\n          configService.get('HK01_SSO_PUBLIC_KEY'),\n        ), // TODO: using absolute path instead\n      ),\n      algorithms: ['RS256'],\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operation.html":{"url":"classes/Operation.html","title":"class - Operation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/operation.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, UpdateDateColumn } from 'typeorm'\n\nexport abstract class Operation {\n  @CreateDateColumn()\n  createdAt: Date\n\n  @Column()\n  createdBy: string\n\n  @UpdateDateColumn()\n  updatedAt: Date\n\n  @Column()\n  updatedBy: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OperationLogModule.html":{"url":"modules/OperationLogModule.html","title":"module - OperationLogModule","body":"\n                   \n\n\n\n\n    Modules\n    OperationLogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/operationLog/operationLog.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class OperationLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/player/player.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsService.html":{"url":"injectables/PointsService.html","title":"injectable - PointsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/points.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publishGameCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventBusSDKService: EventBusSDKService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventBusSDKService\n                                                  \n                                                        \n                                                                        EventBusSDKService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publishGameCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publishGameCompleted(gameId: number, accountId: number, scoreInGame: number, isFirstTimeGamer: boolean, completedTs: number, lotteryRewardId: number, attempt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/points.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreInGame\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFirstTimeGamer\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    completedTs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lotteryRewardId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attempt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { hk01 } from '@hk01-digital/shared-event-proto';\nimport EventbusSDK from '@hk01-digital/eventbus-js-sdk';\nimport { EventBusSDKService } from './eventBusSDK.service';\n\nconst { GameCompleted } = hk01.protobuf.game.mcgame;\n\n@Injectable()\nexport class PointsService {\n  logger: Logger;\n\n  constructor(private eventBusSDKService: EventBusSDKService) {\n    this.logger = new Logger(PointsService.name);\n  }\n\n  async publishGameCompleted(\n    gameId: number,\n    accountId: number,\n    scoreInGame: number,\n    isFirstTimeGamer: boolean,\n    completedTs: number,\n    lotteryRewardId: number,\n    attempt: number,\n  ): Promise {\n    try {\n      const pojo = {\n        gameId: gameId.toString(),\n        accountId: accountId,\n        scoreInGame: scoreInGame,\n        isFirstTimeGamer: isFirstTimeGamer === true ? 1 : 0,\n        attempt: attempt,\n        completedTs: completedTs,\n        lotteryRewardId: lotteryRewardId,\n      };\n\n      const verifyErr = GameCompleted.verify(pojo);\n      if (verifyErr) {\n        //TODO: integrate error\n        throw new Error('protobuf error');\n      }\n\n      const message = GameCompleted.create(pojo);\n      const { topic, envelope } = EventbusSDK.createEnvelopeWithBody(message);\n      return this.eventBusSDKService.publish(topic, envelope);\n    } catch (error) {\n      //TODO: insert to eventbus retry queue\n      this.logger.error('eventbus publish error');\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/quiz/quiz.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/redis/redis.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RedisOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/redis/redis.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RedisOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: RedisModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/redis/redis.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RedisModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Provider, DynamicModule } from '@nestjs/common';\nimport IORedis, { RedisOptions } from 'ioredis';\n\nimport { getRedisToken } from './utils';\nimport { RedisModuleAsyncOptions } from './interface';\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useValue: new IORedis(options),\n    };\n    return {\n      global: true,\n      module: RedisModule,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n  static forRootAsync(options: RedisModuleAsyncOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useFactory(options: RedisOptions) {\n        return new IORedis(options);\n      },\n    };\n\n    return {\n      global: true,\n      module: RedisModule,\n      imports: options.imports,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisModuleAsyncOptions.html":{"url":"interfaces/RedisModuleAsyncOptions.html","title":"interface - RedisModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedisModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/redis/interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\nimport { RedisOptions } from 'ioredis';\n\nexport interface RedisModuleAsyncOptions\n  extends Pick {\n  inject?: any[];\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (...args: any[]) => Promise | RedisOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RewardModule.html":{"url":"modules/RewardModule.html","title":"module - RewardModule","body":"\n                   \n\n\n\n\n    Modules\n    RewardModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reward/reward.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class RewardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/s3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                s3\n                            \n                            \n                                s3Setting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                genKeyByFilename\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getObjectHead\n                            \n                            \n                                    Private\n                                getS3Param\n                            \n                            \n                                    Async\n                                move\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKeyByFilename\n                        \n                        \n                    \n                \n            \n            \n                \ngenKeyByFilename(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjectHead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjectHead(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getS3Param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Param(key: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            move\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    move(key: string, newKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AWS.S3.Types\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3Setting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport * as AWS from 'aws-sdk'\nimport * as R from 'ramda'\nimport path from 'path'\nimport uuid from 'uuid/v4'\n\n@Injectable()\nexport class S3Service {\n  s3: AWS.S3.Types\n  s3Setting: Record\n\n  constructor(private configService: ConfigService) {\n    AWS.config.update({\n      accessKeyId: this.configService.get('S3_CLIENT_KEY'),\n      secretAccessKey: this.configService.get('S3_CLIENT_SECRET'),\n      region: this.configService.get('S3_REGION'),\n    })\n    this.s3 = new AWS.S3()\n    this.s3Setting = Object.freeze({\n      Bucket: this.configService.get('S3_BUCKET'),\n    })\n  }\n\n  private getS3Param(key: string, options: Record = {}): any {\n    return R.merge(R.clone(this.s3Setting), {\n      Key: key,\n      ...options,\n    })\n  }\n\n  async upload(body: string, key: string): Promise {\n    const params = this.getS3Param(key, { Body: body })\n    try {\n      const uploaded = await this.s3.upload(params).promise()\n      return uploaded.Location\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async delete(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      await this.s3.deleteObject(params).promise()\n      return true\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async move(key: string, newKey: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(newKey, {\n      CopySource: `${this.configService.get('S3_BUCKET')}/${key}`,\n    })\n    try {\n      await this.s3.copyObject(params).promise()\n      return await this.delete(key)\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async get(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.getObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  genKeyByFilename(filename: string): string {\n    const ext = path.extname(filename)\n    let key = uuid() + ext\n    const folder1 = key.substr(0, 1)\n    const folder2 = key.substr(1, 1)\n    key = `${folder1}/${folder2}/${key}`\n    return key\n  }\n\n  async getObjectHead(key: string): Promise {\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.headObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdPartyModule.html":{"url":"modules/ThirdPartyModule.html","title":"module - ThirdPartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdPartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/thirdParty/thirdParty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { PointsService } from './points.service'\nimport { EventBusSDKService } from './eventBusSDK.service'\nimport { eventBusSDKProviders } from './eventBusSDK.provider'\nimport { S3Service } from './s3.service'\n\n@Module({\n  imports: [ConfigModule],\n  providers: [\n    ...eventBusSDKProviders,\n    PointsService,\n    EventBusSDKService,\n    S3Service,\n  ],\n  exports: [PointsService, S3Service],\n})\nexport class ThirdPartyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/validation.pipe.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw errors[0];\n    }\n    return value;\n  }\n\n  private toValidate(metatype: unknown): boolean {\n    const types: unknown[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/adminLogin.dto.ts\n            \n            class\n            AdminLoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/admin.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/member.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/admin.strategy.ts\n            \n            injectable\n            AdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/member.strategy.ts\n            \n            injectable\n            MemberStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/entities/operation.entity.ts\n            \n            class\n            Operation\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/config/configuration.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/logger.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/logger.interceptor.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/middlewares/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/redis/constants.ts\n            \n            variable\n            REDIS_MODULE_CONNECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/redis/decorators.ts\n            \n            variable\n            InjectRedis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/redis/interface.ts\n            \n            interface\n            RedisModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/redis/utils.ts\n            \n            function\n            getRedisToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dtos/createGame.dto.ts\n            \n            class\n            CreateGameReq\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/dtos/game.dto.ts\n            \n            class\n            GameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/game/gameAdmin.controller.ts\n            \n            controller\n            GameAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            eventBusSDKProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.service.ts\n            \n            class\n            EventBusSDKService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            injectable\n            PointsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @commitlint/config-conventional : ^12.1.4\n        \n            @grpc/proto-loader : ^0.6.0\n        \n            @hk01-digital/eventbus-js-sdk : ^3.2.0\n        \n            @hk01-digital/shared-event-proto : ^2.23.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.15\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/terminus : ^7.1.2\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            aws-sdk : ^2.908.0\n        \n            cache-manager : ^3.4.3\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^9.0.2\n        \n            googleapis : ^73.0.0\n        \n            grpc : ^1.24.6\n        \n            helmet : ^4.6.0\n        \n            ioredis : ^4.27.2\n        \n            mysql2 : ^2.2.5\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n        \n            uuid : 3.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GAME_STATUS_ENUM   (src/.../game.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/game/interfaces/game.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        GAME_STATUS_ENUM\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : DRAFT\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : PUBLISHED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getRedisToken   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/redis/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRedisToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetRedisToken()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMCGame\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CampaignModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OperationLogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RewardModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdPartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCampaignModule\n\nCampaignModule\n\nAppModule -->\n\nCampaignModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nAppModule -->\n\nPlayerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRewardModule\n\nRewardModule\n\nAppModule -->\n\nRewardModule->AppModule\n\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nCoreModule -->\n\nHealthModule->CoreModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../configuration.ts)\n                        \n                        \n                            eventBusSDKProviders   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            InjectRedis   (src/.../decorators.ts)\n                        \n                        \n                            logger   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            logger   (src/.../logger.interceptor.ts)\n                        \n                        \n                            REDIS_MODULE_CONNECTION_TOKEN   (src/.../constants.ts)\n                        \n                        \n                               (src/.../points.service.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV || 'development'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YAML_CONFIG_FILENAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${env}.config.yml`\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/eventBusSDK.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventBusSDKProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'EVENT_BUS_SDK',\n    useFactory: async (configService: ConfigService): Promise => {\n      const sdk = new EventBusSDK(\n        configService.get('RMQ_URL'),\n        configService.get('EVENT_BUS_EXCHANGE_CREATE_MODE'),\n      );\n\n      logger.log('RMQ connection initializing...');\n      sdk.connect();\n      logger.log('RMQ connection established');\n\n      return sdk;\n    },\n    inject: [ConfigService],\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('EventBusSDK')\n                        \n                    \n\n\n            \n        \n\n    src/core/redis/decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectRedis\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return Inject(getRedisToken());\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/middlewares/logger.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('RequestLog')\n                        \n                    \n\n\n            \n        \n\n    src/core/redis/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REDIS_MODULE_CONNECTION_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IORedisModuleConnectionToken'\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/points.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : hk01.protobuf.game.mcgame\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
