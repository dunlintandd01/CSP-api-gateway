var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ANSWER_DISPLAY_MODE.html",[0,0.639,1,1.801]],["body/interfaces/ANSWER_DISPLAY_MODE.html",[0,1.182,1,2.479,2,1.317,3,0.152,4,0.152,5,0.131,6,1.941,7,0.318,8,1.326,9,3.583,10,3.9,11,3.583,12,0.278,13,1.825,14,0.019,15,2.813,16,2.813,17,1.721,18,2.636,19,2.813,20,2.813,21,1.825,22,2.813,23,2.813,24,1.825,25,2.813,26,2.813,27,2.813,28,2.813,29,1.825,30,2.813,31,2.813,32,2.813,33,1.721,34,2.338,35,1.026,36,0.929,37,0.426,38,0.799,39,0.009,40,0.013,41,0.009]],["title/interfaces/AUTH_MODE.html",[0,0.639,24,1.801]],["body/interfaces/AUTH_MODE.html",[0,1.179,1,1.805,2,1.302,3,0.151,4,0.151,5,0.129,6,1.92,7,0.315,8,1.316,9,2.792,10,3.683,11,2.792,12,0.277,13,1.805,14,0.019,15,2.792,16,2.792,17,1.702,18,2.616,19,2.792,20,2.792,21,1.805,22,2.792,23,2.792,24,2.461,25,3.569,26,3.569,27,3.569,28,3.569,29,1.805,30,2.792,31,2.792,32,2.792,33,1.702,34,2.32,35,1.015,36,0.919,37,0.421,38,0.79,39,0.009,40,0.013,41,0.009]],["title/injectables/AdminAuthGuard.html",[42,0.963,43,2.19]],["body/injectables/AdminAuthGuard.html",[3,0.163,4,0.163,5,0.14,7,0.34,12,0.163,14,0.019,37,0.605,39,0.01,40,0.013,41,0.01,42,1.386,43,3.151,44,1.737,45,3.432,46,1.53,47,4.561,48,4.561,49,4.561,50,4.866,51,1.078,52,3.999,53,1.53,54,0.518,55,1.456,56,3.058,57,1.53,58,4.561,59,5.684,60,3.999,61,5.124,62,0.489,63,4.561,64,0.55,65,3.432,66,2.371,67,0.117,68,2.073,69,3.999,70,1.319,71,3.432,72,1.645,73,1.271]],["title/injectables/AdminAuthGuard-1.html",[42,0.805,43,1.83,74,1.419]],["body/injectables/AdminAuthGuard-1.html",[3,0.163,4,0.163,5,0.14,7,0.34,12,0.163,14,0.019,37,0.605,39,0.01,40,0.013,41,0.01,42,1.386,43,3.151,44,1.737,46,1.53,47,4.561,48,4.561,49,4.561,50,4.866,51,1.078,53,1.53,54,0.518,55,1.456,56,3.058,57,1.53,58,4.561,59,5.684,61,5.124,62,0.489,63,4.561,64,0.55,65,3.432,66,2.371,67,0.117,68,2.073,70,1.319,71,3.432,72,1.645,73,1.271,75,3.432,76,3.999,77,3.999,78,3.999]],["title/classes/AdminLoginRequestDto.html",[67,0.108,79,2.567]],["body/classes/AdminLoginRequestDto.html",[3,0.182,4,0.182,5,0.157,7,0.381,8,1.493,12,0.182,14,0.019,38,1.419,39,0.011,40,0.015,41,0.011,51,1.161,54,0.741,62,0.526,67,0.168,79,3.98,80,2.061,81,3.847,82,5.415,83,5.415,84,2.355,85,4.914,86,4.483,87,4.483,88,4.034,89,2.324,90,4.825,91,1.948]],["title/injectables/AdminStrategy.html",[42,0.963,92,2.361]],["body/injectables/AdminStrategy.html",[3,0.152,4,0.152,5,0.13,7,0.317,12,0.152,14,0.019,37,0.577,39,0.009,40,0.013,41,0.009,42,1.323,44,1.621,46,1.46,51,1.028,53,1.46,54,0.657,55,1.39,57,1.074,62,0.568,64,0.513,66,2.212,67,0.109,68,1.934,70,0.926,92,3.243,93,3.201,94,1.744,95,3.879,96,1.819,97,2.593,98,3.254,99,3.73,100,4.353,101,3.73,102,2.853,103,3.201,104,3.201,105,2.853,106,2.853,107,1.715,108,3.201,109,3.201,110,3.73,111,2.063,112,3.201,113,3.201,114,3.201,115,3.201,116,2.853,117,3.201,118,3.201,119,3.201,120,3.201,121,3.201,122,2.593,123,3.201,124,3.201,125,3.201,126,2.853,127,3.201]],["title/classes/AllExceptionFilter.html",[67,0.108,128,2.825]],["body/classes/AllExceptionFilter.html",[3,0.137,4,0.137,5,0.118,7,0.287,12,0.137,14,0.019,37,0.384,39,0.009,40,0.012,41,0.009,46,1.363,51,0.685,53,0.972,54,0.437,55,0.925,57,0.972,62,0.503,64,0.465,67,0.139,73,1.074,80,1.553,89,1.751,128,3.622,129,2.898,130,2.62,131,5.47,132,4.534,133,4.736,134,4.694,135,4.694,136,5.929,137,3.377,138,5.47,139,2.898,140,4.065,141,2.898,142,4.736,143,4.065,144,3.622,145,2.898,146,1.923,147,3.377,148,3.377,149,3.377,150,3.377,151,5.088,152,3.377,153,3.074,154,3.377,155,4.12,156,2.898,157,4.736,158,3.377,159,3.377,160,3.377,161,3.377,162,3.377,163,3.377,164,3.377,165,3.377,166,3.377,167,3.377,168,2.347,169,3.377]],["title/modules/AppModule.html",[170,0.963,171,2.567]],["body/modules/AppModule.html",[3,0.121,4,0.121,5,0.104,12,0.121,14,0.019,39,0.008,40,0.011,41,0.008,54,0.386,62,0.615,64,0.411,67,0.087,94,1.312,98,3.124,107,1.372,126,2.282,135,3.721,170,1.332,171,4.84,172,1.164,173,1.547,174,1.769,175,1.769,176,1.547,177,1.455,178,1.651,179,2.561,180,2.561,181,3.97,182,3.97,183,3.97,184,3.806,185,2.571,186,1.769,187,1.769,188,2.984,189,2.906,190,3.549,191,2.561,192,2.074,193,4.336,194,2.984,195,2.984,196,2.984,197,2.984,198,3.013,199,2.984,200,2.984,201,1.908,202,2.984,203,2.984,204,2.984,205,2.984,206,3.549,207,2.984,208,2.984,209,2.772,210,2.984,211,2.984,212,4.336,213,2.984,214,2.984,215,2.984,216,2.984,217,2.984,218,2.984,219,2.984,220,2.984,221,2.114,222,2.984,223,2.984,224,2.984]],["title/controllers/AuthController.html",[225,1.174,226,2.567]],["body/controllers/AuthController.html",[3,0.158,4,0.158,5,0.135,7,0.329,12,0.158,14,0.019,37,0.441,39,0.01,40,0.013,41,0.01,46,1.498,51,0.786,53,1.116,54,0.502,55,1.062,57,1.116,62,0.577,64,0.533,67,0.113,70,0.962,79,4.366,84,1.594,91,1.684,94,1.778,111,2.143,144,3.98,146,1.362,225,1.655,226,3.617,227,1.594,228,3.325,229,4.467,230,3.875,231,5.877,232,5.205,233,3.875,234,3.484,235,2.477,236,2.143,237,3.484,238,3.325,239,3.875,240,3.875,241,3.875,242,5.205,243,1.684,244,3.875,245,3.875,246,3.875,247,3.875,248,3.875]],["title/modules/AuthModule.html",[170,0.963,181,2.361]],["body/modules/AuthModule.html",[3,0.137,4,0.137,5,0.117,12,0.137,14,0.019,39,0.009,40,0.012,41,0.009,62,0.622,64,0.462,66,1.989,67,0.098,92,4.128,94,1.015,98,2.882,107,1.542,118,2.879,120,2.879,121,2.879,122,2.332,123,2.879,170,1.421,172,1.308,173,1.739,174,1.989,175,1.989,176,1.739,177,2.657,178,1.856,181,4.458,185,2.795,186,1.989,187,1.989,189,2.444,190,3.276,209,2.145,221,1.636,226,3.788,227,1.939,237,3.829,238,2.879,249,2.879,250,2.879,251,4.128,252,3.355,253,4.714,254,3.355,255,2.566,256,3.355,257,3.355,258,3.355,259,3.355,260,3.355,261,3.355,262,3.355,263,3.355,264,3.355]],["title/injectables/AuthService.html",[42,0.963,237,2.19]],["body/injectables/AuthService.html",[3,0.14,4,0.14,5,0.12,7,0.293,12,0.14,14,0.019,37,0.63,38,1.39,39,0.009,40,0.012,41,0.009,42,1.253,44,1.498,46,1.383,51,0.974,53,1.383,54,0.622,55,1.316,57,0.992,62,0.55,64,0.475,67,0.101,70,0.855,73,1.096,82,2.958,83,5.134,94,1.673,96,2.342,98,3.259,102,2.636,107,1.585,146,2.103,229,4.123,237,2.849,243,1.498,255,2.636,265,2.958,266,3.447,267,6.514,268,3.447,269,4.804,270,3.447,271,3.447,272,2.958,273,1.976,274,3.447,275,3.447,276,3.447,277,3.447,278,3.447,279,3.447,280,3.447,281,3.447,282,3.447,283,3.447,284,3.447,285,3.447,286,3.447,287,3.447]],["title/classes/CreateGameReq.html",[67,0.108,288,2.567]],["body/classes/CreateGameReq.html",[3,0.195,4,0.195,5,0.167,7,0.406,8,1.556,12,0.195,14,0.019,37,0.74,38,1.273,39,0.012,40,0.015,41,0.012,51,0.97,54,0.619,62,0.548,67,0.175,80,2.199,84,1.968,88,3.814,89,2.48,90,4.562,91,2.078,288,4.146,289,4.105,290,4.783,291,4.783]],["title/classes/CreateHeroRequestDto.html",[67,0.108,292,2.19]],["body/classes/CreateHeroRequestDto.html",[3,0.2,4,0.2,5,0.172,7,0.418,8,1.584,12,0.2,14,0.019,37,0.75,38,1.296,39,0.012,40,0.015,41,0.012,51,0.998,54,0.638,62,0.453,67,0.178,80,2.264,84,2.026,88,4.211,89,2.553,292,3.601,293,4.226,294,4.925]],["title/classes/CreateHeroResponseDto.html",[67,0.108,295,2.19]],["body/classes/CreateHeroResponseDto.html",[3,0.18,4,0.18,5,0.154,7,0.376,8,1.481,12,0.18,14,0.019,35,1.718,36,1.409,37,0.714,38,1.212,39,0.011,40,0.014,41,0.011,51,1.151,54,0.735,62,0.522,67,0.166,80,2.034,84,2.335,88,4.008,89,2.293,130,3.141,295,3.366,296,3.796,297,2.445,298,5.381,299,4.423,300,4.423,301,4.423]],["title/classes/EventBusSDKService.html",[67,0.108,302,2.361]],["body/classes/EventBusSDKService.html",[3,0.157,4,0.157,5,0.135,7,0.328,12,0.157,14,0.019,37,0.591,39,0.01,40,0.013,41,0.01,46,1.494,51,1.052,53,1.494,54,0.759,55,1.422,57,1.111,62,0.477,64,0.531,67,0.113,80,1.775,94,1.774,96,2.531,97,2.683,98,3.287,107,1.775,201,2.468,221,1.882,243,1.677,273,2.135,302,3.319,303,3.312,304,4.455,305,3.75,306,3.86,307,5.191,308,5.617,309,3.86,310,5.191,311,2.256,312,3.86,313,3.86,314,3.86,315,3.312,316,3.312,317,3.86,318,3.86,319,3.86,320,3.86]],["title/interfaces/GAME_STATUS.html",[0,0.639,17,1.698]],["body/interfaces/GAME_STATUS.html",[0,1.182,1,1.825,2,1.317,3,0.152,4,0.152,5,0.131,6,1.941,7,0.318,8,1.326,9,2.813,10,3.696,11,2.813,12,0.278,13,1.825,14,0.019,15,2.813,16,2.813,17,2.338,18,3.358,19,3.583,20,3.583,21,1.825,22,2.813,23,2.813,24,1.825,25,2.813,26,2.813,27,2.813,28,2.813,29,1.825,30,2.813,31,2.813,32,2.813,33,1.721,34,2.338,35,1.026,36,0.929,37,0.426,38,0.799,39,0.009,40,0.013,41,0.009]],["title/interfaces/GAME_TYPE.html",[0,0.639,13,1.801]],["body/interfaces/GAME_TYPE.html",[0,1.182,1,1.825,2,1.317,3,0.152,4,0.152,5,0.131,6,1.941,7,0.318,8,1.326,9,2.813,10,3.9,11,2.813,12,0.278,13,2.479,14,0.019,15,3.583,16,3.583,17,1.721,18,2.636,19,2.813,20,2.813,21,1.825,22,2.813,23,2.813,24,1.825,25,2.813,26,2.813,27,2.813,28,2.813,29,1.825,30,2.813,31,2.813,32,2.813,33,1.721,34,2.338,35,1.026,36,0.929,37,0.426,38,0.799,39,0.009,40,0.013,41,0.009]],["title/classes/Game.html",[67,0.108,321,2.043]],["body/classes/Game.html",[2,1.465,3,0.17,4,0.17,5,0.145,7,0.354,8,1.424,12,0.17,14,0.019,17,1.915,18,2.831,35,1.669,36,1.355,37,0.693,38,1.38,39,0.011,40,0.014,41,0.011,51,1.235,54,0.789,62,0.502,67,0.122,80,1.915,84,2.506,151,5.228,321,3.021,322,3.575,323,6.092,324,4.165,325,6.466,326,4.165,327,4.165,328,4.165,329,5.46,330,3.186,331,3.186]],["title/controllers/GameAdminController.html",[225,1.174,332,2.567]],["body/controllers/GameAdminController.html",[3,0.1,4,0.1,5,0.086,7,0.209,12,0.1,14,0.019,35,1.584,36,1.576,37,0.624,39,0.014,40,0.01,41,0.006,43,1.456,46,1.08,51,1.032,53,1.466,54,0.803,55,1.395,57,1.466,62,0.531,64,0.338,67,0.072,70,1.263,84,2.094,91,1.067,94,2.022,111,1.359,146,1.599,225,0.781,227,1.01,234,3.767,235,2.397,236,1.359,243,2.212,288,4.178,311,2.694,321,2.075,332,2.606,333,2.108,334,1.707,335,2.456,336,3.218,337,3.218,338,2.868,339,3.904,340,2.456,341,2.456,342,4.061,343,2.456,344,2.108,345,2.456,346,2.456,347,1.879,348,2.456,349,2.456,350,2.108,351,2.456,352,2.456,353,2.456,354,2.108,355,1.57,356,2.456,357,4.705,358,2.456,359,2.456,360,2.516,361,1.879,362,2.108,363,2.456,364,2.456,365,2.108,366,2.456,367,2.456,368,2.108,369,2.108,370,2.456,371,2.456,372,2.456,373,2.456,374,2.456,375,2.456,376,2.456,377,2.456,378,2.456]],["title/controllers/GameController.html",[225,1.174,379,2.567]],["body/controllers/GameController.html",[3,0.151,4,0.151,5,0.129,7,0.315,12,0.151,14,0.019,35,1.383,36,1.425,37,0.421,39,0.016,40,0.013,41,0.009,46,1.453,51,0.751,53,1.066,54,0.653,55,1.015,57,1.066,62,0.567,64,0.51,67,0.108,70,0.919,72,1.523,73,1.177,84,1.523,91,1.609,94,1.737,111,2.048,140,3.178,141,3.178,146,1.302,225,1.177,227,1.523,236,2.048,243,1.609,311,2.193,321,2.048,334,2.573,338,3.86,342,3.226,347,2.832,355,2.367,357,4.331,360,3.176,361,2.832,362,3.178,365,3.178,368,3.178,369,3.178,379,3.508,380,3.178,381,3.703,382,3.703,383,3.703,384,3.703,385,3.703,386,5.047,387,3.703,388,3.703,389,3.703,390,3.703,391,3.703,392,3.703]],["title/classes/GameDto.html",[67,0.108,342,2.361]],["body/classes/GameDto.html",[3,0.182,4,0.182,5,0.156,7,0.379,8,1.489,12,0.182,14,0.019,35,1.725,36,1.417,37,0.717,38,1.219,39,0.011,40,0.014,41,0.011,51,1.158,54,0.739,62,0.525,67,0.167,80,2.052,84,2.349,85,3.83,88,3.65,89,2.314,90,4.815,91,1.939,298,4.9,342,3.65,393,3.83,394,4.463,395,4.463,396,4.463]],["title/modules/GameModule.html",[170,0.963,182,2.361]],["body/modules/GameModule.html",[3,0.151,4,0.151,5,0.13,12,0.151,14,0.019,39,0.009,40,0.013,41,0.009,62,0.627,64,0.512,67,0.109,94,1.124,98,3.011,107,1.709,170,1.5,172,1.449,173,1.927,174,2.203,175,2.203,176,1.927,177,2.805,178,2.056,182,4.262,185,3,186,2.203,187,2.203,189,2.623,190,3.516,191,3.189,192,2.583,209,2.376,221,1.812,227,2.081,321,2.056,332,3.998,360,3.688,361,2.842,379,3.998,397,3.189,398,3.189,399,3.716,400,3.716,401,3.716,402,3.716,403,3.189,404,3.716,405,3.716,406,3.716,407,3.716]],["title/injectables/GameService.html",[42,0.963,360,2.043]],["body/injectables/GameService.html",[2,0.833,3,0.096,4,0.096,5,0.083,7,0.201,12,0.096,14,0.019,33,1.089,35,1.369,36,1.645,37,0.698,38,0.949,39,0.014,40,0.009,41,0.006,42,0.951,44,1.029,46,1.05,51,1.155,53,1.64,54,0.738,55,1.561,57,1.553,62,0.546,64,0.326,67,0.069,70,1.414,94,2.073,96,1.778,146,1.757,192,1.646,243,2.476,273,1.5,311,2.789,321,3.39,330,1.812,336,3.13,337,3.13,338,2.79,339,3.13,344,3.13,347,2.79,350,3.13,360,2.018,403,2.033,408,2.033,409,3.648,410,2.369,411,4.996,412,4.448,413,4.629,414,2.369,415,3.648,416,3.648,417,2.369,418,2.369,419,2.369,420,3.648,421,2.369,422,2.369,423,2.369,424,1.646,425,2.79,426,2.369,427,2.369,428,2.369,429,2.369,430,2.369,431,3.648,432,2.369,433,2.369,434,2.369,435,3.817,436,2.369,437,2.369,438,2.369,439,2.369]],["title/controllers/HealthController.html",[225,1.174,440,2.567]],["body/controllers/HealthController.html",[3,0.175,4,0.175,5,0.15,7,0.366,12,0.175,14,0.019,39,0.011,40,0.014,41,0.011,46,1.607,51,0.874,57,1.241,62,0.569,64,0.593,67,0.126,70,1.069,84,1.773,91,1.872,96,2.101,225,1.37,227,1.773,236,2.384,273,2.296,334,2.995,440,3.88,441,3.698,442,5.582,443,6.55,444,4.309,445,4.309,446,5.582,447,5.582,448,5.582,449,3.295,450,4.309,451,4.309,452,4.309,453,4.309,454,4.309]],["title/modules/HealthModule.html",[170,0.963,183,2.361]],["body/modules/HealthModule.html",[3,0.2,4,0.2,5,0.172,12,0.2,14,0.019,39,0.012,40,0.015,41,0.012,62,0.605,64,0.678,67,0.144,170,1.584,172,1.92,183,3.883,189,2.553,227,2.499,440,4.578,449,3.766,455,4.925,456,6.074,457,4.925]],["title/interfaces/Hero.html",[0,0.639,297,1.441]],["body/interfaces/Hero.html",[0,0.756,2,1.062,3,0.123,4,0.123,5,0.105,7,0.257,8,1.141,12,0.178,14,0.019,35,1.839,36,1.484,37,0.681,38,1.203,39,0.013,40,0.011,41,0.008,54,0.566,62,0.55,64,0.416,67,0.128,68,1.566,70,1.085,72,1.242,73,0.96,74,1.389,91,1.312,94,1.323,130,1.671,146,1.538,153,2.267,221,1.473,225,0.96,234,2.593,235,2.796,236,1.671,243,1.312,273,1.799,292,2.593,295,1.791,297,2.198,311,1.9,355,1.931,458,2.099,459,3.932,460,3.345,461,1.566,462,3.04,463,1.931,464,2.31,465,2.507,466,1.791,467,1.931,468,1.566,469,3.345,470,2.31,471,2.31,472,2.31,473,2.31,474,2.31,475,2.31,476,2.31,477,2.31,478,1.791,479,2.31,480,2.31,481,2.31,482,2.31,483,2.31,484,2.31,485,2.31,486,2.31,487,2.31,488,2.31,489,2.31]],["title/interfaces/Hero-1.html",[0,0.534,74,1.419,297,1.203]],["body/interfaces/Hero-1.html",[0,0.866,2,1.288,3,0.149,4,0.149,5,0.128,7,0.311,8,1.306,12,0.232,14,0.019,34,1.684,35,1.923,36,1.523,37,0.755,38,1.218,39,0.009,40,0.013,41,0.009,54,0.649,62,0.46,64,0.504,67,0.107,70,0.909,72,1.506,73,1.164,74,1.684,153,1.898,155,2.545,225,1.593,273,1.506,297,2.507,461,1.898,465,1.785,466,2.171,468,1.898,490,2.545,491,2.801,492,3.831,493,3.831,494,3.202,495,2.801,496,2.801,497,2.545,498,2.801,499,2.801,500,2.801,501,2.801]],["title/interfaces/Hero-2.html",[0,0.534,297,1.203,497,2.145]],["body/interfaces/Hero-2.html",[0,0.856,2,1.74,3,0.201,4,0.201,5,0.173,7,0.42,8,1.589,12,0.201,14,0.018,35,1.888,36,1.638,37,0.784,38,1.409,39,0.013,40,0.015,41,0.013,54,0.789,297,2.376,502,4.247]],["title/interfaces/HeroById.html",[0,0.639,494,2.361]],["body/interfaces/HeroById.html",[0,0.882,2,1.322,3,0.153,4,0.153,5,0.131,7,0.319,8,1.33,12,0.236,14,0.019,34,1.728,35,1.933,36,1.54,37,0.659,38,0.802,39,0.01,40,0.013,41,0.01,54,0.487,62,0.469,64,0.517,67,0.11,70,0.933,72,1.546,73,1.195,74,1.728,153,1.948,155,2.612,225,1.621,273,1.546,297,2.42,461,1.948,465,1.832,466,2.228,468,1.948,490,2.612,491,2.874,492,3.899,493,3.899,494,3.699,495,2.874,496,2.874,497,2.612,498,2.874,499,2.874,500,2.874,501,2.874]],["title/controllers/HeroController.html",[225,1.174,478,2.19]],["body/controllers/HeroController.html",[0,0.698,3,0.11,4,0.11,5,0.095,7,0.23,12,0.164,14,0.019,35,1.703,36,1.198,37,0.609,38,1.142,39,0.012,40,0.01,41,0.007,46,1.162,51,0.979,53,1.162,54,0.523,55,1.106,57,1.39,62,0.526,64,0.373,67,0.118,68,1.405,70,1.002,72,1.114,73,0.861,74,1.246,84,1.661,91,1.177,94,1.815,130,1.499,139,2.325,146,1.42,153,2.093,221,1.321,225,0.861,227,1.114,234,2.394,235,3.086,236,1.499,243,1.177,273,1.661,292,3.172,295,1.606,297,2.086,311,2.324,334,1.883,355,1.732,458,1.883,459,4.588,460,3.088,461,1.405,462,2.806,463,1.732,464,2.072,465,2.353,466,1.606,467,1.732,468,1.405,469,3.088,470,2.072,471,2.072,472,2.072,473,2.072,474,2.072,475,2.072,476,2.072,477,2.072,478,2.394,479,2.072,480,2.072,481,2.072,482,2.072,483,3.088,484,2.072,485,2.072,486,2.072,487,3.692,488,3.088,489,2.072,503,4.038,504,2.709,505,2.709,506,2.709,507,2.709,508,2.709]],["title/classes/HeroError.html",[67,0.108,467,2.361]],["body/classes/HeroError.html",[0,0.747,3,0.121,4,0.121,5,0.104,7,0.252,8,1.126,12,0.176,14,0.019,35,1.698,36,1.387,37,0.579,38,0.921,39,0.013,40,0.011,41,0.008,51,0.875,53,0.854,54,0.384,55,0.813,62,0.546,64,0.408,67,0.126,68,2.238,70,1.071,72,1.22,73,0.943,74,1.364,80,1.364,91,1.289,94,1.306,96,1.446,130,1.641,146,1.518,153,2.897,221,1.446,225,0.943,234,2.56,235,2.76,236,1.641,243,1.289,273,1.776,292,2.56,295,1.759,297,1.985,311,1.876,355,1.896,458,2.062,459,3.892,460,3.301,461,1.538,462,3,463,1.896,464,2.269,465,2.481,466,1.759,467,2.76,468,2.238,469,4.542,470,3.301,471,2.269,472,2.269,473,2.269,474,2.269,475,2.269,476,2.269,477,2.269,478,1.759,479,2.269,480,2.269,481,2.269,482,2.269,483,2.269,484,2.269,485,2.269,486,2.269,487,2.269,488,2.269,489,2.269,509,4.317]],["title/modules/HeroModule.html",[170,0.963,198,2.567]],["body/modules/HeroModule.html",[3,0.178,4,0.178,5,0.153,12,0.178,14,0.019,37,0.499,39,0.011,40,0.014,41,0.011,62,0.606,64,0.604,67,0.128,168,3.047,170,1.472,172,1.71,189,2.273,198,3.924,227,2.322,297,1.71,461,2.273,478,3.702,510,4.385,511,4.385,512,5.645,513,3.763,514,4.385,515,4.385,516,4.385,517,4.385,518,3.353,519,3.763,520,4.385,521,4.385,522,4.385,523,4.385,524,4.385]],["title/modules/HeroSVCModule.html",[170,0.963,525,2.361]],["body/modules/HeroSVCModule.html",[3,0.206,4,0.206,5,0.176,12,0.206,14,0.019,39,0.013,40,0.016,41,0.013,62,0.567,64,0.695,67,0.148,170,1.608,172,1.969,177,2.462,227,2.537,465,3.247,525,3.943,526,5.049,527,5.049]],["title/controllers/HeroesService.html",[225,1.174,465,1.801]],["body/controllers/HeroesService.html",[0,0.856,3,0.146,4,0.146,5,0.126,7,0.306,12,0.23,14,0.019,34,1.653,35,1.808,36,1.228,37,0.693,38,0.767,39,0.009,40,0.013,41,0.009,46,1.424,51,0.729,53,1.035,54,0.466,55,0.985,57,1.035,62,0.455,64,0.495,67,0.105,70,0.892,72,1.479,73,1.143,74,1.653,84,1.479,153,1.864,155,2.499,225,1.573,227,1.479,273,1.479,297,2.491,461,1.864,465,2.412,466,2.933,468,1.864,490,2.499,491,2.75,492,4.325,493,3.783,494,3.894,495,2.75,496,2.75,497,2.499,498,2.75,499,2.75,500,2.75,501,2.75,528,4.947,529,3.596,530,3.596]],["title/interfaces/IGame.html",[0,0.639,33,1.698]],["body/interfaces/IGame.html",[0,1.176,1,1.792,2,1.292,3,0.15,4,0.15,5,0.128,6,1.905,7,0.312,8,1.31,9,2.778,10,3.675,11,2.778,12,0.277,13,1.792,14,0.019,15,2.778,16,2.778,17,1.69,18,2.603,19,2.778,20,2.778,21,1.792,22,2.778,23,2.778,24,1.792,25,2.778,26,2.778,27,2.778,28,2.778,29,1.792,30,2.778,31,2.778,32,2.778,33,2.309,34,2.309,35,1.684,36,1.419,37,0.7,38,1.221,39,0.009,40,0.013,41,0.009,54,0.65]],["title/injectables/LoggingInterceptor.html",[42,0.963,531,2.825]],["body/injectables/LoggingInterceptor.html",[3,0.154,4,0.154,5,0.132,7,0.322,12,0.154,14,0.019,37,0.431,39,0.01,40,0.013,41,0.01,42,1.336,44,1.645,46,1.475,50,4.76,51,0.768,53,1.09,54,0.49,55,1.038,56,2.896,57,1.09,62,0.534,64,0.521,67,0.111,70,0.94,73,1.204,130,2.095,143,4.398,144,2.896,146,2.042,462,4.037,463,2.421,531,3.919,532,2.896,533,5.125,534,5.125,535,6.224,536,6.224,537,3.787,538,5.125,539,3.562,540,5.125,541,3.787,542,3.25,543,3.787,544,3.787,545,3.787,546,5.125,547,3.787,548,5.125,549,3.787,550,3.787,551,3.787,552,3.787]],["title/injectables/MemberStrategy.html",[42,0.963,251,2.361]],["body/injectables/MemberStrategy.html",[3,0.142,4,0.142,5,0.122,7,0.297,12,0.142,14,0.019,37,0.552,39,0.009,40,0.012,41,0.009,42,1.265,44,1.519,46,1.397,51,0.983,53,1.397,54,0.628,55,1.329,57,1.006,62,0.601,64,0.481,66,2.072,67,0.102,68,1.812,70,0.867,94,1.685,95,3.71,96,1.704,97,2.429,98,3.19,100,4.163,102,2.673,103,3,104,3,105,2.673,106,2.673,107,1.607,108,3,109,3,111,1.934,112,3,113,3,114,3,115,3,116,2.673,117,3,119,3,124,3,125,3,126,2.673,127,3,168,3.371,201,2.235,251,3.101,513,4.163,553,3,554,3.496,555,3.496,556,4.851,557,3.496,558,3.496,559,3.496,560,3.496,561,3.496,562,3.496,563,3.496,564,3.496]],["title/modules/OperationLogModule.html",[170,0.963,565,2.825]],["body/modules/OperationLogModule.html",[3,0.215,4,0.215,5,0.185,12,0.215,14,0.019,39,0.013,40,0.016,41,0.013,62,0.486,64,0.728,67,0.155,170,1.654,172,2.063,177,2.579,565,4.852,566,5.289]],["title/injectables/PointsService.html",[42,0.963,567,2.361]],["body/injectables/PointsService.html",[3,0.107,4,0.107,5,0.092,7,0.224,8,1.03,12,0.107,14,0.019,36,1.769,37,0.45,39,0.007,40,0.01,41,0.007,42,1.03,44,1.143,46,1.137,51,0.962,53,1.137,54,0.614,55,1.082,57,0.757,62,0.485,64,0.362,67,0.077,70,0.98,72,1.082,73,1.256,74,1.21,94,1.435,96,1.283,111,1.455,116,2.012,122,3.296,132,2.012,146,1.987,153,1.364,201,2.525,206,1.828,302,3.794,304,2.258,305,1.682,308,3.39,311,1.716,315,2.258,316,2.258,468,2.733,539,4.124,567,2.525,568,2.012,569,4.743,570,2.631,571,3.95,572,2.631,573,5.65,574,5.65,575,5.65,576,4.07,577,5.65,578,5.65,579,5.65,580,2.631,581,4.743,582,2.258,583,2.258,584,2.258,585,2.258,586,2.258,587,2.258,588,2.258,589,2.631,590,2.258,591,2.631,592,2.631,593,2.258,594,2.631,595,2.631,596,2.012,597,3.95,598,2.631,599,2.258,600,2.631,601,2.631,602,2.631,603,2.631,604,2.631,605,2.631,606,2.631,607,2.631]],["title/interfaces/QUESTION_ORDER_MODE.html",[0,0.639,29,1.801]],["body/interfaces/QUESTION_ORDER_MODE.html",[0,1.182,1,1.825,2,1.317,3,0.152,4,0.152,5,0.131,6,1.941,7,0.318,8,1.326,9,2.813,10,3.696,11,2.813,12,0.278,13,1.825,14,0.019,15,2.813,16,2.813,17,1.721,18,2.636,19,2.813,20,2.813,21,1.825,22,2.813,23,2.813,24,1.825,25,2.813,26,2.813,27,2.813,28,2.813,29,2.479,30,3.583,31,3.583,32,3.583,33,1.721,34,2.338,35,1.026,36,0.929,37,0.426,38,0.799,39,0.009,40,0.013,41,0.009]],["title/modules/RedisModule.html",[170,0.963,184,2.361]],["body/modules/RedisModule.html",[0,0.576,3,0.136,4,0.136,5,0.116,12,0.136,14,0.019,37,0.534,39,0.008,40,0.012,41,0.008,46,0.959,51,0.951,53,1.351,54,0.607,55,1.286,57,1.351,62,0.542,64,0.459,67,0.097,70,1.347,73,1.492,146,1.65,170,1.537,172,1.3,177,2.287,178,2.595,184,3.768,189,1.728,206,3.261,424,3.261,518,3.588,608,3.332,609,5.894,610,3.332,611,4.692,612,5.331,613,3.332,614,6.212,615,3.332,616,4.692,617,4.096,618,3.332,619,5.43,620,4.153,621,3.332,622,6.444,623,4.026,624,3.332,625,4.692,626,4.692,627,3.332,628,3.332]],["title/interfaces/RedisModuleAsyncOptions.html",[0,0.639,617,2.567]],["body/interfaces/RedisModuleAsyncOptions.html",[0,0.709,2,1.441,3,0.167,4,0.167,5,0.143,7,0.348,8,1.409,12,0.167,14,0.019,39,0.01,40,0.014,41,0.01,54,0.946,55,1.944,62,0.496,68,2.8,209,4.107,221,3.132,311,1.78,424,2.847,612,4.635,617,3.754,629,3.516,630,5.401,631,6.424,632,6.424,633,4.635,634,4.097,635,4.097,636,4.097]],["title/injectables/S3Service.html",[42,0.963,637,2.361]],["body/injectables/S3Service.html",[3,0.067,4,0.067,5,0.058,7,0.141,8,0.714,12,0.067,14,0.019,37,0.612,38,1.496,39,0.004,40,0.007,41,0.004,42,0.714,44,0.719,46,0.788,51,1.165,53,1.548,54,0.744,55,1.474,57,1.48,62,0.446,64,0.228,67,0.048,70,1.276,72,1.855,73,1.544,74,1.259,94,1.914,96,0.807,97,1.15,98,2.368,107,0.761,111,0.916,132,3.448,146,1.961,168,1.903,201,2.882,206,1.15,234,2.077,243,2.234,273,1.441,305,1.058,311,2.497,331,1.266,354,2.35,468,3.28,518,3.113,593,3.869,599,3.869,637,1.751,638,1.42,639,3.502,640,3.502,641,2.738,642,2.738,643,2.738,644,2.738,645,2.738,646,2.738,647,2.738,648,1.655,649,6.136,650,2.738,651,1.655,652,1.655,653,2.738,654,1.655,655,2.738,656,1.655,657,2.738,658,4.509,659,1.655,660,1.266,661,2.738,662,3.502,663,1.655,664,2.738,665,1.655,666,2.738,667,1.655,668,2.35,669,1.655,670,1.655,671,2.35,672,1.655,673,1.655,674,1.655,675,1.655,676,1.655,677,1.655,678,1.655,679,1.655,680,1.655,681,1.655,682,1.655,683,1.655,684,1.655,685,1.655,686,1.655,687,4.509,688,4.07,689,1.655,690,1.655,691,1.655,692,4.509,693,3.502,694,1.655,695,1.655,696,1.655,697,1.655,698,1.655,699,1.655,700,1.655,701,2.738,702,1.655,703,1.655,704,1.655,705,1.655,706,1.655,707,1.655,708,1.655]],["title/modules/SVCAppModule.html",[170,0.963,709,2.567]],["body/modules/SVCAppModule.html",[3,0.188,4,0.188,5,0.161,12,0.188,14,0.019,39,0.012,40,0.015,41,0.012,62,0.535,64,0.634,67,0.135,170,1.666,172,1.797,173,2.388,174,2.731,175,2.731,176,2.388,177,2.246,178,2.548,185,3.454,186,2.731,187,2.731,189,3.021,525,4.523,709,4.917,710,3.954,711,3.954,712,4.607,713,4.607]],["title/modules/ThirdPartyModule.html",[170,0.963,714,2.567]],["body/modules/ThirdPartyModule.html",[3,0.151,4,0.151,5,0.129,12,0.151,14,0.019,39,0.009,40,0.013,41,0.009,62,0.612,64,0.51,67,0.108,107,1.702,170,1.497,172,1.444,173,1.92,174,2.195,175,2.195,176,1.92,177,2.799,178,3.176,185,2.992,186,2.195,187,2.195,189,1.92,190,3.508,302,3.226,567,4.626,588,3.178,637,4.626,714,4.944,715,3.178,716,3.178,717,3.178,718,3.703,719,3.703,720,3.86,721,3.703,722,3.703]],["title/interfaces/USER_AGENT_LIMIT_MODE.html",[0,0.639,21,1.801]],["body/interfaces/USER_AGENT_LIMIT_MODE.html",[0,1.182,1,1.825,2,1.317,3,0.152,4,0.152,5,0.131,6,1.941,7,0.318,8,1.326,9,2.813,10,3.9,11,2.813,12,0.278,13,1.825,14,0.019,15,2.813,16,2.813,17,1.721,18,2.636,19,2.813,20,2.813,21,2.479,22,3.583,23,3.583,24,1.825,25,2.813,26,2.813,27,2.813,28,2.813,29,1.825,30,2.813,31,2.813,32,2.813,33,1.721,34,2.338,35,1.026,36,0.929,37,0.426,38,0.799,39,0.009,40,0.013,41,0.009]],["title/injectables/ValidationPipe.html",[42,0.963,723,2.825]],["body/injectables/ValidationPipe.html",[3,0.138,4,0.138,5,0.119,7,0.289,12,0.138,14,0.019,36,0.844,37,0.542,38,0.726,39,0.009,40,0.012,41,0.009,42,1.241,44,1.477,46,1.37,51,0.965,53,1.37,54,0.616,55,1.304,57,1.37,62,0.505,64,0.468,67,0.161,70,1.362,72,1.399,89,1.763,94,1.661,95,2.601,130,1.881,134,5.103,146,1.93,156,2.918,243,1.477,273,2.258,576,4.711,596,2.601,660,4.548,723,3.639,724,2.918,725,4.759,726,4.759,727,4.759,728,3.4,729,5.49,730,4.759,731,5.946,732,3.4,733,4.759,734,3.4,735,2.918,736,3.4,737,4.759,738,3.4,739,3.4,740,3.4,741,3.4,742,3.4,743,3.4,744,3.4,745,3.4]],["title/coverage.html",[746,3.854]],["body/coverage.html",[0,1.132,1,1.033,5,0.074,6,2.952,13,1.033,14,0.019,17,0.974,21,1.033,24,1.033,29,1.033,33,0.974,39,0.005,40,0.008,41,0.005,42,1.622,43,1.982,45,1.818,54,0.274,67,0.178,73,0.673,75,1.818,79,1.472,81,1.818,92,1.354,93,1.818,128,1.62,129,1.818,176,1.098,225,1.729,226,1.472,228,1.818,237,1.256,251,1.354,265,1.818,288,1.472,289,1.818,292,1.256,293,1.818,295,1.256,296,1.818,297,1.615,302,1.354,303,1.818,321,1.172,322,1.818,332,1.472,333,1.818,342,1.354,360,1.172,379,1.472,380,1.818,393,1.818,408,1.818,425,1.62,440,1.472,441,1.818,458,3.268,465,1.63,467,1.354,478,1.256,490,2.878,494,1.354,502,1.818,531,1.62,532,2.556,539,2.323,553,1.818,567,1.354,568,2.556,596,5.739,617,1.472,620,1.62,629,1.818,633,3.553,637,1.354,638,1.818,720,1.62,723,1.62,724,1.818,746,1.62,747,2.118,748,2.118,749,2.118,750,6.219,751,6.7,752,2.869,753,5.902,754,1.818,755,6.343,756,1.818,757,5.902,758,2.118,759,4.141,760,2.869,761,1.818,762,1.818,763,1.818,764,1.818,765,1.818,766,2.869,767,2.118,768,2.118,769,2.118]],["title/dependencies.html",[173,2.303,519,2.648]],["body/dependencies.html",[14,0.019,39,0.009,40,0.012,41,0.009,64,0.475,66,2.044,67,0.141,89,1.787,91,1.498,105,3.674,106,2.636,107,1.585,122,3.339,145,4.123,173,1.787,192,2.396,255,2.636,272,2.958,305,3.071,330,2.636,413,2.958,424,2.396,435,4.123,449,2.636,461,1.787,463,2.204,582,2.958,583,2.958,584,2.958,586,2.958,587,2.958,668,2.958,671,2.958,735,2.958,770,3.447,771,3.447,772,3.447,773,3.447,774,3.447,775,3.447,776,3.447,777,3.447,778,5.982,779,3.447,780,3.447,781,3.447,782,4.804,783,3.447,784,3.447,785,3.447,786,3.447,787,4.804,788,3.447,789,3.447,790,3.447,791,3.447,792,3.447,793,3.447,794,3.447,795,3.447,796,3.447,797,3.447,798,3.447,799,3.447,800,3.447,801,3.447,802,3.447,803,3.447,804,3.447,805,3.447,806,3.447,807,3.447,808,3.447,809,3.447,810,3.447,811,3.447,812,3.447,813,3.447,814,3.447,815,3.447]],["title/miscellaneous/functions.html",[816,2.145,817,3.812]],["body/miscellaneous/functions.html",[7,0.454,14,0.016,39,0.014,40,0.016,41,0.014,176,3.539,620,5.221,760,4.588,761,5.858,765,4.588,816,3.715,817,4.588,818,6.385,819,5.346]],["title/index.html",[7,0.262,820,3.086,821,3.086]],["body/index.html",[14,0.019,39,0.012,40,0.015,41,0.012,746,3.523,822,4.607,823,4.607,824,7.185,825,4.607,826,4.607,827,3.954,828,7.075,829,4.607,830,4.607,831,5.826,832,4.607,833,4.607,834,4.607,835,4.607,836,5.826,837,5.826,838,4.607,839,4.607,840,4.607]],["title/modules.html",[172,1.965]],["body/modules.html",[14,0.015,39,0.012,40,0.015,41,0.012,171,3.217,172,1.805,181,2.959,182,2.959,183,2.959,184,2.959,198,3.217,525,2.959,565,3.539,709,3.217,714,3.217,841,6.936,842,6.936,843,6.936,844,7.397,845,6.936,846,6.936]],["title/overview.html",[847,4.324]],["body/overview.html",[2,1.225,14,0.019,39,0.009,40,0.012,41,0.009,44,1.513,80,1.601,92,3.555,170,0.908,171,4.884,172,1.358,173,1.806,174,2.065,175,2.065,176,1.806,177,1.698,178,1.927,179,2.989,180,2.989,181,4.437,182,4.036,183,3.555,184,3.555,185,2.869,186,2.065,187,2.065,227,1.433,237,3.297,249,2.989,250,2.989,251,3.555,360,3.076,397,2.989,398,2.989,525,3.555,567,4.285,637,4.285,709,4.176,710,2.989,711,2.989,714,4.75,715,2.989,716,2.989,717,2.989,847,2.989,848,4.839,849,3.483,850,3.483,851,3.483]],["title/miscellaneous/variables.html",[816,2.145,852,3.812]],["body/miscellaneous/variables.html",[7,0.303,14,0.019,38,0.762,39,0.009,40,0.012,41,0.009,54,0.637,70,1.222,73,1.791,94,1.08,98,2.747,146,1.255,209,2.282,221,1.741,305,3.147,311,1.551,331,5.259,425,3.765,532,2.731,539,4.221,542,3.064,568,2.731,585,3.064,590,3.064,623,3.064,660,5.259,720,3.765,752,3.064,754,4.225,756,4.225,762,3.064,763,4.225,764,3.064,766,3.064,816,2.481,827,3.064,852,3.064,853,4.923,854,4.923,855,3.57,856,3.57,857,3.57,858,3.57,859,3.57,860,3.57,861,3.57,862,3.57,863,3.57,864,4.923,865,4.923,866,3.57,867,3.57,868,3.57,869,3.57,870,3.57,871,3.57]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":596,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":74,"title":{"injectables/AdminAuthGuard-1.html":{},"interfaces/Hero-1.html":{}},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["1.24.6",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":848,"title":{},"body":{"overview.html":{}}}],["10001",{"_index":499,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["12.1.4",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["12h",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["13",{"_index":851,"title":{},"body":{"overview.html":{}}}],["2",{"_index":497,"title":{"interfaces/Hero-2.html":{}},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["2.0.0",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["2.908.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["4.27.2",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":849,"title":{},"body":{"overview.html":{}}}],["6.6.6",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["7.1.2",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["73.0.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":850,"title":{},"body":{"overview.html":{}}}],["9.0.2",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":559,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["absolute",{"_index":562,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["accesskeyid",{"_index":674,"title":{},"body":{"injectables/S3Service.html":{}}}],["accountid",{"_index":573,"title":{},"body":{"injectables/PointsService.html":{}}}],["add",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["admin",{"_index":110,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["admin/game",{"_index":335,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["adminauthguard",{"_index":43,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["adminlogin",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["adminlogin(@body",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminlogin(authcode",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["adminlogin(body",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminloginrequestdto",{"_index":79,"title":{"classes/AdminLoginRequestDto.html":{}},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["adminstrategy",{"_index":92,"title":{"injectables/AdminStrategy.html":{}},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["admintoken",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["algorithm",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":119,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["allexceptionfilter",{"_index":128,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["answer_display_mode",{"_index":1,"title":{"interfaces/ANSWER_DISPLAY_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["apibearerauth",{"_index":358,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apibearerauth('admin",{"_index":367,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apiokresponse",{"_index":357,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apiproperty",{"_index":90,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["apiproperty()@isstring",{"_index":290,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["apitags",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["apitags('auth",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":365,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apitags('health",{"_index":451,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('hero",{"_index":477,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["app",{"_index":826,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":171,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":636,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["argumentmetadata",{"_index":731,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":136,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["array",{"_index":744,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["asc",{"_index":30,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["async",{"_index":94,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":579,"title":{},"body":{"injectables/PointsService.html":{}}}],["auth.controller",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/admin.guard",{"_index":359,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["auth_mode",{"_index":24,"title":{"interfaces/AUTH_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["authcode",{"_index":82,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["authcontroller",{"_index":226,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":65,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["authguard('admin",{"_index":69,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["authguard('member",{"_index":78,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["authmodule",{"_index":181,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":237,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":846,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["aws",{"_index":668,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["aws.config.update",{"_index":673,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3",{"_index":681,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3.types",{"_index":666,"title":{},"body":{"injectables/S3Service.html":{}}}],["bearer",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/S3Service.html":{}}}],["body.authcode",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.redirecturl",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":576,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstrapmicroservices",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":844,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":841,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":684,"title":{},"body":{"injectables/S3Service.html":{}}}],["cache",{"_index":435,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":384,"title":{},"body":{"controllers/GameController.html":{}}}],["cachekey",{"_index":433,"title":{},"body":{"injectables/GameService.html":{}}}],["cachemodule",{"_index":400,"title":{},"body":{"modules/GameModule.html":{}}}],["cachemodule.registerasync",{"_index":404,"title":{},"body":{"modules/GameModule.html":{}}}],["callhandler",{"_index":536,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":47,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["canactivate(context",{"_index":49,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["catch",{"_index":132,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["catch(exception",{"_index":133,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["check",{"_index":443,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":67,"title":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/HeroError.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":80,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/HeroError.html":{},"overview.html":{}}}],["client",{"_index":480,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["clientgrpc",{"_index":460,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["clientsmodule",{"_index":511,"title":{},"body":{"modules/HeroModule.html":{}}}],["clientsmodule.register",{"_index":515,"title":{},"body":{"modules/HeroModule.html":{}}}],["cluster_appmodule",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":397,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_providers",{"_index":398,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_svcappmodule",{"_index":710,"title":{},"body":{"modules/SVCAppModule.html":{},"overview.html":{}}}],["cluster_svcappmodule_imports",{"_index":711,"title":{},"body":{"modules/SVCAppModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule",{"_index":715,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_exports",{"_index":717,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_providers",{"_index":716,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["code",{"_index":155,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["column",{"_index":325,"title":{},"body":{"classes/Game.html":{}}}],["column({default",{"_index":327,"title":{},"body":{"classes/Game.html":{}}}],["comming",{"_index":545,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["commitlint/config",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["completedts",{"_index":577,"title":{},"body":{"injectables/PointsService.html":{}}}],["config/configuration",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{}}}],["configmodule.forroot",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":98,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('event_bus_exchange_create_mode",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('hk01_sso_public_key",{"_index":560,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["configservice.get('http_cache_ttl",{"_index":406,"title":{},"body":{"modules/GameModule.html":{}}}],["configservice.get('mysql_database",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_host",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_password",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_port",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_user",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_host",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('rmq_url",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('sso_secret",{"_index":118,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["configuration",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":146,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":96,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"classes/HeroError.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["constructor(@inject('hero_package",{"_index":479,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["constructor(configservice",{"_index":97,"title":{},"body":{"injectables/AdminStrategy.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["constructor(errorcode",{"_index":470,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["constructor(eventbussdkservice",{"_index":570,"title":{},"body":{"injectables/PointsService.html":{}}}],["constructor(gamerepository",{"_index":410,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(jwtservice",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":111,"title":{},"body":{"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["context",{"_index":56,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":543,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":225,"title":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["controller('admin/game",{"_index":364,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["controller('game",{"_index":387,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('health",{"_index":450,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('hero",{"_index":476,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["controllers",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HeroController.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"overview.html":{}}}],["conventional",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["copysource",{"_index":696,"title":{},"body":{"injectables/S3Service.html":{}}}],["coverage",{"_index":746,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":487,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["create(createheroinput",{"_index":504,"title":{},"body":{"controllers/HeroController.html":{}}}],["creategame",{"_index":336,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["creategame(@body",{"_index":371,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(body",{"_index":340,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(name",{"_index":416,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamereq",{"_index":288,"title":{"classes/CreateGameReq.html":{}},"body":{"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["createheroinput",{"_index":488,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["createheroinput.name",{"_index":489,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["createherorequestdto",{"_index":292,"title":{"classes/CreateHeroRequestDto.html":{}},"body":{"classes/CreateHeroRequestDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["createheroresponsedto",{"_index":295,"title":{"classes/CreateHeroResponseDto.html":{}},"body":{"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["ctx",{"_index":147,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":150,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":149,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["data",{"_index":530,"title":{},"body":{"controllers/HeroesService.html":{}}}],["data.id",{"_index":501,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["database",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["date().toisostring",{"_index":167,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["date.now",{"_index":548,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["db",{"_index":452,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["decorators",{"_index":84,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{}}}],["default",{"_index":331,"title":{},"body":{"classes/Game.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":51,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["definition",{"_index":313,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["delete",{"_index":354,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/S3Service.html":{}}}],["delete('/:id",{"_index":376,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete('/:id')@apiokresponse({type",{"_index":345,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete(key",{"_index":647,"title":{},"body":{"injectables/S3Service.html":{}}}],["deleted",{"_index":20,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["deletegame",{"_index":337,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["deletegame(@param('id",{"_index":377,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["deletegame(id",{"_index":344,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["dependencies",{"_index":173,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":31,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["development",{"_index":827,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["digital/eventbus",{"_index":586,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["digital/shared",{"_index":582,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["documentation",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["doe",{"_index":498,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["dotenv",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["draft",{"_index":18,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["dto",{"_index":464,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["dto/adminlogin.dto",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos",{"_index":362,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["dynamicmodule",{"_index":614,"title":{},"body":{"modules/RedisModule.html":{}}}],["e2e",{"_index":838,"title":{},"body":{"index.html":{}}}],["email",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["entities",{"_index":363,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["entities/game.entity",{"_index":403,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{}}}],["entity",{"_index":329,"title":{},"body":{"classes/Game.html":{}}}],["env",{"_index":754,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envelope",{"_index":308,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["env}.config.yml",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":61,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["error",{"_index":468,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["error('protobuf",{"_index":600,"title":{},"body":{"injectables/PointsService.html":{}}}],["error('s3",{"_index":692,"title":{},"body":{"injectables/S3Service.html":{}}}],["error('test",{"_index":485,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["errorcode",{"_index":469,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["errors",{"_index":739,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":741,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors[0",{"_index":742,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["established",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":583,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["event_bus_sdk",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventbus",{"_index":605,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk",{"_index":585,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["eventbussdk.createenvelopewithbody(message",{"_index":602,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk.provider",{"_index":721,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["eventbussdk.service",{"_index":588,"title":{},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{}}}],["eventbussdkproviders",{"_index":720,"title":{},"body":{"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventbussdkservice",{"_index":302,"title":{"classes/EventBusSDKService.html":{}},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{}}}],["exception",{"_index":138,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.constraints",{"_index":160,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":158,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['code",{"_index":165,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['details",{"_index":164,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['message",{"_index":154,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfilter",{"_index":131,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["executioncontext",{"_index":50,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["expiresin",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":12,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["express",{"_index":145,"title":{},"body":{"classes/AllExceptionFilter.html":{},"dependencies.html":{}}}],["ext",{"_index":701,"title":{},"body":{"injectables/S3Service.html":{}}}],["extends",{"_index":68,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/MemberStrategy.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":103,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":114,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filename",{"_index":652,"title":{},"body":{"injectables/S3Service.html":{}}}],["findone",{"_index":528,"title":{},"body":{"controllers/HeroesService.html":{}}}],["findone(data",{"_index":466,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{}}}],["folder1",{"_index":703,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1}/${folder2}/${key",{"_index":707,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder2",{"_index":705,"title":{},"body":{"injectables/S3Service.html":{}}}],["forroot",{"_index":610,"title":{},"body":{"modules/RedisModule.html":{}}}],["forroot(options",{"_index":611,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync",{"_index":615,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":616,"title":{},"body":{"modules/RedisModule.html":{}}}],["found",{"_index":391,"title":{},"body":{"controllers/GameController.html":{}}}],["fs",{"_index":557,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["function",{"_index":633,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["functions",{"_index":817,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":321,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["game.controller",{"_index":402,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":361,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["game_data:${id",{"_index":434,"title":{},"body":{"injectables/GameService.html":{}}}],["game_status",{"_index":17,"title":{"interfaces/GAME_STATUS.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["game_type",{"_index":13,"title":{"interfaces/GAME_TYPE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["gameadmin.controller",{"_index":401,"title":{},"body":{"modules/GameModule.html":{}}}],["gameadmincontroller",{"_index":332,"title":{"controllers/GameAdminController.html":{}},"body":{"controllers/GameAdminController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamecompleted",{"_index":589,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.create(pojo",{"_index":601,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.verify(pojo",{"_index":598,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecontroller",{"_index":379,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamedto",{"_index":342,"title":{"classes/GameDto.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"coverage.html":{}}}],["gamedto})@get('/:id",{"_index":382,"title":{},"body":{"controllers/GameController.html":{}}}],["gameid",{"_index":581,"title":{},"body":{"injectables/PointsService.html":{}}}],["gameid.tostring",{"_index":595,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamemodule",{"_index":182,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gamerepository",{"_index":415,"title":{},"body":{"injectables/GameService.html":{}}}],["gameservice",{"_index":360,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genkeybyfilename",{"_index":641,"title":{},"body":{"injectables/S3Service.html":{}}}],["genkeybyfilename(filename",{"_index":650,"title":{},"body":{"injectables/S3Service.html":{}}}],["get('/:id",{"_index":368,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["get('/:id')@apiokresponse({type",{"_index":348,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["get(':id",{"_index":483,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["get()@healthcheck",{"_index":444,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(key",{"_index":653,"title":{},"body":{"injectables/S3Service.html":{}}}],["getbyid",{"_index":503,"title":{},"body":{"controllers/HeroController.html":{}}}],["getbyid(@param('id",{"_index":484,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["getbyid(id",{"_index":506,"title":{},"body":{"controllers/HeroController.html":{}}}],["getgame",{"_index":338,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgame(@param('id",{"_index":369,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["getgame(id",{"_index":347,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgamewithcache",{"_index":409,"title":{},"body":{"injectables/GameService.html":{}}}],["getgamewithcache(id",{"_index":420,"title":{},"body":{"injectables/GameService.html":{}}}],["getobjecthead",{"_index":642,"title":{},"body":{"injectables/S3Service.html":{}}}],["getobjecthead(key",{"_index":655,"title":{},"body":{"injectables/S3Service.html":{}}}],["getredistoken",{"_index":620,"title":{},"body":{"modules/RedisModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gets3param",{"_index":643,"title":{},"body":{"injectables/S3Service.html":{}}}],["gets3param(key",{"_index":657,"title":{},"body":{"injectables/S3Service.html":{}}}],["getting",{"_index":820,"title":{"index.html":{}},"body":{}}],["global",{"_index":626,"title":{},"body":{"modules/RedisModule.html":{}}}],["google",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["google.auth.oauth2",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleapis",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["graph",{"_index":845,"title":{},"body":{"modules.html":{}}}],["grpc",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["grpcmethod",{"_index":492,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["handle",{"_index":549,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handlerequest",{"_index":48,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["handlerequest(err",{"_index":58,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["health",{"_index":442,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":457,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":446,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":447,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":440,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":183,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helmet",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["hero",{"_index":297,"title":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{}},"body":{"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["hero.controller",{"_index":514,"title":{},"body":{"modules/HeroModule.html":{}}}],["hero/hero.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["hero_package",{"_index":516,"title":{},"body":{"modules/HeroModule.html":{}}}],["herobyid",{"_index":494,"title":{"interfaces/HeroById.html":{}},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["herocontroller",{"_index":478,"title":{"controllers/HeroController.html":{}},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"coverage.html":{}}}],["heroerror",{"_index":467,"title":{"classes/HeroError.html":{}},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["heroesservice",{"_index":465,"title":{"controllers/HeroesService.html":{}},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["heromodule",{"_index":198,"title":{"modules/HeroModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeroModule.html":{},"modules.html":{}}}],["heroscv/herosvc.module",{"_index":713,"title":{},"body":{"modules/SVCAppModule.html":{}}}],["herosvc.controller",{"_index":527,"title":{},"body":{"modules/HeroSVCModule.html":{}}}],["herosvcmodule",{"_index":525,"title":{"modules/HeroSVCModule.html":{}},"body":{"modules/HeroSVCModule.html":{},"modules/SVCAppModule.html":{},"modules.html":{},"overview.html":{}}}],["hk01",{"_index":122,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/PointsService.html":{},"dependencies.html":{}}}],["hk01.protobuf.game.mcgame",{"_index":590,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["hk01_webview_only",{"_index":22,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["host",{"_index":135,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{}}}],["host.switchtohttp",{"_index":148,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["hs256",{"_index":120,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["httpexception",{"_index":140,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpexception('game",{"_index":390,"title":{},"body":{"controllers/GameController.html":{}}}],["httpstatus",{"_index":141,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpstatus.bad_request",{"_index":159,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":152,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":392,"title":{},"body":{"controllers/GameController.html":{}}}],["id",{"_index":35,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["identifier",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["igame",{"_index":33,"title":{"interfaces/IGame.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"injectables/GameService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["ignoreexpiration",{"_index":115,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["implements",{"_index":130,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":62,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{}}}],["in_question",{"_index":9,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["initializing",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["inject('event_bus_sdk",{"_index":312,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["inject(getredistoken",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":44,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectredis",{"_index":425,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":423,"title":{},"body":{"injectables/GameService.html":{}}}],["injectrepository(game",{"_index":426,"title":{},"body":{"injectables/GameService.html":{}}}],["insert",{"_index":604,"title":{},"body":{"injectables/PointsService.html":{}}}],["installation",{"_index":823,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":825,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":157,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["instead",{"_index":563,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["integrate",{"_index":599,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["intercept",{"_index":533,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":534,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"overview.html":{}}}],["interfaces/hero.interface",{"_index":301,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["ioredis",{"_index":424,"title":{},"body":{"injectables/GameService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"dependencies.html":{}}}],["ioredis(options",{"_index":625,"title":{},"body":{"modules/RedisModule.html":{}}}],["ioredismoduleconnectiontoken",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfirsttimegamer",{"_index":575,"title":{},"body":{"injectables/PointsService.html":{}}}],["isglobal",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":298,"title":{},"body":{"classes/CreateHeroResponseDto.html":{},"classes/GameDto.html":{}}}],["isint()@apiproperty",{"_index":394,"title":{},"body":{"classes/GameDto.html":{}}}],["isstring",{"_index":88,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/GameDto.html":{}}}],["isstring()@apiproperty",{"_index":85,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/GameDto.html":{}}}],["issuer",{"_index":121,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["items",{"_index":495,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["john",{"_index":496,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["join",{"_index":513,"title":{},"body":{"modules/HeroModule.html":{},"injectables/MemberStrategy.html":{}}}],["join(__dirname",{"_index":521,"title":{},"body":{"modules/HeroModule.html":{}}}],["js",{"_index":587,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["json.parse(cache",{"_index":437,"title":{},"body":{"injectables/GameService.html":{}}}],["json.stringify(result",{"_index":439,"title":{},"body":{"injectables/GameService.html":{}}}],["jwt",{"_index":106,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":113,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["jwtmodule",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":649,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(0",{"_index":704,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(1",{"_index":706,"title":{},"body":{"injectables/S3Service.html":{}}}],["legend",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["load",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["loader",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["localhost:50051",{"_index":524,"title":{},"body":{"modules/HeroModule.html":{}}}],["logger",{"_index":539,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('eventbussdk",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('requestlog",{"_index":542,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["logger(pointsservice.name",{"_index":592,"title":{},"body":{"injectables/PointsService.html":{}}}],["logger.log",{"_index":551,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger.log('rmq",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`request",{"_index":544,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logginginterceptor",{"_index":531,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["lotteryrewardid",{"_index":578,"title":{},"body":{"injectables/PointsService.html":{}}}],["manager",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":40,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxtimeout",{"_index":319,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["mcgame",{"_index":822,"title":{},"body":{"index.html":{}}}],["member",{"_index":558,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["member_bind_phone",{"_index":28,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["member_without_bind_phone",{"_index":27,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["memberstrategy",{"_index":251,"title":{"injectables/MemberStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":153,"title":{},"body":{"classes/AllExceptionFilter.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{}}}],["metadata",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":729,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":816,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":831,"title":{},"body":{"index.html":{}}}],["module",{"_index":170,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/OperationLogModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/OperationLogModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["modulemetadata",{"_index":634,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["modules",{"_index":172,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"modules/OperationLogModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":644,"title":{},"body":{"injectables/S3Service.html":{}}}],["move(key",{"_index":661,"title":{},"body":{"injectables/S3Service.html":{}}}],["multiple_choice",{"_index":15,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["mysql",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":37,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["nestinterceptor",{"_index":538,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":64,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":635,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":107,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":461,"title":{},"body":{"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"controllers/HeroesService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":66,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":91,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":449,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"dependencies.html":{}}}],["new",{"_index":73,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newgame",{"_index":427,"title":{},"body":{"injectables/GameService.html":{}}}],["newkey",{"_index":662,"title":{},"body":{"injectables/S3Service.html":{}}}],["newpayload",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":535,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["none",{"_index":10,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["now",{"_index":547,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":552,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":824,"title":{},"body":{"index.html":{}}}],["number",{"_index":36,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["number(configservice.get('redis_port",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["oauth2client",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2client.gettoken(authcode",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":737,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.freeze",{"_index":683,"title":{},"body":{"injectables/S3Service.html":{}}}],["observable",{"_index":462,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{}}}],["onmoduleinit",{"_index":459,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["operationlogmodule",{"_index":565,"title":{"modules/OperationLogModule.html":{}},"body":{"modules/OperationLogModule.html":{},"modules.html":{}}}],["optional",{"_index":55,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":518,"title":{},"body":{"modules/HeroModule.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["options.imports",{"_index":628,"title":{},"body":{"modules/RedisModule.html":{}}}],["out",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["overview",{"_index":847,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":519,"title":{"dependencies.html":{}},"body":{"modules/HeroModule.html":{}}}],["param",{"_index":355,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["param('id",{"_index":374,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["parameters",{"_index":53,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":687,"title":{},"body":{"injectables/S3Service.html":{}}}],["parseintpipe",{"_index":386,"title":{},"body":{"controllers/GameController.html":{}}}],["passport",{"_index":105,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":108,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["passportstrategy(strategy",{"_index":109,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["password",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":168,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/HeroModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["path.extname(filename",{"_index":702,"title":{},"body":{"injectables/S3Service.html":{}}}],["payload",{"_index":102,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/MemberStrategy.html":{}}}],["payload.email",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.name",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.picture",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.sub",{"_index":125,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["payload.username",{"_index":127,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["pick",{"_index":630,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["pipe",{"_index":550,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":733,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":734,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":738,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["points.service",{"_index":719,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["pointsservice",{"_index":567,"title":{"injectables/PointsService.html":{}},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["pojo",{"_index":594,"title":{},"body":{"injectables/PointsService.html":{}}}],["port",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["post('/')@apiokresponse({type",{"_index":341,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["post('adminlogin",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["post_game",{"_index":11,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["prefix",{"_index":334,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{}}}],["primarygeneratedcolumn",{"_index":323,"title":{},"body":{"classes/Game.html":{}}}],["private",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":833,"title":{},"body":{"index.html":{}}}],["project",{"_index":123,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["promise",{"_index":311,"title":{},"body":{"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"classes/HeroError.html":{},"interfaces/IGame.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["proto",{"_index":584,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["proto/hero.proto",{"_index":522,"title":{},"body":{"modules/HeroModule.html":{}}}],["protopath",{"_index":520,"title":{},"body":{"modules/HeroModule.html":{}}}],["provide",{"_index":623,"title":{},"body":{"modules/RedisModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":619,"title":{},"body":{"modules/RedisModule.html":{}}}],["providers",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/HeroSVCModule.html":{},"modules/OperationLogModule.html":{},"modules/RedisModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["psy_test",{"_index":16,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["public",{"_index":25,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["publish",{"_index":304,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["publish(routingpath",{"_index":307,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["published",{"_index":19,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["publishgamecompleted",{"_index":569,"title":{},"body":{"injectables/PointsService.html":{}}}],["publishgamecompleted(gameid",{"_index":572,"title":{},"body":{"injectables/PointsService.html":{}}}],["put",{"_index":353,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id",{"_index":373,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id')@apiokresponse({type",{"_index":351,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["question_order_mode",{"_index":29,"title":{"interfaces/QUESTION_ORDER_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["queue",{"_index":606,"title":{},"body":{"injectables/PointsService.html":{}}}],["r",{"_index":669,"title":{},"body":{"injectables/S3Service.html":{}}}],["r.merge(r.clone(this.s3setting",{"_index":686,"title":{},"body":{"injectables/S3Service.html":{}}}],["ramda",{"_index":670,"title":{},"body":{"injectables/S3Service.html":{}}}],["random",{"_index":32,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["readfilesync",{"_index":556,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["readonly",{"_index":34,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["record",{"_index":658,"title":{},"body":{"injectables/S3Service.html":{}}}],["redirecturl",{"_index":83,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["redis",{"_index":413,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_module_connection_token",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisclient",{"_index":412,"title":{},"body":{"injectables/GameService.html":{}}}],["redisconnectionprovider",{"_index":622,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":184,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["redismoduleasyncoptions",{"_index":617,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["redisoptions",{"_index":612,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["reflect",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":678,"title":{},"body":{"injectables/S3Service.html":{}}}],["repository",{"_index":411,"title":{},"body":{"injectables/GameService.html":{}}}],["request",{"_index":143,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["request.path",{"_index":546,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request.url",{"_index":169,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["res",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.set('authorization",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["response",{"_index":144,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{}}}],["response.json",{"_index":162,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["result",{"_index":39,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":41,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":317,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["retry",{"_index":316,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["return",{"_index":70,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":57,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"controllers/HeroController.html":{},"controllers/HeroesService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["routingpath",{"_index":310,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["rpcexception",{"_index":493,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["rs256",{"_index":564,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["run",{"_index":828,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":463,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":541,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":639,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.service",{"_index":722,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["s3service",{"_index":637,"title":{"injectables/S3Service.html":{}},"body":{"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["s3setting",{"_index":640,"title":{},"body":{"injectables/S3Service.html":{}}}],["scoreingame",{"_index":574,"title":{},"body":{"injectables/PointsService.html":{}}}],["sdk",{"_index":305,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sdk.connect",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":676,"title":{},"body":{"injectables/S3Service.html":{}}}],["secretorkey",{"_index":117,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["signoptions",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"modules/HeroModule.html":{},"modules/HeroSVCModule.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"injectables/PointsService.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{}}}],["src/.../configuration.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eventbussdk.provider.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.interceptor.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../points.service.ts",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/adminlogin.dto.ts",{"_index":81,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/adminlogin.dto.ts:11",{"_index":87,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/dto/adminlogin.dto.ts:7",{"_index":86,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/guards/admin.guard.ts",{"_index":45,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts:10",{"_index":52,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/admin.guard.ts:14",{"_index":60,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/member.guard.ts",{"_index":75,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{},"coverage.html":{}}}],["src/auth/guards/member.guard.ts:10",{"_index":76,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/guards/member.guard.ts:14",{"_index":77,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/strategies/admin.strategy.ts",{"_index":93,"title":{},"body":{"injectables/AdminStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/admin.strategy.ts:18",{"_index":101,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/admin.strategy.ts:7",{"_index":99,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts",{"_index":553,"title":{},"body":{"injectables/MemberStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/member.strategy.ts:25",{"_index":555,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts:9",{"_index":554,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/config/configuration.ts",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/dtos/creategame.dto.ts",{"_index":289,"title":{},"body":{"classes/CreateGameReq.html":{},"coverage.html":{}}}],["src/game/dtos/creategame.dto.ts:7",{"_index":291,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["src/game/dtos/game.dto.ts",{"_index":393,"title":{},"body":{"classes/GameDto.html":{},"coverage.html":{}}}],["src/game/dtos/game.dto.ts:11",{"_index":396,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/dtos/game.dto.ts:7",{"_index":395,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entities/game.entity.ts",{"_index":322,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:11",{"_index":326,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:14",{"_index":328,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:8",{"_index":324,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":380,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:26",{"_index":383,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":399,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":408,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:11",{"_index":414,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:18",{"_index":417,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:24",{"_index":422,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:29",{"_index":419,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:33",{"_index":418,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:38",{"_index":421,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/gameadmin.controller.ts",{"_index":333,"title":{},"body":{"controllers/GameAdminController.html":{},"coverage.html":{}}}],["src/game/gameadmin.controller.ts:30",{"_index":349,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:39",{"_index":343,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:49",{"_index":352,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:61",{"_index":346,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/interfaces/game.interface.ts",{"_index":6,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":441,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:19",{"_index":445,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":455,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/hero/dto/createhero.request.dto.ts",{"_index":293,"title":{},"body":{"classes/CreateHeroRequestDto.html":{},"coverage.html":{}}}],["src/hero/dto/createhero.request.dto.ts:5",{"_index":294,"title":{},"body":{"classes/CreateHeroRequestDto.html":{}}}],["src/hero/dto/createhero.response.dto.ts",{"_index":296,"title":{},"body":{"classes/CreateHeroResponseDto.html":{},"coverage.html":{}}}],["src/hero/dto/createhero.response.dto.ts:10",{"_index":300,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["src/hero/dto/createhero.response.dto.ts:7",{"_index":299,"title":{},"body":{"classes/CreateHeroResponseDto.html":{}}}],["src/hero/hero.controller.ts",{"_index":458,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"coverage.html":{}}}],["src/hero/hero.controller.ts:25",{"_index":509,"title":{},"body":{"classes/HeroError.html":{}}}],["src/hero/hero.controller.ts:41",{"_index":508,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.controller.ts:46",{"_index":507,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.controller.ts:53",{"_index":505,"title":{},"body":{"controllers/HeroController.html":{}}}],["src/hero/hero.module.ts",{"_index":510,"title":{},"body":{"modules/HeroModule.html":{}}}],["src/hero/interfaces/hero.interface.ts",{"_index":502,"title":{},"body":{"interfaces/Hero-2.html":{},"coverage.html":{}}}],["src/heroscv/herosvc.controller.ts",{"_index":490,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{},"coverage.html":{}}}],["src/heroscv/herosvc.controller.ts:21",{"_index":529,"title":{},"body":{"controllers/HeroesService.html":{}}}],["src/heroscv/herosvc.module.ts",{"_index":526,"title":{},"body":{"modules/HeroSVCModule.html":{}}}],["src/main.ts",{"_index":760,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middlewares/exception.filter.ts",{"_index":129,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/middlewares/exception.filter.ts:13",{"_index":137,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/middlewares/logger.interceptor.ts",{"_index":532,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/middlewares/logger.interceptor.ts:15",{"_index":537,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/middlewares/validation.pipe.ts",{"_index":724,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/middlewares/validation.pipe.ts:18",{"_index":728,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/middlewares/validation.pipe.ts:6",{"_index":732,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/operationlog/operationlog.module.ts",{"_index":566,"title":{},"body":{"modules/OperationLogModule.html":{}}}],["src/redis/constants.ts",{"_index":762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/redis/decorators.ts",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/redis/interface.ts",{"_index":629,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["src/redis/redis.module.ts",{"_index":608,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.module.ts:21",{"_index":618,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/redis.module.ts:9",{"_index":613,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/redis/utils.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/svc.module.ts",{"_index":712,"title":{},"body":{"modules/SVCAppModule.html":{}}}],["src/thirdparty/eventbussdk.provider.ts",{"_index":766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/eventbussdk.service.ts",{"_index":303,"title":{},"body":{"classes/EventBusSDKService.html":{},"coverage.html":{}}}],["src/thirdparty/eventbussdk.service.ts:10",{"_index":309,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/eventbussdk.service.ts:4",{"_index":306,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/points.service.ts",{"_index":568,"title":{},"body":{"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/points.service.ts:10",{"_index":571,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/points.service.ts:16",{"_index":580,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/s3.service.ts",{"_index":638,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/thirdparty/s3.service.ts:10",{"_index":667,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:11",{"_index":646,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:25",{"_index":659,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:32",{"_index":665,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:43",{"_index":648,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:55",{"_index":663,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:69",{"_index":654,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:80",{"_index":651,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:89",{"_index":656,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/thirdparty.module.ts",{"_index":718,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["staff",{"_index":26,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["start",{"_index":829,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":832,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":834,"title":{},"body":{"index.html":{}}}],["started",{"_index":821,"title":{"index.html":{}},"body":{}}],["statements",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":609,"title":{},"body":{"modules/RedisModule.html":{}}}],["status",{"_index":151,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Game.html":{}}}],["statuscode",{"_index":163,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["store",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["strategies/admin.strategy",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/member.strategy",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":104,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["string",{"_index":38,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"injectables/S3Service.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":112,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["super(message",{"_index":471,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["super.canactivate(context",{"_index":71,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["support",{"_index":842,"title":{},"body":{"modules.html":{}}}],["svcappmodule",{"_index":709,"title":{"modules/SVCAppModule.html":{}},"body":{"modules/SVCAppModule.html":{},"modules.html":{},"overview.html":{}}}],["svg",{"_index":843,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":769,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":540,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["terminusmodule",{"_index":456,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":837,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":840,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":839,"title":{},"body":{"index.html":{}}}],["tests",{"_index":836,"title":{},"body":{"index.html":{}}}],["thirdpartymodule",{"_index":714,"title":{"modules/ThirdPartyModule.html":{}},"body":{"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["this.authservice.adminlogin",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.client.getservice('heroesservice",{"_index":482,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.configservice.get('event_bus_max_timeout",{"_index":320,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('event_bus_retry_time",{"_index":318,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('s3_bucket",{"_index":685,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_bucket')}/${key",{"_index":697,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_key",{"_index":675,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_secret",{"_index":677,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_region",{"_index":679,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('sso_google_cilentid",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('sso_google_secret",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.constructor.name",{"_index":473,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.db.pingcheck('database",{"_index":454,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(key",{"_index":699,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.errorcode",{"_index":475,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.eventbussdkservice.publish(topic",{"_index":603,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.gamerepository.create",{"_index":428,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.findone(id",{"_index":431,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.save(newgame",{"_index":429,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.softdelete(id",{"_index":432,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.update(id",{"_index":430,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameservice.creategame(name",{"_index":372,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.deletegame(id",{"_index":378,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgame(id",{"_index":370,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgamewithcache(id",{"_index":389,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.updategame(id",{"_index":375,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.getobjecthead(key",{"_index":693,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(key",{"_index":688,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(newkey",{"_index":695,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.health.check",{"_index":453,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.heroesservice",{"_index":481,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.heroesservice.findone",{"_index":486,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.items.find",{"_index":500,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["this.jwtservice.decode(tk.tokens.id_token",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(newpayload",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":591,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.logger.error('eventbus",{"_index":607,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.message",{"_index":474,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.name",{"_index":472,"title":{},"body":{"interfaces/Hero.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{}}}],["this.redisclient.get(cachekey",{"_index":436,"title":{},"body":{"injectables/GameService.html":{}}}],["this.redisclient.set(cachekey",{"_index":438,"title":{},"body":{"injectables/GameService.html":{}}}],["this.s3",{"_index":680,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.copyobject(params).promise",{"_index":698,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.deleteobject(params).promise",{"_index":694,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.getobject(params).promise",{"_index":700,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.headobject(params).promise",{"_index":708,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.upload(params).promise",{"_index":690,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3setting",{"_index":682,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.sdk.publish",{"_index":314,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.tovalidate(metatype",{"_index":736,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":72,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameController.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":166,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["tk",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["topic",{"_index":315,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["tovalidate",{"_index":725,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":727,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":726,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":730,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":735,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transport",{"_index":512,"title":{},"body":{"modules/HeroModule.html":{}}}],["transport.grpc",{"_index":517,"title":{},"body":{"modules/HeroModule.html":{}}}],["true",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["try",{"_index":593,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["ttl",{"_index":405,"title":{},"body":{"modules/GameModule.html":{}}}],["type",{"_index":54,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"interfaces/Hero.html":{},"interfaces/Hero-1.html":{},"interfaces/Hero-2.html":{},"interfaces/HeroById.html":{},"controllers/HeroController.html":{},"classes/HeroError.html":{},"controllers/HeroesService.html":{},"interfaces/IGame.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":330,"title":{},"body":{"classes/Game.html":{},"injectables/GameService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":448,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{}}}],["typeormmodule.forfeature([game",{"_index":407,"title":{},"body":{"modules/GameModule.html":{}}}],["typeormmodule.forrootasync",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":743,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":745,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["ui",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":63,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["undefined",{"_index":156,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":835,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":134,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["updategame",{"_index":339,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["updategame(id",{"_index":350,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["upload",{"_index":645,"title":{},"body":{"injectables/S3Service.html":{}}}],["upload(body",{"_index":664,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded",{"_index":689,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded.location",{"_index":691,"title":{},"body":{"injectables/S3Service.html":{}}}],["url",{"_index":523,"title":{},"body":{"modules/HeroModule.html":{}}}],["useclass",{"_index":631,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["useexisting",{"_index":632,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["usefactory",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["usefactory(options",{"_index":627,"title":{},"body":{"modules/RedisModule.html":{}}}],["usefilters",{"_index":491,"title":{},"body":{"interfaces/Hero-1.html":{},"interfaces/HeroById.html":{},"controllers/HeroesService.html":{}}}],["useguards",{"_index":356,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useguards(adminauthguard",{"_index":366,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useinterceptors",{"_index":385,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":388,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor)@apiokresponse({type",{"_index":381,"title":{},"body":{"controllers/GameController.html":{}}}],["user",{"_index":59,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["user_agent_limit_mode",{"_index":21,"title":{"interfaces/USER_AGENT_LIMIT_MODE.html":{}},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{},"coverage.html":{}}}],["userid",{"_index":124,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["username",{"_index":126,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"injectables/MemberStrategy.html":{}}}],["usevalue",{"_index":624,"title":{},"body":{"modules/RedisModule.html":{}}}],["using",{"_index":561,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["utils",{"_index":621,"title":{},"body":{"modules/RedisModule.html":{}}}],["uuid",{"_index":671,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":672,"title":{},"body":{"injectables/S3Service.html":{}}}],["validate",{"_index":95,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":740,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":100,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["validation",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["validation_error",{"_index":161,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationerror",{"_index":142,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationpipe",{"_index":723,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":89,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/CreateHeroRequestDto.html":{},"classes/CreateHeroResponseDto.html":{},"classes/GameDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":660,"title":{},"body":{"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":852,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyerr",{"_index":597,"title":{},"body":{"injectables/PointsService.html":{}}}],["void",{"_index":139,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/HeroController.html":{}}}],["watch",{"_index":830,"title":{},"body":{"index.html":{}}}],["web_only",{"_index":23,"title":{},"body":{"interfaces/ANSWER_DISPLAY_MODE.html":{},"interfaces/AUTH_MODE.html":{},"interfaces/GAME_STATUS.html":{},"interfaces/GAME_TYPE.html":{},"interfaces/IGame.html":{},"interfaces/QUESTION_ORDER_MODE.html":{},"interfaces/USER_AGENT_LIMIT_MODE.html":{}}}],["yaml_config_filename",{"_index":756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/SVCAppModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ANSWER_DISPLAY_MODE.html":{"url":"interfaces/ANSWER_DISPLAY_MODE.html","title":"interface - ANSWER_DISPLAY_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ANSWER_DISPLAY_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        IN_QUESTION\n                                \n                                \n                                        NONE\n                                \n                                \n                                        POST_GAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        IN_QUESTION\n                                    \n                                \n                                \n                                    \n                                        IN_QUESTION:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        POST_GAME\n                                    \n                                \n                                \n                                    \n                                        POST_GAME:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AUTH_MODE.html":{"url":"interfaces/AUTH_MODE.html","title":"interface - AUTH_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AUTH_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        MEMBER_BIND_PHONE\n                                \n                                \n                                        MEMBER_WITHOUT_BIND_PHONE\n                                \n                                \n                                        PUBLIC\n                                \n                                \n                                        STAFF\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MEMBER_BIND_PHONE\n                                    \n                                \n                                \n                                    \n                                        MEMBER_BIND_PHONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        MEMBER_WITHOUT_BIND_PHONE\n                                    \n                                \n                                \n                                    \n                                        MEMBER_WITHOUT_BIND_PHONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUBLIC\n                                    \n                                \n                                \n                                    \n                                        PUBLIC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        STAFF\n                                    \n                                \n                                \n                                    \n                                        STAFF:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard.html":{"url":"injectables/AdminAuthGuard.html","title":"injectable - AdminAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/admin.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('admin') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard-1.html":{"url":"injectables/AdminAuthGuard-1.html","title":"injectable - AdminAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/member.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('member') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminLoginRequestDto.html":{"url":"classes/AdminLoginRequestDto.html","title":"class - AdminLoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminLoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/adminLogin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authCode\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AdminLoginRequestDto {\n  @IsString()\n  @ApiProperty()\n  authCode: string;\n\n  @IsString()\n  @ApiProperty()\n  redirectUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStrategy.html":{"url":"injectables/AdminStrategy.html","title":"injectable - AdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/admin.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/admin.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/admin.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AdminStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SSO_SECRET'),\n      algorithms: ['HS256'],\n      // issuer: 'hk01-project',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = exception['message'];\n    let code = 'UNDEFINED';\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n    }\n    if (exception instanceof ValidationError) {\n      status = HttpStatus.BAD_REQUEST;\n      message = exception.constraints;\n      code = 'VALIDATION_ERROR';\n    }\n\n    response.json({\n      statusCode: status,\n      message: exception['details'] || message,\n      code: exception['code'] || code,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport configuration from './config/configuration'\nimport { HealthModule } from './health/health.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RedisModule } from './redis/redis.module'\n\n// import { HeroModule } from './hero/hero.module';\nimport { GameModule } from './game/game.module'\n\n@Module({\n  imports: [\n    HealthModule,\n    // TODO: add validation\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('MYSQL_HOST'),\n        port: configService.get('MYSQL_PORT'),\n        username: configService.get('MYSQL_USER'),\n        password: configService.get('MYSQL_PASSWORD'),\n        database: configService.get('MYSQL_DATABASE'),\n        autoLoadEntities: true,\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        host: configService.get('REDIS_HOST'),\n        port: Number(configService.get('REDIS_PORT')),\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    // HeroModule,\n    GameModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(body: AdminLoginRequestDto, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('adminLogin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AdminLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Response } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AuthService } from './auth.service';\nimport { AdminLoginRequestDto } from './dto/adminLogin.dto';\n\n@Controller('')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('adminLogin')\n  async adminLogin(@Body() body: AdminLoginRequestDto, @Response() res: any) {\n    const adminToken = await this.authService.adminLogin(\n      body.authCode,\n      body.redirectUrl,\n    );\n    res.set('Authorization', `Bearer ${adminToken}`);\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            MemberStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AdminStrategy } from './strategies/admin.strategy';\nimport { MemberStrategy } from './strategies/member.strategy';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SSO_SECRET'),\n        signOptions: {\n          expiresIn: '12h',\n          algorithm: 'HS256',\n          // issuer: 'hk01-project',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AdminStrategy, MemberStrategy, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(authCode: string, redirectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google } from 'googleapis';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async adminLogin(authCode: string, redirectUrl: string) {\n    const oAuth2Client = new google.auth.OAuth2(\n      this.configService.get('SSO_GOOGLE_CILENTID'),\n      this.configService.get('SSO_GOOGLE_SECRET'),\n      redirectUrl,\n    );\n    const tk = await oAuth2Client.getToken(authCode);\n    const payload: any = this.jwtService.decode(tk.tokens.id_token);\n    const newPayload = {\n      email: payload.email,\n      name: payload.name,\n      avatar: payload.picture,\n    };\n    return this.jwtService.sign(newPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameReq.html":{"url":"classes/CreateGameReq.html","title":"class - CreateGameReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/createGame.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/createGame.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGameReq {\n  @ApiProperty()\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHeroRequestDto.html":{"url":"classes/CreateHeroRequestDto.html","title":"class - CreateHeroRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHeroRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/dto/createHero.request.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.request.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateHeroRequestDto {\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHeroResponseDto.html":{"url":"classes/CreateHeroResponseDto.html","title":"class - CreateHeroResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHeroResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/dto/createHero.response.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Hero\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.response.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/hero/dto/createHero.response.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator';\n\nimport { Hero } from '../interfaces/hero.interface';\n\nexport class CreateHeroResponseDto implements Hero {\n  @IsInt()\n  id: number;\n\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBusSDKService.html":{"url":"classes/EventBusSDKService.html","title":"class - EventBusSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBusSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/eventBusSDK.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, sdk: any)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/eventBusSDK.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(routingPath: any, envelope: any)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/eventBusSDK.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routingPath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    envelope\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport class EventBusSDKService {\n  constructor(\n    private configService: ConfigService,\n    @Inject('EVENT_BUS_SDK') private sdk: any, // TODO: type definition\n  ) {}\n\n  async publish(routingPath: any, envelope: any): Promise {\n    await this.sdk.publish({\n      topic: routingPath,\n      envelope: envelope,\n      retry: {\n        retries: this.configService.get('EVENT_BUS_RETRY_TIME'),\n        maxTimeout: this.configService.get('EVENT_BUS_MAX_TIMEOUT'),\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GAME_STATUS.html":{"url":"interfaces/GAME_STATUS.html","title":"interface - GAME_STATUS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GAME_STATUS\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        DELETED\n                                \n                                \n                                        DRAFT\n                                \n                                \n                                        PUBLISHED\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DELETED\n                                    \n                                \n                                \n                                    \n                                        DELETED:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DRAFT\n                                    \n                                \n                                \n                                    \n                                        DRAFT:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PUBLISHED\n                                    \n                                \n                                \n                                    \n                                        PUBLISHED:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GAME_TYPE.html":{"url":"interfaces/GAME_TYPE.html","title":"interface - GAME_TYPE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GAME_TYPE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        MULTIPLE_CHOICE\n                                \n                                \n                                        NONE\n                                \n                                \n                                        PSY_TEST\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        MULTIPLE_CHOICE\n                                    \n                                \n                                \n                                    \n                                        MULTIPLE_CHOICE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PSY_TEST\n                                    \n                                \n                                \n                                    \n                                        PSY_TEST:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: 'DRAFT'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm'\n\nimport { GAME_STATUS } from '../interfaces'\n\n@Entity()\nexport class Game {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  name: string\n\n  @Column({ default: 'DRAFT' })\n  status: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameAdminController.html":{"url":"controllers/GameAdminController.html","title":"controller - GameAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/gameAdmin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiTags, ApiOkResponse, ApiBearerAuth } from '@nestjs/swagger'\n\nimport { AdminAuthGuard } from '../auth/guards/admin.guard'\n\nimport { GameService } from './game.service'\nimport { CreateGameReq, GameDto } from './dtos'\nimport { Game } from './entities'\n\n@Controller('admin/game')\n@ApiTags('game')\n// @UseGuards(AdminAuthGuard)\n@ApiBearerAuth('admin')\nexport class GameAdminController {\n  constructor(private gameService: GameService) {}\n\n  @Get('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async getGame(@Param('id') id: number): Promise {\n    const result = await this.gameService.getGame(id)\n    return result\n  }\n\n  @Post('/')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async createGame(@Body() body: CreateGameReq): Promise {\n    const { name } = body\n    const result = await this.gameService.createGame(name)\n    return result\n  }\n\n  @Put('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async updateGame(\n    @Param('id') id: number,\n    @Body() body: CreateGameReq,\n  ): Promise {\n    await this.gameService.updateGame(id, body as Game)\n    return\n  }\n\n  @Delete('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async deleteGame(@Param('id') id: number): Promise {\n    await this.gameService.deleteGame(id)\n    return\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CacheInterceptor)@ApiOkResponse({type: GameDto})@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n  ParseIntPipe,\n} from '@nestjs/common'\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger'\n\nimport { GameService } from './game.service'\nimport { GameDto } from './dtos'\n\n@Controller('game')\n@ApiTags('game')\nexport class GameController {\n  constructor(private gameService: GameService) {}\n\n  @UseInterceptors(CacheInterceptor)\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  @Get('/:id')\n  async getGame(@Param('id', ParseIntPipe) id: number): Promise {\n    const result = await this.gameService.getGameWithCache(id)\n    if (!result) {\n      throw new HttpException('Game Not Found', HttpStatus.NOT_FOUND)\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDto.html":{"url":"classes/GameDto.html","title":"class - GameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/game.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class GameDto {\n  @IsInt()\n  @ApiProperty()\n  id: number\n\n  @IsString()\n  @ApiProperty()\n  name: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameAdminController\n                        \n                        \n                            GameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { GameService } from './game.service'\nimport { GameAdminController } from './gameAdmin.controller'\nimport { GameController } from './game.controller'\n\nimport { Game } from './entities/game.entity'\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        ttl: configService.get('HTTP_CACHE_TTL'),\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forFeature([Game]),\n  ],\n  controllers: [GameAdminController, GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getGameWithCache\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRepository: Repository, redisClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGameWithCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameWithCache(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\nimport { Redis } from 'ioredis'\n\nimport { IGame } from './interfaces'\nimport { Game } from './entities/game.entity'\nimport { InjectRedis } from '../redis'\n\n@Injectable()\nexport class GameService {\n  constructor(\n    @InjectRepository(Game)\n    private gameRepository: Repository,\n    @InjectRedis() private redisClient: Redis,\n  ) {}\n\n  async createGame(name: string): Promise {\n    const newGame = this.gameRepository.create({ name })\n    const result = await this.gameRepository.save(newGame)\n    return result\n  }\n\n  async updateGame(id: number, game: Game): Promise {\n    await this.gameRepository.update(id, game)\n    return\n  }\n\n  async getGame(id: number): Promise {\n    return this.gameRepository.findOne(id)\n  }\n\n  async deleteGame(id: number): Promise {\n    await this.gameRepository.softDelete(id)\n    return\n  }\n\n  async getGameWithCache(id: number): Promise {\n    const cacheKey = `game_data:${id}`\n    const cache = await this.redisClient.get(cacheKey)\n    if (cache) {\n      return JSON.parse(cache)\n    }\n    let result\n    if (!cache) {\n      result = await this.gameRepository.findOne(id)\n      await this.redisClient.set(cacheKey, JSON.stringify(result))\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus'\n\n@Controller('health')\n@ApiTags('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero.html":{"url":"interfaces/Hero.html","title":"interface - Hero","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero-1.html":{"url":"interfaces/Hero-1.html","title":"interface - Hero-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Hero-2.html":{"url":"interfaces/Hero-2.html","title":"interface - Hero-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Hero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/interfaces/hero.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Hero {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeroById.html":{"url":"interfaces/HeroById.html","title":"interface - HeroById","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeroById\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HeroController.html":{"url":"controllers/HeroController.html","title":"controller - HeroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HeroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                hero\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createHeroInput: CreateHeroRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/hero/hero.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createHeroInput\n                                    \n                                                CreateHeroRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/hero/hero.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/hero/hero.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeroError.html":{"url":"classes/HeroError.html","title":"class - HeroError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeroError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/hero/hero.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode, message)\n                    \n                \n                        \n                            \n                                Defined in src/hero/hero.controller.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/hero/hero.controller.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  OnModuleInit,\n  Inject,\n  Controller,\n  Get,\n  Param,\n  Body,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ClientGrpc } from '@nestjs/microservices';\nimport { Observable } from 'rxjs';\n\nimport { CreateHeroRequestDto, CreateHeroResponseDto } from './dto';\n\ninterface HeroesService {\n  findOne(data: { id: number }): Observable;\n}\ninterface Hero {\n  id: number;\n  name: string;\n}\n\nexport class HeroError extends Error {\n  errorCode: number;\n  constructor(errorCode, message) {\n    super(message);\n    this.name = this.constructor.name;\n    this.message = message;\n    this.errorCode = errorCode;\n  }\n}\n\n@Controller('hero')\n@ApiTags('hero')\nexport class HeroController implements OnModuleInit {\n  private heroesService: HeroesService;\n\n  constructor(@Inject('HERO_PACKAGE') private client: ClientGrpc) {}\n\n  onModuleInit() {\n    this.heroesService = this.client.getService('HeroesService');\n  }\n\n  @Get(':id')\n  async getById(@Param('id') id: string): Promise> {\n    // throw new Error('test');\n    const result = await this.heroesService.findOne({ id: +id });\n    return result;\n  }\n\n  @Post()\n  async create(\n    @Body() createHeroInput: CreateHeroRequestDto,\n  ): Promise {\n    const hero = { id: 1, name: createHeroInput.name };\n    return hero;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeroModule.html":{"url":"modules/HeroModule.html","title":"module - HeroModule","body":"\n                   \n\n\n\n\n    Modules\n    HeroModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/hero/hero.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HeroController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { join } from 'path';\nimport { HeroController } from './hero.controller';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'HERO_PACKAGE',\n        transport: Transport.GRPC,\n        options: {\n          package: 'hero',\n          protoPath: join(__dirname, '../../proto/hero.proto'),\n          url: 'localhost:50051',\n        },\n      },\n    ]),\n  ],\n  controllers: [HeroController],\n})\nexport class HeroModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeroSVCModule.html":{"url":"modules/HeroSVCModule.html","title":"module - HeroSVCModule","body":"\n                   \n\n\n\n\n    Modules\n    HeroSVCModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/heroscv/herosvc.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HeroesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HeroesService } from './herosvc.controller';\n\n@Module({\n  controllers: [HeroesService],\n  providers: [],\n})\nexport class HeroSVCModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HeroesService.html":{"url":"controllers/HeroesService.html","title":"controller - HeroesService","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HeroesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/heroscv/herosvc.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(data: HeroById)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GrpcMethod()\n                \n            \n\n            \n                \n                    Defined in src/heroscv/herosvc.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                HeroById\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Hero\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseFilters } from '@nestjs/common';\nimport { GrpcMethod, RpcException } from '@nestjs/microservices';\n\nexport interface HeroById {\n  id: number;\n}\n\nexport interface Hero {\n  id: number;\n  name: string;\n}\n\n@Controller()\nexport class HeroesService {\n  private readonly items: Hero[] = [\n    { id: 1, name: 'John' },\n    { id: 2, name: 'Doe' },\n  ];\n\n  @GrpcMethod()\n  findOne(data: HeroById): Hero {\n    // throw new RpcException({\n    //   message: 'Hero error',\n    //   code: 10001,\n    // });\n    return this.items.find(({ id }) => id === data.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGame.html":{"url":"interfaces/IGame.html","title":"interface - IGame","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IGame\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/logger.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/logger.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst logger = new Logger('RequestLog');\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n\n    logger.log(`Request Comming [${request.path}]`);\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          logger.log(\n            `Request Response [${request.path} (${Date.now() - now}ms)]`,\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberStrategy.html":{"url":"injectables/MemberStrategy.html","title":"injectable - MemberStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/member.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/member.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/member.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class MemberStrategy extends PassportStrategy(Strategy, 'member') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: readFileSync(\n        join(\n          __dirname,\n          '../../..',\n          configService.get('HK01_SSO_PUBLIC_KEY'),\n        ), // TODO: using absolute path instead\n      ),\n      algorithms: ['RS256'],\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OperationLogModule.html":{"url":"modules/OperationLogModule.html","title":"module - OperationLogModule","body":"\n                   \n\n\n\n\n    Modules\n    OperationLogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/operationLog/operationLog.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class OperationLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsService.html":{"url":"injectables/PointsService.html","title":"injectable - PointsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/points.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publishGameCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventBusSDKService: EventBusSDKService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventBusSDKService\n                                                  \n                                                        \n                                                                        EventBusSDKService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publishGameCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publishGameCompleted(gameId: number, accountId: number, scoreInGame: number, isFirstTimeGamer: boolean, completedTs: number, lotteryRewardId: number, attempt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/points.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreInGame\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFirstTimeGamer\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    completedTs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lotteryRewardId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attempt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { hk01 } from '@hk01-digital/shared-event-proto';\nimport EventbusSDK from '@hk01-digital/eventbus-js-sdk';\nimport { EventBusSDKService } from './eventBusSDK.service';\n\nconst { GameCompleted } = hk01.protobuf.game.mcgame;\n\n@Injectable()\nexport class PointsService {\n  logger: Logger;\n\n  constructor(private eventBusSDKService: EventBusSDKService) {\n    this.logger = new Logger(PointsService.name);\n  }\n\n  async publishGameCompleted(\n    gameId: number,\n    accountId: number,\n    scoreInGame: number,\n    isFirstTimeGamer: boolean,\n    completedTs: number,\n    lotteryRewardId: number,\n    attempt: number,\n  ): Promise {\n    try {\n      const pojo = {\n        gameId: gameId.toString(),\n        accountId: accountId,\n        scoreInGame: scoreInGame,\n        isFirstTimeGamer: isFirstTimeGamer === true ? 1 : 0,\n        attempt: attempt,\n        completedTs: completedTs,\n        lotteryRewardId: lotteryRewardId,\n      };\n\n      const verifyErr = GameCompleted.verify(pojo);\n      if (verifyErr) {\n        //TODO: integrate error\n        throw new Error('protobuf error');\n      }\n\n      const message = GameCompleted.create(pojo);\n      const { topic, envelope } = EventbusSDK.createEnvelopeWithBody(message);\n      return this.eventBusSDKService.publish(topic, envelope);\n    } catch (error) {\n      //TODO: insert to eventbus retry queue\n      this.logger.error('eventbus publish error');\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QUESTION_ORDER_MODE.html":{"url":"interfaces/QUESTION_ORDER_MODE.html","title":"interface - QUESTION_ORDER_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QUESTION_ORDER_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ASC\n                                \n                                \n                                        DESC\n                                \n                                \n                                        RANDOM\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ASC\n                                    \n                                \n                                \n                                    \n                                        ASC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DESC\n                                    \n                                \n                                \n                                    \n                                        DESC:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        RANDOM\n                                    \n                                \n                                \n                                    \n                                        RANDOM:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/redis/redis.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RedisOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/redis/redis.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RedisOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: RedisModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/redis/redis.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RedisModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Provider, DynamicModule } from '@nestjs/common';\nimport IORedis, { RedisOptions } from 'ioredis';\n\nimport { getRedisToken } from './utils';\nimport { RedisModuleAsyncOptions } from './interface';\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useValue: new IORedis(options),\n    };\n    return {\n      global: true,\n      module: RedisModule,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n  static forRootAsync(options: RedisModuleAsyncOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useFactory(options: RedisOptions) {\n        return new IORedis(options);\n      },\n    };\n\n    return {\n      global: true,\n      module: RedisModule,\n      imports: options.imports,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisModuleAsyncOptions.html":{"url":"interfaces/RedisModuleAsyncOptions.html","title":"interface - RedisModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedisModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/redis/interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\nimport { RedisOptions } from 'ioredis';\n\nexport interface RedisModuleAsyncOptions\n  extends Pick {\n  inject?: any[];\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (...args: any[]) => Promise | RedisOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/s3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                s3\n                            \n                            \n                                s3Setting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                genKeyByFilename\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getObjectHead\n                            \n                            \n                                    Private\n                                getS3Param\n                            \n                            \n                                    Async\n                                move\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKeyByFilename\n                        \n                        \n                    \n                \n            \n            \n                \ngenKeyByFilename(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjectHead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjectHead(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getS3Param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Param(key: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            move\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    move(key: string, newKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AWS.S3.Types\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3Setting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport * as AWS from 'aws-sdk'\nimport * as R from 'ramda'\nimport path from 'path'\nimport uuid from 'uuid/v4'\n\n@Injectable()\nexport class S3Service {\n  s3: AWS.S3.Types\n  s3Setting: Record\n\n  constructor(private configService: ConfigService) {\n    AWS.config.update({\n      accessKeyId: this.configService.get('S3_CLIENT_KEY'),\n      secretAccessKey: this.configService.get('S3_CLIENT_SECRET'),\n      region: this.configService.get('S3_REGION'),\n    })\n    this.s3 = new AWS.S3()\n    this.s3Setting = Object.freeze({\n      Bucket: this.configService.get('S3_BUCKET'),\n    })\n  }\n\n  private getS3Param(key: string, options: Record = {}): any {\n    return R.merge(R.clone(this.s3Setting), {\n      Key: key,\n      ...options,\n    })\n  }\n\n  async upload(body: string, key: string): Promise {\n    const params = this.getS3Param(key, { Body: body })\n    try {\n      const uploaded = await this.s3.upload(params).promise()\n      return uploaded.Location\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async delete(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      await this.s3.deleteObject(params).promise()\n      return true\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async move(key: string, newKey: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(newKey, {\n      CopySource: `${this.configService.get('S3_BUCKET')}/${key}`,\n    })\n    try {\n      await this.s3.copyObject(params).promise()\n      return await this.delete(key)\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async get(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.getObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  genKeyByFilename(filename: string): string {\n    const ext = path.extname(filename)\n    let key = uuid() + ext\n    const folder1 = key.substr(0, 1)\n    const folder2 = key.substr(1, 1)\n    key = `${folder1}/${folder2}/${key}`\n    return key\n  }\n\n  async getObjectHead(key: string): Promise {\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.headObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SVCAppModule.html":{"url":"modules/SVCAppModule.html","title":"module - SVCAppModule","body":"\n                   \n\n\n\n\n    Modules\n    SVCAppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SVCAppModule\n\n\n\ncluster_SVCAppModule_imports\n\n\n\n\nHeroSVCModule\n\nHeroSVCModule\n\n\n\nSVCAppModule\n\nSVCAppModule\n\nSVCAppModule -->\n\nHeroSVCModule->SVCAppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/svc.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeroSVCModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { HeroSVCModule } from './heroscv/herosvc.module';\n\n@Module({\n  imports: [HeroSVCModule],\n})\nexport class SVCAppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdPartyModule.html":{"url":"modules/ThirdPartyModule.html","title":"module - ThirdPartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdPartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/thirdParty/thirdParty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { PointsService } from './points.service'\nimport { EventBusSDKService } from './eventBusSDK.service'\nimport { eventBusSDKProviders } from './eventBusSDK.provider'\nimport { S3Service } from './s3.service'\n\n@Module({\n  imports: [ConfigModule],\n  providers: [\n    ...eventBusSDKProviders,\n    PointsService,\n    EventBusSDKService,\n    S3Service,\n  ],\n  exports: [PointsService, S3Service],\n})\nexport class ThirdPartyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/USER_AGENT_LIMIT_MODE.html":{"url":"interfaces/USER_AGENT_LIMIT_MODE.html","title":"interface - USER_AGENT_LIMIT_MODE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  USER_AGENT_LIMIT_MODE\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/interfaces/game.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        HK01_WEBVIEW_ONLY\n                                \n                                \n                                        NONE\n                                \n                                \n                                        WEB_ONLY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        HK01_WEBVIEW_ONLY\n                                    \n                                \n                                \n                                    \n                                        HK01_WEBVIEW_ONLY:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        NONE\n                                    \n                                \n                                \n                                    \n                                        NONE:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WEB_ONLY\n                                    \n                                \n                                \n                                    \n                                        WEB_ONLY:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GAME_TYPE {\n  NONE: 'NONE'\n  MULTIPLE_CHOICE: 'MULTIPLE_CHOICE'\n  PSY_TEST: 'PSY_TEST'\n}\nexport interface GAME_STATUS {\n  DRAFT: 'DRAFT'\n  PUBLISHED: 'PUBLISHED'\n  DELETED: 'DELETED'\n}\n\nexport interface USER_AGENT_LIMIT_MODE {\n  NONE: 'NONE'\n  HK01_WEBVIEW_ONLY: 'HK01_WEBVIEW_ONLY'\n  WEB_ONLY: 'WEB_ONLY'\n}\nexport interface AUTH_MODE {\n  PUBLIC: 'PUBLIC'\n  STAFF: 'STAFF'\n  MEMBER_WITHOUT_BIND_PHONE: 'MEMBER_WITHOUT_BIND_PHONE'\n  MEMBER_BIND_PHONE: 'MEMBER_BIND_PHONE'\n}\n\nexport interface ANSWER_DISPLAY_MODE {\n  NONE: 'NONE'\n  IN_QUESTION: 'IN_QUESTION'\n  POST_GAME: 'POST_GAME'\n}\nexport interface QUESTION_ORDER_MODE {\n  ASC: 'ASC'\n  DESC: 'DESC'\n  RANDOM: 'RANDOM'\n}\n\nexport interface IGame {\n  readonly id: number\n  readonly name: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middlewares/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/validation.pipe.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/middlewares/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw errors[0];\n    }\n    return value;\n  }\n\n  private toValidate(metatype: unknown): boolean {\n    const types: unknown[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/adminLogin.dto.ts\n            \n            class\n            AdminLoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/admin.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/member.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/admin.strategy.ts\n            \n            injectable\n            AdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/member.strategy.ts\n            \n            injectable\n            MemberStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dtos/createGame.dto.ts\n            \n            class\n            CreateGameReq\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/dtos/game.dto.ts\n            \n            class\n            GameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/game/gameAdmin.controller.ts\n            \n            controller\n            GameAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            ANSWER_DISPLAY_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            AUTH_MODE\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            GAME_STATUS\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            GAME_TYPE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            IGame\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            QUESTION_ORDER_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/interfaces/game.interface.ts\n            \n            interface\n            USER_AGENT_LIMIT_MODE\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/dto/createHero.request.dto.ts\n            \n            class\n            CreateHeroRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/dto/createHero.response.dto.ts\n            \n            class\n            CreateHeroResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            controller\n            HeroController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            class\n            HeroError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/hero/hero.controller.ts\n            \n            interface\n            HeroesService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/hero/interfaces/hero.interface.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            controller\n            HeroesService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            interface\n            Hero\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/heroscv/herosvc.controller.ts\n            \n            interface\n            HeroById\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrapMicroServices\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/middlewares/logger.interceptor.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middlewares/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/redis/constants.ts\n            \n            variable\n            REDIS_MODULE_CONNECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/decorators.ts\n            \n            variable\n            InjectRedis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/redis/interface.ts\n            \n            interface\n            RedisModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/redis/utils.ts\n            \n            function\n            getRedisToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            eventBusSDKProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.service.ts\n            \n            class\n            EventBusSDKService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            injectable\n            PointsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @commitlint/config-conventional : ^12.1.4\n        \n            @grpc/proto-loader : ^0.6.0\n        \n            @hk01-digital/eventbus-js-sdk : ^3.2.0\n        \n            @hk01-digital/shared-event-proto : ^2.23.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.15\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/terminus : ^7.1.2\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            aws-sdk : ^2.908.0\n        \n            cache-manager : ^3.4.3\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^9.0.2\n        \n            googleapis : ^73.0.0\n        \n            grpc : ^1.24.6\n        \n            helmet : ^4.6.0\n        \n            ioredis : ^4.27.2\n        \n            mysql2 : ^2.2.5\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n        \n            uuid : 3.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            bootstrapMicroServices   (src/.../main.ts)\n                        \n                        \n                            getRedisToken   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            bootstrapMicroServices\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrapMicroServices()\n                \n            \n\n\n\n\n        \n    \n    src/redis/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRedisToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetRedisToken()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMCGame\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeroModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeroSVCModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OperationLogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SVCAppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdPartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_SVCAppModule\n\n\n\ncluster_SVCAppModule_imports\n\n\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nHeroSVCModule\n\nHeroSVCModule\n\n\n\nSVCAppModule\n\nSVCAppModule\n\nSVCAppModule -->\n\nHeroSVCModule->SVCAppModule\n\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../configuration.ts)\n                        \n                        \n                            eventBusSDKProviders   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            InjectRedis   (src/.../decorators.ts)\n                        \n                        \n                            logger   (src/.../logger.interceptor.ts)\n                        \n                        \n                            logger   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            REDIS_MODULE_CONNECTION_TOKEN   (src/.../constants.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../configuration.ts)\n                        \n                        \n                               (src/.../points.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV || 'development'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YAML_CONFIG_FILENAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${env}.config.yml`\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/eventBusSDK.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventBusSDKProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'EVENT_BUS_SDK',\n    useFactory: async (configService: ConfigService): Promise => {\n      const sdk = new EventBusSDK(\n        configService.get('RMQ_URL'),\n        configService.get('EVENT_BUS_EXCHANGE_CREATE_MODE'),\n      );\n\n      logger.log('RMQ connection initializing...');\n      sdk.connect();\n      logger.log('RMQ connection established');\n\n      return sdk;\n    },\n    inject: [ConfigService],\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('EventBusSDK')\n                        \n                    \n\n\n            \n        \n\n    src/redis/decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectRedis\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return Inject(getRedisToken());\n}\n                        \n                    \n\n\n            \n        \n\n    src/middlewares/logger.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('RequestLog')\n                        \n                    \n\n\n            \n        \n\n    src/redis/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REDIS_MODULE_CONNECTION_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IORedisModuleConnectionToken'\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/points.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : hk01.protobuf.game.mcgame\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
