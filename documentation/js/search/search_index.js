var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AdminAuthGuard.html",[0,0.689,1,1.919]],["body/injectables/AdminAuthGuard.html",[0,0.981,1,2.733,2,1.422,3,0.248,4,0.248,5,0.216,6,3.097,7,0.506,8,1.282,9,4.133,10,4.133,11,4.133,12,4.37,13,0.914,14,3.658,15,1.369,16,0.025,17,1.124,18,0.548,19,1.282,20,2.728,21,1.282,22,4.133,23,5.169,24,3.658,25,4.651,26,0.331,27,4.133,28,0.426,29,3.097,30,2.048,31,0.248,32,0.013,33,2.048,34,3.658,35,1.369,36,3.097,37,2.048,38,1.422,39,0.013,40,0.018,41,0.013]],["title/injectables/AdminAuthGuard-1.html",[0,0.576,1,1.605,42,1.921]],["body/injectables/AdminAuthGuard-1.html",[0,0.981,1,2.733,2,1.422,3,0.248,4,0.248,5,0.216,7,0.506,8,1.282,9,4.133,10,4.133,11,4.133,12,4.37,13,0.914,15,1.369,16,0.025,17,1.124,18,0.548,19,1.282,20,2.728,21,1.282,22,4.133,23,5.169,25,4.651,26,0.331,27,4.133,28,0.426,29,3.097,30,2.048,31,0.248,32,0.013,33,2.048,35,1.369,36,3.097,37,2.048,38,1.422,39,0.013,40,0.018,41,0.013,43,3.097,44,3.658,45,3.658,46,3.658]],["title/classes/AdminLoginRequestDto.html",[32,0.012,47,2.298]],["body/classes/AdminLoginRequestDto.html",[3,0.279,4,0.279,5,0.243,7,0.568,13,0.987,16,0.025,18,0.789,26,0.358,31,0.279,32,0.019,39,0.015,40,0.019,41,0.015,47,3.531,48,1.971,49,3.481,50,2.526,51,4.922,52,4.922,53,2.551,54,2.35,55,4.461,56,4.112,57,4.112,58,4.335,59,2.302,60,4.335,61,1.971]],["title/injectables/AdminStrategy.html",[0,0.689,62,2.091]],["body/injectables/AdminStrategy.html",[0,0.935,2,1.325,3,0.231,4,0.231,5,0.201,7,0.471,8,1.222,13,0.871,15,1.305,16,0.025,17,1.071,18,0.697,19,1.222,21,0.895,26,0.386,28,0.397,30,1.908,31,0.231,32,0.012,33,1.908,35,0.955,39,0.012,40,0.017,41,0.012,62,2.838,63,2.885,64,1.485,65,3.47,66,1.634,67,2.284,68,2.559,69,3.408,70,3.939,71,3.408,72,2.541,73,2.885,74,2.885,75,2.541,76,2.541,77,1.325,78,2.885,79,2.885,80,3.408,81,1.762,82,2.885,83,2.885,84,2.885,85,2.885,86,2.541,87,2.885,88,2.885,89,2.885,90,2.885,91,2.885,92,2.284,93,2.885,94,2.885,95,2.885,96,2.541,97,2.885]],["title/classes/AllExceptionFilter.html",[32,0.012,98,2.556]],["body/classes/AllExceptionFilter.html",[3,0.209,4,0.209,5,0.182,7,0.426,8,1.14,13,0.577,15,0.863,16,0.025,17,0.709,18,0.461,19,0.809,21,0.809,26,0.341,28,0.358,31,0.209,32,0.016,38,1.197,39,0.011,40,0.016,41,0.011,48,1.476,59,1.724,98,3.234,99,2.607,100,3.234,101,5.021,102,4.064,103,4.337,104,4.251,105,3.744,106,5.45,107,3.08,108,5.021,109,3.08,110,3.672,111,2.607,112,4.337,113,3.672,114,3.234,115,2.607,116,1.826,117,3.08,118,3.08,119,3.08,120,3.08,121,4.614,122,3.08,123,4.614,124,3.08,125,5.45,126,2.297,127,4.337,128,3.08,129,3.08,130,3.08,131,3.08,132,3.08,133,3.08,134,3.08,135,3.08,136,3.08,137,3.08,138,2.297,139,3.08]],["title/modules/AppModule.html",[140,0.597,141,2.298]],["body/modules/AppModule.html",[3,0.191,4,0.191,5,0.166,16,0.025,18,0.421,26,0.422,28,0.327,31,0.191,32,0.01,39,0.01,40,0.015,41,0.01,64,0.788,68,2.175,77,1.092,96,2.095,105,2.095,140,0.831,141,4.465,142,0.897,143,1.347,144,1.573,145,1.573,146,1.347,147,1.092,148,1.452,149,2.378,150,2.378,151,3.526,152,3.526,153,3.526,154,3.526,155,3.526,156,3.526,157,2.274,158,1.573,159,1.573,160,2.809,161,2.467,162,2.478,163,2.378,164,1.883,165,2.809,166,2.809,167,2.809,168,2.809,169,2.809,170,2.809,171,2.809,172,1.573,173,2.809,174,2.809,175,2.378,176,2.809,177,2.809,178,2.809,179,2.809,180,2.809,181,2.809,182,2.809,183,2.478,184,2.809,185,1.452]],["title/controllers/AuthController.html",[186,1.529,187,2.298]],["body/controllers/AuthController.html",[3,0.24,4,0.24,5,0.209,7,0.49,8,1.255,13,0.664,15,0.993,16,0.025,17,0.816,18,0.53,19,0.931,21,0.931,26,0.393,28,0.412,31,0.24,32,0.013,35,0.993,39,0.013,40,0.017,41,0.013,47,3.877,54,1.58,61,1.698,64,1.515,81,1.831,114,3.562,116,1.288,186,2.131,187,3.202,188,1.698,189,2.999,190,4.044,191,3.542,192,5.404,193,4.777,194,3.542,195,4.03,196,2.999,197,2.375,198,3.026,199,2.999,200,3.542,201,3.542,202,3.542,203,4.777,204,1.698,205,3.542,206,3.542,207,3.542,208,3.542,209,3.542]],["title/modules/AuthModule.html",[140,0.597,151,2.091]],["body/modules/AuthModule.html",[3,0.208,4,0.208,5,0.181,16,0.025,26,0.424,28,0.356,30,1.713,31,0.208,32,0.011,39,0.011,40,0.016,41,0.011,62,3.628,64,0.858,68,2.26,77,1.189,88,2.59,90,2.59,91,2.59,92,2.05,93,2.59,140,0.872,142,0.976,143,1.466,144,1.713,145,1.713,146,1.466,147,1.944,148,1.581,151,3.924,157,2.417,158,1.713,159,1.713,161,2.232,162,2.633,172,1.713,185,1.581,187,3.353,188,2.069,198,3.33,199,2.59,210,2.59,211,2.59,212,3.628,213,3.059,214,4.316,215,3.059,216,2.281,217,3.059,218,3.059,219,3.059,220,3.059,221,3.059,222,3.059,223,3.059,224,3.059,225,3.059]],["title/injectables/AuthService.html",[0,0.689,198,1.919]],["body/injectables/AuthService.html",[0,0.884,2,1.222,3,0.213,4,0.213,5,0.186,7,0.435,8,1.156,13,0.824,15,1.234,16,0.025,17,1.169,18,0.659,19,1.156,21,0.826,26,0.373,28,0.366,31,0.213,32,0.011,35,0.882,38,1.222,39,0.011,40,0.016,41,0.011,51,2.662,52,4.657,53,2.496,64,1.424,66,2.11,68,2.562,72,2.345,77,1.222,116,2,190,3.726,198,2.464,204,1.508,216,2.345,226,2.662,227,3.144,228,6,229,3.144,230,4.401,231,3.144,232,3.144,233,2.662,234,2.464,235,3.144,236,3.144,237,3.144,238,3.144,239,3.144,240,3.144,241,3.144,242,3.144,243,3.144,244,3.144,245,3.144,246,3.144,247,3.144,248,3.144]],["title/modules/CoreModule.html",[140,0.597,152,2.091]],["body/modules/CoreModule.html",[3,0.23,4,0.23,5,0.2,16,0.025,26,0.404,28,0.395,31,0.23,32,0.012,39,0.012,40,0.017,41,0.012,64,0.952,68,2.364,77,1.32,105,2.532,140,0.921,142,1.083,143,1.628,144,1.901,145,1.901,146,1.628,147,1.32,148,1.755,152,4.008,157,2.598,158,1.901,159,1.901,161,2.734,162,2.831,172,1.901,175,2.874,183,2.071,185,1.755,249,2.874,250,2.874,251,3.748,252,3.906,253,3.395,254,3.395,255,4.641,256,3.395,257,3.395,258,3.395,259,3.395,260,3.395,261,3.395,262,3.395,263,3.395]],["title/classes/CreateGameReq.html",[32,0.012,264,2.298]],["body/classes/CreateGameReq.html",[3,0.298,4,0.298,5,0.259,7,0.607,13,0.823,16,0.025,17,1.38,18,0.658,26,0.373,31,0.298,32,0.02,39,0.016,40,0.02,41,0.016,48,2.107,50,2.634,53,2.286,54,1.96,58,4.098,59,2.46,60,4.098,61,2.107,264,3.683,265,3.72,266,4.394,267,4.394]],["title/classes/EventBusSDKService.html",[32,0.012,268,2.091]],["body/classes/EventBusSDKService.html",[3,0.239,4,0.239,5,0.208,7,0.488,8,1.252,13,0.892,15,1.336,16,0.025,17,1.097,18,0.808,19,1.252,21,0.927,26,0.323,28,0.411,31,0.239,32,0.013,39,0.013,40,0.017,41,0.013,48,1.692,64,1.512,66,2.284,67,2.365,68,2.585,77,1.372,185,1.824,204,1.692,234,2.668,268,2.906,269,2.988,270,4.034,271,3.29,272,3.528,273,4.764,274,5.106,275,3.528,276,4.764,277,2.284,278,3.528,279,2.365,280,3.528,281,3.528,282,2.988,283,2.988,284,3.528,285,3.528,286,3.528,287,3.528]],["title/classes/Game.html",[32,0.012,288,1.772]],["body/classes/Game.html",[3,0.194,4,0.194,5,0.169,7,0.569,13,1.149,16,0.025,17,1.11,18,0.919,26,0.327,31,0.194,32,0.01,33,2.306,39,0.01,40,0.015,41,0.01,48,1.373,50,1.974,53,2.42,54,2.736,121,4.083,126,2.135,288,2.129,289,2.424,290,4.018,291,4.822,292,2.942,293,3.487,294,3.487,295,3.487,296,3.487,297,4.465,298,4.822,299,2.863,300,2.129,301,4.822,302,2.863,303,2.863,304,2.863,305,2.863,306,4.118,307,2.863,308,2.863,309,2.424,310,5.273,311,2.863,312,4.731,313,2.863,314,2.424,315,2.863,316,2.863,317,4.118,318,1.919,319,2.863,320,3.487,321,2.424,322,2.863,323,2.135,324,2.863,325,2.863]],["title/controllers/GameAdminController.html",[186,1.529,326,2.298]],["body/controllers/GameAdminController.html",[1,1.248,3,0.151,4,0.151,5,0.132,7,0.308,8,0.898,13,0.873,15,1.307,16,0.025,17,1.158,18,0.854,19,1.225,21,1.225,26,0.36,28,0.259,31,0.151,32,0.008,35,1.307,39,0.018,40,0.012,41,0.008,54,2.08,61,1.069,64,1.726,81,1.152,116,1.512,186,0.994,188,1.069,195,4.358,196,2.894,197,1.494,204,2.235,264,3.703,277,2.733,288,1.767,292,3.237,300,3.022,326,2.291,327,1.887,328,1.662,329,2.229,330,2.894,331,2.894,332,2.549,333,3.521,334,2.229,335,2.229,336,3.566,337,2.229,338,1.887,339,2.229,340,2.229,341,1.662,342,2.229,343,2.229,344,1.887,345,2.229,346,2.229,347,2.229,348,1.887,349,1.887,350,2.229,351,4.258,352,2.229,353,2.229,354,2.15,355,1.662,356,1.887,357,2.229,358,2.229,359,1.887,360,2.229,361,2.229,362,1.887,363,1.887,364,2.229,365,2.229,366,2.229,367,2.229,368,2.229,369,2.229,370,2.229,371,2.229,372,2.229]],["title/controllers/GameController.html",[186,1.529,373,2.298]],["body/controllers/GameController.html",[3,0.229,4,0.229,5,0.2,7,0.467,8,1.216,13,0.633,15,0.948,16,0.025,17,0.779,18,0.693,19,0.889,21,0.889,26,0.385,28,0.394,31,0.229,32,0.012,35,0.948,37,1.894,38,1.315,39,0.02,40,0.017,41,0.012,54,1.509,61,1.621,64,1.48,81,1.748,110,2.863,111,2.863,116,1.23,186,1.509,188,1.621,197,2.267,204,1.621,277,2.219,288,1.748,292,2.824,300,2.728,328,2.522,332,3.452,336,2.824,341,2.522,349,2.863,351,3.919,354,2.728,355,2.522,356,2.863,359,2.863,362,2.863,363,2.863,373,3.103,374,2.863,375,3.382,376,3.382,377,3.382,378,3.382,379,3.382,380,4.629,381,3.382,382,3.382,383,3.382,384,3.382,385,3.382,386,3.382]],["title/classes/GameDto.html",[32,0.012,336,2.091]],["body/classes/GameDto.html",[3,0.278,4,0.278,5,0.242,7,0.566,13,0.984,16,0.025,17,1.336,18,0.787,26,0.356,31,0.278,32,0.019,39,0.015,40,0.019,41,0.015,48,1.962,50,2.519,53,2.185,54,2.343,55,3.465,58,3.917,59,2.292,60,4.326,61,1.962,292,3.539,300,2.716,336,3.205,387,3.465,388,4.093,389,4.093,390,4.093,391,5.253]],["title/modules/GameModule.html",[140,0.597,153,2.091]],["body/modules/GameModule.html",[3,0.23,4,0.23,5,0.2,16,0.025,26,0.427,28,0.395,31,0.23,32,0.012,39,0.012,40,0.017,41,0.012,64,0.952,68,2.364,77,1.32,140,0.921,142,1.083,143,1.628,144,1.901,145,1.901,146,1.628,147,2.055,148,1.755,153,3.748,157,2.598,158,1.901,159,1.901,161,2.399,162,2.831,163,2.874,164,2.276,172,1.901,185,1.755,188,2.225,288,1.755,326,3.544,354,3.176,355,2.532,373,3.544,392,2.874,393,2.874,394,3.395,395,3.395,396,3.395,397,3.395,398,2.874,399,3.395,400,3.395,401,3.395,402,3.395]],["title/injectables/GameService.html",[0,0.689,354,1.772]],["body/injectables/GameService.html",[0,0.674,2,0.845,3,0.148,4,0.148,5,0.128,7,0.301,8,0.881,13,0.984,15,1.473,16,0.025,17,1.302,18,0.787,19,1.381,21,1.307,26,0.357,28,0.253,31,0.148,32,0.008,35,1.473,39,0.019,40,0.012,41,0.008,53,1.704,64,1.775,66,1.608,116,1.674,164,1.458,204,2.519,234,1.878,277,2.841,288,2.924,292,2.808,300,3.165,318,1.458,330,2.84,331,2.84,332,2.501,333,2.84,338,2.84,341,2.501,344,2.84,354,1.734,398,1.841,403,1.841,404,3.354,405,2.175,406,4.603,407,4.095,408,3.897,409,2.175,410,3.354,411,3.354,412,2.175,413,2.175,414,2.175,415,3.354,416,2.175,417,2.175,418,2.175,419,1.458,420,2.501,421,2.175,422,2.175,423,2.175,424,2.175,425,2.175,426,2.175,427,3.354,428,2.175,429,2.175,430,2.175,431,3.467,432,2.175,433,2.175,434,2.175,435,2.175]],["title/controllers/HealthController.html",[186,1.529,436,2.298]],["body/controllers/HealthController.html",[3,0.268,4,0.268,5,0.233,7,0.546,8,1.348,13,0.74,16,0.025,21,1.037,26,0.387,28,0.459,31,0.268,32,0.014,35,1.107,39,0.014,40,0.018,41,0.014,54,1.761,61,1.893,66,1.893,186,1.761,188,1.893,197,2.647,234,2.874,328,2.945,436,3.44,437,3.343,438,5.133,439,6.038,440,3.949,441,3.949,442,5.133,443,5.133,444,5.133,445,2.945,446,3.949,447,3.949,448,3.949,449,3.949,450,3.949]],["title/modules/HealthModule.html",[140,0.597,251,2.091]],["body/modules/HealthModule.html",[3,0.307,4,0.307,5,0.267,16,0.025,26,0.412,28,0.527,31,0.307,32,0.016,39,0.016,40,0.02,41,0.016,140,0.975,142,1.445,161,2.341,188,2.684,251,3.415,436,4.073,445,3.376,451,4.527,452,5.598,453,4.527]],["title/injectables/LoggingInterceptor.html",[0,0.689,454,2.556]],["body/injectables/LoggingInterceptor.html",[0,0.945,2,1.345,3,0.235,4,0.235,5,0.204,7,0.478,8,1.235,12,4.272,13,0.648,15,0.97,16,0.025,17,0.797,18,0.518,19,0.909,20,2.58,21,0.909,26,0.362,28,0.403,31,0.235,32,0.012,35,0.97,38,1.345,39,0.012,40,0.017,41,0.012,100,2.58,113,3.981,114,2.58,116,1.942,454,3.506,455,2.58,456,4.701,457,4.701,458,5.729,459,5.729,460,3.46,461,5.34,462,4.701,463,3.151,464,2.93,465,4.701,466,3.46,467,2.93,468,3.46,469,3.46,470,3.46,471,4.701,472,3.46,473,4.701,474,3.46,475,3.46,476,3.46,477,3.46]],["title/modules/LotteryModule.html",[140,0.597,154,2.091]],["body/modules/LotteryModule.html",[3,0.331,4,0.331,5,0.288,16,0.025,26,0.331,28,0.567,31,0.331,32,0.018,39,0.018,40,0.021,41,0.018,140,1.02,142,1.555,147,1.894,154,3.571,478,4.872]],["title/injectables/MemberStrategy.html",[0,0.689,212,2.091]],["body/injectables/MemberStrategy.html",[0,0.893,2,1.24,3,0.216,4,0.216,5,0.188,7,0.441,8,1.168,13,0.833,15,1.246,16,0.025,17,1.023,18,0.666,19,1.168,21,0.838,26,0.409,28,0.371,30,1.786,31,0.216,32,0.011,33,1.786,35,0.894,39,0.011,40,0.016,41,0.011,64,1.435,65,3.315,66,1.529,67,2.138,68,2.507,70,3.763,72,2.378,73,2.7,74,2.7,75,2.378,76,2.378,77,1.24,78,2.7,79,2.7,81,1.649,82,2.7,83,2.7,84,2.7,85,2.7,86,2.378,87,2.7,89,2.7,94,2.7,95,2.7,96,2.378,97,2.7,138,3.315,212,2.712,279,2.138,479,2.7,480,3.189,481,3.189,482,4.445,483,3.189,484,4.445,485,3.189,486,3.189,487,3.189,488,3.189,489,3.189,490,3.189,491,3.189]],["title/classes/Operation.html",[32,0.012,290,2.298]],["body/classes/Operation.html",[3,0.254,4,0.254,5,0.221,7,0.518,13,1.109,16,0.025,18,0.886,26,0.254,31,0.254,32,0.013,39,0.013,40,0.018,41,0.013,48,1.798,50,2.379,53,2.462,54,2.64,290,3.326,293,4.708,294,4.708,295,4.708,296,4.708,297,5.011,309,4.708,312,5.212,314,4.708,318,2.514,492,3.175,493,3.75,494,3.75,495,3.75,496,3.75,497,3.75]],["title/modules/OperationLogModule.html",[140,0.597,498,2.556]],["body/modules/OperationLogModule.html",[3,0.331,4,0.331,5,0.288,16,0.025,26,0.331,28,0.567,31,0.331,32,0.018,39,0.018,40,0.021,41,0.018,140,1.02,142,1.555,147,1.894,498,4.365,499,4.872]],["title/modules/PlayerModule.html",[140,0.597,155,2.091]],["body/modules/PlayerModule.html",[3,0.331,4,0.331,5,0.288,16,0.025,26,0.331,28,0.567,31,0.331,32,0.018,39,0.018,40,0.021,41,0.018,140,1.02,142,1.555,147,1.894,155,3.571,500,4.872]],["title/injectables/PointsService.html",[0,0.689,501,2.091]],["body/injectables/PointsService.html",[0,0.724,2,0.929,3,0.162,4,0.162,5,0.141,7,0.33,8,0.947,13,0.813,15,1.011,16,0.025,17,0.83,18,0.65,19,0.947,21,0.628,26,0.328,28,0.278,31,0.162,32,0.009,35,1.011,37,1.338,38,1.401,39,0.009,40,0.013,41,0.009,42,1.602,50,1.728,64,1.217,66,1.146,81,1.235,86,1.782,92,2.909,102,1.782,116,1.886,123,2.023,183,1.458,268,3.326,270,2.023,271,1.458,274,3.052,277,1.728,279,2.416,282,2.023,283,2.023,300,3.4,463,3.654,501,2.199,502,1.782,503,4.339,504,2.389,505,3.604,506,2.389,507,5.186,508,5.186,509,5.186,510,3.674,511,5.186,512,5.186,513,5.186,514,2.389,515,4.339,516,2.023,517,2.023,518,2.023,519,2.023,520,2.023,521,2.023,522,2.023,523,2.389,524,2.023,525,2.389,526,2.389,527,2.023,528,2.389,529,2.389,530,1.782,531,3.604,532,2.389,533,2.023,534,4.092,535,2.389,536,2.389,537,2.389,538,2.389,539,2.389,540,2.389,541,2.389,542,2.389]],["title/modules/QuizModule.html",[140,0.597,156,2.091]],["body/modules/QuizModule.html",[3,0.331,4,0.331,5,0.288,16,0.025,26,0.331,28,0.567,31,0.331,32,0.018,39,0.018,40,0.021,41,0.018,140,1.02,142,1.555,147,1.894,156,3.571,543,4.872]],["title/modules/RedisModule.html",[140,0.597,252,2.091]],["body/modules/RedisModule.html",[3,0.206,4,0.206,5,0.179,8,0.798,13,0.805,15,1.204,16,0.025,17,0.989,18,0.643,19,1.129,21,1.129,26,0.368,28,0.354,31,0.206,32,0.011,35,1.397,38,1.67,39,0.011,40,0.015,41,0.011,116,1.562,140,0.944,142,0.97,147,1.67,148,2.221,161,1.571,183,2.621,252,3.305,419,2.879,544,3.038,545,5.417,546,3.038,547,4.296,548,4.839,549,3.038,550,3.637,551,5.715,552,3.038,553,4.296,554,3.631,555,3.038,556,4.983,557,3.716,558,3.038,559,1.853,560,5.933,561,3.637,562,3.038,563,4.296,564,4.296,565,3.038,566,3.038]],["title/interfaces/RedisModuleAsyncOptions.html",[554,2.298,559,2.091]],["body/interfaces/RedisModuleAsyncOptions.html",[3,0.254,4,0.254,5,0.221,7,0.518,16,0.025,18,1.01,19,1.721,26,0.337,31,0.254,33,2.778,39,0.013,40,0.018,41,0.013,50,2.379,172,3.314,185,3.06,277,1.798,321,3.175,419,2.514,548,4.201,554,3.326,559,2.288,567,3.175,568,4.962,569,5.918,570,5.918,571,4.201,572,3.75,573,3.75,574,3.75]],["title/injectables/S3Service.html",[0,0.689,575,2.091]],["body/injectables/S3Service.html",[0,0.499,2,0.581,3,0.101,4,0.101,5,0.088,7,0.207,8,0.653,13,0.988,15,1.382,16,0.025,17,1.135,18,0.79,19,1.295,21,1.237,26,0.301,28,0.174,31,0.101,32,0.005,35,1.32,37,2.306,38,1.727,39,0.005,40,0.009,41,0.005,42,1.665,50,1.191,53,2.688,64,1.631,66,0.717,67,1.003,68,1.848,77,0.581,81,0.773,102,3.071,116,1.86,138,1.853,183,0.912,195,2.376,204,2.257,234,1.784,271,0.912,277,2.528,279,2.76,323,1.115,348,2.104,527,3.486,533,3.486,534,4.926,550,3.142,575,1.516,576,1.266,577,3.187,578,3.187,579,2.484,580,2.484,581,2.484,582,2.484,583,2.484,584,2.484,585,2.484,586,1.496,587,5.639,588,2.484,589,1.496,590,1.496,591,2.484,592,1.496,593,2.484,594,1.496,595,2.484,596,4.118,597,1.496,598,1.003,599,2.484,600,3.187,601,1.496,602,2.484,603,1.496,604,2.484,605,1.496,606,2.104,607,1.496,608,1.496,609,2.104,610,1.496,611,1.496,612,1.496,613,1.496,614,1.496,615,1.496,616,1.496,617,1.496,618,1.496,619,1.496,620,1.496,621,1.496,622,1.496,623,1.496,624,1.496,625,4.118,626,3.711,627,1.496,628,1.496,629,1.496,630,4.118,631,3.187,632,1.496,633,1.496,634,1.496,635,1.496,636,1.496,637,1.496,638,1.496,639,2.484,640,1.496,641,1.496,642,1.496,643,1.496,644,1.496,645,1.496,646,1.496]],["title/modules/ThirdPartyModule.html",[140,0.597,647,2.298]],["body/modules/ThirdPartyModule.html",[3,0.229,4,0.229,5,0.2,16,0.025,26,0.416,28,0.394,31,0.229,32,0.012,39,0.012,40,0.017,41,0.012,77,1.315,140,0.92,142,1.079,143,1.621,144,1.894,145,1.894,146,1.621,147,2.051,148,2.728,157,2.592,158,1.894,159,1.894,161,1.748,162,2.824,268,2.824,501,4.076,522,2.863,575,4.076,647,4.4,648,2.863,649,2.863,650,2.863,651,3.382,652,3.382,653,3.452,654,3.382,655,3.382]],["title/injectables/ValidationPipe.html",[0,0.689,656,2.556]],["body/injectables/ValidationPipe.html",[0,0.876,2,1.205,3,0.21,4,0.21,5,0.183,7,0.429,8,1.145,13,0.816,15,1.222,16,0.025,17,1.004,18,0.653,19,1.145,21,1.145,26,0.342,28,0.361,31,0.21,32,0.018,35,1.413,37,1.736,39,0.011,40,0.016,41,0.011,53,1.29,59,1.736,64,1.413,65,2.312,100,2.312,104,4.629,116,1.833,126,2.312,204,1.487,234,2.822,300,1.603,510,4.267,530,2.312,598,3.664,656,3.25,657,2.626,658,4.358,659,4.358,660,4.358,661,3.101,662,5.039,663,4.358,664,5.467,665,3.101,666,4.358,667,3.101,668,2.626,669,3.101,670,4.358,671,3.101,672,3.101,673,3.101,674,3.101,675,3.101,676,3.101,677,3.101,678,3.101]],["title/coverage.html",[679,3.484]],["body/coverage.html",[0,1.229,1,2.06,5,0.145,6,2.079,16,0.025,18,0.368,32,0.021,38,0.954,39,0.009,40,0.013,41,0.009,43,2.079,47,1.646,49,2.079,62,1.498,63,2.079,98,1.831,99,2.079,146,1.177,186,2.185,187,1.646,189,2.079,198,1.375,212,1.498,226,2.079,264,1.646,265,2.079,268,1.498,269,2.079,288,1.269,289,2.079,290,1.646,326,1.646,327,2.079,336,1.498,354,1.269,373,1.646,374,2.079,387,2.079,403,2.079,420,1.831,436,1.646,437,2.079,454,1.831,455,2.743,463,2.465,479,2.079,492,2.079,501,1.498,502,2.743,530,5.147,554,1.646,557,1.831,559,1.498,567,2.079,571,3.114,575,1.498,576,2.079,653,1.831,656,1.831,657,2.079,679,1.831,680,2.455,681,2.455,682,2.455,683,5.508,684,6.006,685,4.411,686,3.114,687,5.873,688,2.079,689,6.116,690,2.079,691,2.079,692,2.079,693,2.079,694,2.079,695,2.455,696,2.455,697,2.079,698,3.114,699,2.455,700,2.455,701,2.455,702,2.455]],["title/dependencies.html",[143,1.976,703,2.866]],["body/dependencies.html",[16,0.025,28,0.366,30,1.761,32,0.016,39,0.011,40,0.016,41,0.011,59,1.761,61,1.508,75,3.282,76,2.345,77,1.222,92,2.95,115,3.726,143,1.508,164,2.108,216,2.345,233,2.662,271,2.685,318,2.108,408,2.662,419,2.108,431,3.726,445,2.345,464,2.662,516,2.662,517,2.662,518,2.662,520,2.662,521,2.662,606,2.662,609,2.662,668,2.662,704,3.144,705,3.144,706,3.144,707,3.144,708,3.144,709,3.144,710,3.144,711,3.144,712,5.5,713,3.144,714,3.144,715,3.144,716,3.144,717,4.401,718,3.144,719,3.144,720,3.144,721,3.144,722,4.401,723,3.144,724,3.144,725,3.144,726,3.144,727,3.144,728,3.144,729,3.144,730,3.144,731,3.144,732,3.144,733,3.144,734,3.144,735,3.144,736,3.144,737,3.144,738,3.144,739,3.144,740,3.144,741,3.144,742,3.144,743,3.144,744,3.144,745,3.144,746,3.144,747,3.144,748,3.144,749,3.144,750,3.144]],["title/miscellaneous/enumerations.html",[751,1.605,752,3.489]],["body/miscellaneous/enumerations.html",[7,0.673,16,0.024,39,0.018,40,0.021,41,0.018,320,4.956,598,4.206,751,2.728,752,4.125,753,4.872,754,4.872,755,5.854,756,5.854,757,5.854]],["title/miscellaneous/functions.html",[751,1.605,758,3.489]],["body/miscellaneous/functions.html",[7,0.696,16,0.021,39,0.018,40,0.021,41,0.018,146,3.051,557,4.746,694,4.264,697,4.264,751,2.82,758,4.264,759,5.037,760,5.037]],["title/index.html",[7,0.396,761,2.866,762,2.866]],["body/index.html",[16,0.025,39,0.015,40,0.019,41,0.015,679,3.153,763,4.228,764,4.228,765,6.635,766,4.228,767,4.228,768,3.58,769,6.532,770,4.228,771,4.228,772,5.363,773,4.228,774,4.228,775,4.228,776,4.228,777,5.363,778,5.363,779,4.228,780,4.228,781,4.228]],["title/modules.html",[142,1.491]],["body/modules.html",[16,0.019,39,0.015,40,0.019,41,0.015,141,2.795,142,1.331,151,2.543,152,2.543,153,2.543,154,2.543,155,2.543,156,2.543,251,2.543,252,2.543,498,3.109,647,2.795,782,6.365,783,6.365,784,6.365,785,6.858,786,6.508,787,6.508]],["title/overview.html",[788,3.955]],["body/overview.html",[2,1.153,16,0.024,39,0.011,40,0.015,41,0.011,42,1.989,48,1.423,62,3.001,140,0.517,141,4.447,142,0.947,143,1.423,144,1.662,145,1.662,146,1.423,147,1.153,148,1.534,149,2.512,150,2.512,151,3.844,152,3.844,153,3.456,154,3.001,155,3.001,156,3.001,157,2.366,158,1.662,159,1.662,188,1.423,198,2.755,210,2.512,211,2.512,212,3.001,249,2.512,250,2.512,251,3.001,252,3.27,354,2.543,392,2.512,393,2.512,501,3.696,559,1.81,575,3.696,647,4.151,648,2.512,649,2.512,650,2.512,788,2.512,789,2.967,790,2.967,791,2.967,792,2.967]],["title/miscellaneous/variables.html",[751,1.605,793,3.489]],["body/miscellaneous/variables.html",[7,0.45,16,0.025,18,0.676,35,1.265,38,2.012,39,0.012,40,0.016,41,0.012,53,1.356,64,0.914,68,2.153,116,1.185,172,1.825,185,1.685,271,2.753,277,1.562,323,4.728,420,3.365,455,2.43,463,3.744,467,2.759,502,2.43,519,2.759,524,2.759,561,2.759,598,4.25,653,3.365,686,2.759,688,3.82,690,3.82,691,2.759,692,3.82,693,2.759,698,2.759,751,1.825,768,2.759,793,2.759,794,4.512,795,4.512,796,3.259,797,3.259,798,3.259,799,3.259,800,3.259,801,3.259,802,3.259,803,3.259,804,3.259,805,4.512,806,4.512,807,3.259,808,3.259,809,3.259,810,3.259,811,3.259,812,3.259]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":530,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":42,"title":{"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{},"overview.html":{}}}],["1.24.6",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":791,"title":{},"body":{"overview.html":{}}}],["11",{"_index":789,"title":{},"body":{"overview.html":{}}}],["12.1.4",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["12h",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.0.0",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["2.2.5",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["2.23.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["2.908.0",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["3.3.2",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["3.4.3",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":790,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["4.27.2",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["6.6.6",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":792,"title":{},"body":{"overview.html":{}}}],["7.1.2",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["73.0.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":486,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["absolute",{"_index":489,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["abstract",{"_index":497,"title":{},"body":{"classes/Operation.html":{}}}],["accesskeyid",{"_index":612,"title":{},"body":{"injectables/S3Service.html":{}}}],["accountid",{"_index":507,"title":{},"body":{"injectables/PointsService.html":{}}}],["admin",{"_index":80,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["admin/game",{"_index":329,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["adminauthguard",{"_index":1,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["adminlogin",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["adminlogin(@body",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminlogin(authcode",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["adminlogin(body",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["adminloginrequestdto",{"_index":47,"title":{"classes/AdminLoginRequestDto.html":{}},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["adminstrategy",{"_index":62,"title":{"injectables/AdminStrategy.html":{}},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["admintoken",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["algorithm",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["algorithms",{"_index":89,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["allexceptionfilter",{"_index":98,"title":{"classes/AllExceptionFilter.html":{}},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["apibearerauth",{"_index":352,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apibearerauth('admin",{"_index":361,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["apiokresponse",{"_index":351,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apiproperty",{"_index":60,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["apiproperty()@isstring",{"_index":266,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["apitags",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}}}],["apitags('auth",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":359,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["apitags('health",{"_index":447,"title":{},"body":{"controllers/HealthController.html":{}}}],["app",{"_index":767,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":141,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":574,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["argumentmetadata",{"_index":664,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":106,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["array",{"_index":677,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":64,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["attempt",{"_index":513,"title":{},"body":{"injectables/PointsService.html":{}}}],["auth.controller",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/admin.guard",{"_index":353,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["authcode",{"_index":51,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["authcontroller",{"_index":187,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":29,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["authguard('admin",{"_index":34,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["authguard('member",{"_index":46,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["authmodule",{"_index":151,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":198,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoloadentities",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["available",{"_index":787,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["aws",{"_index":606,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["aws.config.update",{"_index":611,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3",{"_index":619,"title":{},"body":{"injectables/S3Service.html":{}}}],["aws.s3.types",{"_index":604,"title":{},"body":{"injectables/S3Service.html":{}}}],["bearer",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"injectables/S3Service.html":{}}}],["body.authcode",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.redirecturl",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":510,"title":{},"body":{"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":785,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":782,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":622,"title":{},"body":{"injectables/S3Service.html":{}}}],["cache",{"_index":431,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":378,"title":{},"body":{"controllers/GameController.html":{}}}],["cachekey",{"_index":429,"title":{},"body":{"injectables/GameService.html":{}}}],["cachemodule",{"_index":395,"title":{},"body":{"modules/GameModule.html":{}}}],["cachemodule.registerasync",{"_index":399,"title":{},"body":{"modules/GameModule.html":{}}}],["callhandler",{"_index":459,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["canactivate(context",{"_index":11,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["catch",{"_index":102,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["catch(exception",{"_index":103,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["check",{"_index":439,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":32,"title":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":48,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":249,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":250,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":392,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_providers",{"_index":393,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule",{"_index":648,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_exports",{"_index":650,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["cluster_thirdpartymodule_providers",{"_index":649,"title":{},"body":{"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["code",{"_index":125,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["column",{"_index":312,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["column()@index('game_name_idx",{"_index":303,"title":{},"body":{"classes/Game.html":{}}}],["column({default",{"_index":305,"title":{},"body":{"classes/Game.html":{}}}],["comming",{"_index":470,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["commitlint/config",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["common",{"_index":319,"title":{},"body":{"classes/Game.html":{}}}],["completedts",{"_index":511,"title":{},"body":{"injectables/PointsService.html":{}}}],["config/configuration",{"_index":256,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{}}}],["configmodule.forroot",{"_index":258,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":68,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["configservice.get('event_bus_exchange_create_mode",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('hk01_sso_public_key",{"_index":487,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["configservice.get('http_cache_ttl",{"_index":401,"title":{},"body":{"modules/GameModule.html":{}}}],["configservice.get('mysql_database",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_host",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_password",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_port",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('mysql_user",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_host",{"_index":262,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.get('rmq_url",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('sso_secret",{"_index":88,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["configuration",{"_index":255,"title":{},"body":{"modules/CoreModule.html":{}}}],["connection",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":116,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":66,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["constructor(configservice",{"_index":67,"title":{},"body":{"injectables/AdminStrategy.html":{},"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["constructor(eventbussdkservice",{"_index":504,"title":{},"body":{"injectables/PointsService.html":{}}}],["constructor(gamerepository",{"_index":405,"title":{},"body":{"injectables/GameService.html":{}}}],["constructor(jwtservice",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":81,"title":{},"body":{"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["context",{"_index":20,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":468,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":186,"title":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["controller('admin/game",{"_index":358,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["controller('game",{"_index":381,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('health",{"_index":446,"title":{},"body":{"controllers/HealthController.html":{}}}],["controllers",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"overview.html":{}}}],["conventional",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["copysource",{"_index":634,"title":{},"body":{"injectables/S3Service.html":{}}}],["core/core.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["core/redis",{"_index":421,"title":{},"body":{"injectables/GameService.html":{}}}],["coremodule",{"_index":152,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":679,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":293,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["createdatecolumn",{"_index":309,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["createdby",{"_index":294,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["creategame",{"_index":330,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["creategame(@body",{"_index":365,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(body",{"_index":334,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["creategame(name",{"_index":411,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamereq",{"_index":264,"title":{"classes/CreateGameReq.html":{}},"body":{"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"coverage.html":{}}}],["ctx",{"_index":117,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":120,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":119,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["database",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":297,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["date().toisostring",{"_index":137,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["date.now",{"_index":473,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["db",{"_index":448,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["decorators",{"_index":54,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"classes/Operation.html":{}}}],["default",{"_index":323,"title":{},"body":{"classes/Game.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["definition",{"_index":280,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["delete",{"_index":348,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/S3Service.html":{}}}],["delete('/:id",{"_index":370,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete('/:id')@apiokresponse({type",{"_index":339,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["delete(key",{"_index":585,"title":{},"body":{"injectables/S3Service.html":{}}}],["deleted",{"_index":757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deletedat",{"_index":291,"title":{},"body":{"classes/Game.html":{}}}],["deletedatecolumn",{"_index":298,"title":{},"body":{"classes/Game.html":{}}}],["deletegame",{"_index":331,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["deletegame(@param('id",{"_index":371,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["deletegame(id",{"_index":338,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["dependencies",{"_index":143,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["development",{"_index":768,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["digital/eventbus",{"_index":520,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["digital/shared",{"_index":516,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["documentation",{"_index":680,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["draft",{"_index":755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dto/adminlogin.dto",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["dtos",{"_index":356,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["dynamicmodule",{"_index":551,"title":{},"body":{"modules/RedisModule.html":{}}}],["e2e",{"_index":779,"title":{},"body":{"index.html":{}}}],["email",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["entities",{"_index":357,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["entities/game.entity",{"_index":398,"title":{},"body":{"modules/GameModule.html":{},"injectables/GameService.html":{}}}],["entity",{"_index":317,"title":{},"body":{"classes/Game.html":{}}}],["enum",{"_index":306,"title":{},"body":{"classes/Game.html":{}}}],["enumerations",{"_index":752,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envelope",{"_index":274,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["env}.config.yml",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":25,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["error",{"_index":534,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["error('protobuf",{"_index":535,"title":{},"body":{"injectables/PointsService.html":{}}}],["error('s3",{"_index":630,"title":{},"body":{"injectables/S3Service.html":{}}}],["errors",{"_index":672,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":674,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors[0",{"_index":675,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["established",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":517,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["event_bus_sdk",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventbus",{"_index":540,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk",{"_index":519,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["eventbussdk.createenvelopewithbody(message",{"_index":537,"title":{},"body":{"injectables/PointsService.html":{}}}],["eventbussdk.provider",{"_index":654,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["eventbussdk.service",{"_index":522,"title":{},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{}}}],["eventbussdkproviders",{"_index":653,"title":{},"body":{"modules/ThirdPartyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventbussdkservice",{"_index":268,"title":{"classes/EventBusSDKService.html":{}},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{}}}],["exception",{"_index":108,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.constraints",{"_index":130,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception.getstatus",{"_index":128,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['code",{"_index":135,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['details",{"_index":134,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exception['message",{"_index":124,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["exceptionfilter",{"_index":101,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["executioncontext",{"_index":12,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/LoggingInterceptor.html":{}}}],["expiresin",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":31,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["express",{"_index":115,"title":{},"body":{"classes/AllExceptionFilter.html":{},"dependencies.html":{}}}],["ext",{"_index":639,"title":{},"body":{"injectables/S3Service.html":{}}}],["extends",{"_index":33,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/Game.html":{},"injectables/MemberStrategy.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["extractjwt",{"_index":73,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":84,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["false",{"_index":86,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filename",{"_index":590,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1",{"_index":641,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder1}/${folder2}/${key",{"_index":645,"title":{},"body":{"injectables/S3Service.html":{}}}],["folder2",{"_index":643,"title":{},"body":{"injectables/S3Service.html":{}}}],["forroot",{"_index":546,"title":{},"body":{"modules/RedisModule.html":{}}}],["forroot(options",{"_index":547,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync",{"_index":552,"title":{},"body":{"modules/RedisModule.html":{}}}],["forrootasync(options",{"_index":553,"title":{},"body":{"modules/RedisModule.html":{}}}],["found",{"_index":385,"title":{},"body":{"controllers/GameController.html":{}}}],["fs",{"_index":483,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["function",{"_index":571,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["functions",{"_index":758,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":288,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["game.controller",{"_index":397,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":355,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game/game.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["game_data:${id",{"_index":430,"title":{},"body":{"injectables/GameService.html":{}}}],["game_status_enum",{"_index":320,"title":{},"body":{"classes/Game.html":{},"miscellaneous/enumerations.html":{}}}],["game_status_enum.draft",{"_index":324,"title":{},"body":{"classes/Game.html":{}}}],["game_status_enum})@index('game_status_idx",{"_index":307,"title":{},"body":{"classes/Game.html":{}}}],["gameadmin.controller",{"_index":396,"title":{},"body":{"modules/GameModule.html":{}}}],["gameadmincontroller",{"_index":326,"title":{"controllers/GameAdminController.html":{}},"body":{"controllers/GameAdminController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamecompleted",{"_index":523,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.create(pojo",{"_index":536,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecompleted.verify(pojo",{"_index":532,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamecontroller",{"_index":373,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gamedto",{"_index":336,"title":{"classes/GameDto.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"coverage.html":{}}}],["gamedto})@get('/:id",{"_index":376,"title":{},"body":{"controllers/GameController.html":{}}}],["gameid",{"_index":515,"title":{},"body":{"injectables/PointsService.html":{}}}],["gameid.tostring",{"_index":529,"title":{},"body":{"injectables/PointsService.html":{}}}],["gamemodule",{"_index":153,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gamerepository",{"_index":410,"title":{},"body":{"injectables/GameService.html":{}}}],["gameservice",{"_index":354,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genkeybyfilename",{"_index":579,"title":{},"body":{"injectables/S3Service.html":{}}}],["genkeybyfilename(filename",{"_index":588,"title":{},"body":{"injectables/S3Service.html":{}}}],["get('/:id",{"_index":362,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["get('/:id')@apiokresponse({type",{"_index":342,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["get()@healthcheck",{"_index":440,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(key",{"_index":591,"title":{},"body":{"injectables/S3Service.html":{}}}],["getgame",{"_index":332,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgame(@param('id",{"_index":363,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["getgame(id",{"_index":341,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["getgamewithcache",{"_index":404,"title":{},"body":{"injectables/GameService.html":{}}}],["getgamewithcache(id",{"_index":415,"title":{},"body":{"injectables/GameService.html":{}}}],["getobjecthead",{"_index":580,"title":{},"body":{"injectables/S3Service.html":{}}}],["getobjecthead(key",{"_index":593,"title":{},"body":{"injectables/S3Service.html":{}}}],["getredistoken",{"_index":557,"title":{},"body":{"modules/RedisModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gets3param",{"_index":581,"title":{},"body":{"injectables/S3Service.html":{}}}],["gets3param(key",{"_index":595,"title":{},"body":{"injectables/S3Service.html":{}}}],["getting",{"_index":761,"title":{"index.html":{}},"body":{}}],["global",{"_index":564,"title":{},"body":{"modules/RedisModule.html":{}}}],["google",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["google.auth.oauth2",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["googleapis",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["graph",{"_index":786,"title":{},"body":{"modules.html":{}}}],["grpc",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["grpc/proto",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":474,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["handlerequest",{"_index":10,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["handlerequest(err",{"_index":22,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["health",{"_index":438,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":453,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":257,"title":{},"body":{"modules/CoreModule.html":{}}}],["healthcheck",{"_index":442,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":443,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":436,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":251,"title":{"modules/HealthModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helmet",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["hk01",{"_index":92,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/PointsService.html":{},"dependencies.html":{}}}],["hk01.protobuf.game.mcgame",{"_index":524,"title":{},"body":{"injectables/PointsService.html":{},"miscellaneous/variables.html":{}}}],["host",{"_index":105,"title":{},"body":{"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["host.switchtohttp",{"_index":118,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["hs256",{"_index":90,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["httpexception",{"_index":110,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpexception('game",{"_index":384,"title":{},"body":{"controllers/GameController.html":{}}}],["httpstatus",{"_index":111,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/GameController.html":{}}}],["httpstatus.bad_request",{"_index":129,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":122,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":386,"title":{},"body":{"controllers/GameController.html":{}}}],["id",{"_index":292,"title":{},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{}}}],["identifier",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":85,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["implements",{"_index":100,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":26,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["index('game_name_idx",{"_index":322,"title":{},"body":{"classes/Game.html":{}}}],["index('game_status_idx",{"_index":325,"title":{},"body":{"classes/Game.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["inherited",{"_index":310,"title":{},"body":{"classes/Game.html":{}}}],["initializing",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["inject('event_bus_sdk",{"_index":278,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["inject(getredistoken",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectredis",{"_index":420,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":418,"title":{},"body":{"injectables/GameService.html":{}}}],["injectrepository(game",{"_index":422,"title":{},"body":{"injectables/GameService.html":{}}}],["insert",{"_index":539,"title":{},"body":{"injectables/PointsService.html":{}}}],["installation",{"_index":764,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":766,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":127,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["instead",{"_index":490,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["integrate",{"_index":533,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["intercept",{"_index":456,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":457,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interface",{"_index":559,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":321,"title":{},"body":{"classes/Game.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["ioredis",{"_index":419,"title":{},"body":{"injectables/GameService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"dependencies.html":{}}}],["ioredis(options",{"_index":563,"title":{},"body":{"modules/RedisModule.html":{}}}],["ioredismoduleconnectiontoken",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isfirsttimegamer",{"_index":509,"title":{},"body":{"injectables/PointsService.html":{}}}],["isglobal",{"_index":259,"title":{},"body":{"modules/CoreModule.html":{}}}],["isint",{"_index":391,"title":{},"body":{"classes/GameDto.html":{}}}],["isint()@apiproperty",{"_index":388,"title":{},"body":{"classes/GameDto.html":{}}}],["isstring",{"_index":58,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{}}}],["isstring()@apiproperty",{"_index":55,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/GameDto.html":{}}}],["issuer",{"_index":91,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["join",{"_index":484,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["js",{"_index":521,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["json.parse(cache",{"_index":433,"title":{},"body":{"injectables/GameService.html":{}}}],["json.stringify(result",{"_index":435,"title":{},"body":{"injectables/GameService.html":{}}}],["jwt",{"_index":76,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":83,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["jwtmodule",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":587,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(0",{"_index":642,"title":{},"body":{"injectables/S3Service.html":{}}}],["key.substr(1",{"_index":644,"title":{},"body":{"injectables/S3Service.html":{}}}],["legend",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["load",{"_index":260,"title":{},"body":{"modules/CoreModule.html":{}}}],["loader",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":463,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('eventbussdk",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('requestlog",{"_index":467,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["logger(pointsservice.name",{"_index":526,"title":{},"body":{"injectables/PointsService.html":{}}}],["logger.log",{"_index":476,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logger.log('rmq",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`request",{"_index":469,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["logginginterceptor",{"_index":454,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["lottery/lottery.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["lotterymodule",{"_index":154,"title":{"modules/LotteryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LotteryModule.html":{},"modules.html":{},"overview.html":{}}}],["lotteryrewardid",{"_index":512,"title":{},"body":{"injectables/PointsService.html":{}}}],["manager",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":40,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxtimeout",{"_index":286,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["mcgame",{"_index":763,"title":{},"body":{"index.html":{}}}],["member",{"_index":485,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["memberstrategy",{"_index":212,"title":{"injectables/MemberStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":123,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/PointsService.html":{}}}],["metadata",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":662,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":8,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":751,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":772,"title":{},"body":{"index.html":{}}}],["module",{"_index":140,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/LotteryModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/LotteryModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["modulemetadata",{"_index":572,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["modules",{"_index":142,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/HealthModule.html":{},"modules/LotteryModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":582,"title":{},"body":{"injectables/S3Service.html":{}}}],["move(key",{"_index":599,"title":{},"body":{"injectables/S3Service.html":{}}}],["mysql",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":17,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["nestinterceptor",{"_index":462,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces",{"_index":573,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["nestjs/config",{"_index":77,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/EventBusSDKService.html":{},"modules/GameModule.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":30,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":61,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"controllers/AuthController.html":{},"classes/CreateGameReq.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":445,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"dependencies.html":{}}}],["new",{"_index":38,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AllExceptionFilter.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newgame",{"_index":423,"title":{},"body":{"injectables/GameService.html":{}}}],["newkey",{"_index":600,"title":{},"body":{"injectables/S3Service.html":{}}}],["newpayload",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":458,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now",{"_index":472,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":477,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":765,"title":{},"body":{"index.html":{}}}],["number",{"_index":300,"title":{},"body":{"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/PointsService.html":{},"injectables/ValidationPipe.html":{}}}],["number(configservice.get('redis_port",{"_index":263,"title":{},"body":{"modules/CoreModule.html":{}}}],["oauth2client",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["oauth2client.gettoken(authcode",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["object",{"_index":670,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.freeze",{"_index":621,"title":{},"body":{"injectables/S3Service.html":{}}}],["observable",{"_index":461,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["operation",{"_index":290,"title":{"classes/Operation.html":{}},"body":{"classes/Game.html":{},"classes/Operation.html":{},"coverage.html":{}}}],["operation:11",{"_index":315,"title":{},"body":{"classes/Game.html":{}}}],["operation:14",{"_index":316,"title":{},"body":{"classes/Game.html":{}}}],["operation:5",{"_index":311,"title":{},"body":{"classes/Game.html":{}}}],["operation:8",{"_index":313,"title":{},"body":{"classes/Game.html":{}}}],["operationlogmodule",{"_index":498,"title":{"modules/OperationLogModule.html":{}},"body":{"modules/OperationLogModule.html":{},"modules.html":{}}}],["optional",{"_index":19,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":550,"title":{},"body":{"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["options.imports",{"_index":566,"title":{},"body":{"modules/RedisModule.html":{}}}],["out",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["overview",{"_index":788,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":703,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":349,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{}}}],["param('id",{"_index":368,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["params",{"_index":625,"title":{},"body":{"injectables/S3Service.html":{}}}],["parseintpipe",{"_index":380,"title":{},"body":{"controllers/GameController.html":{}}}],["passport",{"_index":75,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":78,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["passportstrategy(strategy",{"_index":79,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["password",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["path",{"_index":138,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/MemberStrategy.html":{},"injectables/S3Service.html":{}}}],["path.extname(filename",{"_index":640,"title":{},"body":{"injectables/S3Service.html":{}}}],["payload",{"_index":72,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/AuthService.html":{},"injectables/MemberStrategy.html":{}}}],["payload.email",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.name",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.picture",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload.sub",{"_index":95,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["payload.username",{"_index":97,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["pick",{"_index":568,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["pipe",{"_index":475,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipetransform",{"_index":666,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":667,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":671,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["player/player.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["playermodule",{"_index":155,"title":{"modules/PlayerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlayerModule.html":{},"modules.html":{},"overview.html":{}}}],["points.service",{"_index":652,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["pointsservice",{"_index":501,"title":{"injectables/PointsService.html":{}},"body":{"injectables/PointsService.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["pojo",{"_index":528,"title":{},"body":{"injectables/PointsService.html":{}}}],["port",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["post",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameAdminController.html":{}}}],["post('/')@apiokresponse({type",{"_index":335,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["post('adminlogin",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":328,"title":{},"body":{"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"controllers/HealthController.html":{}}}],["primarygeneratedcolumn",{"_index":301,"title":{},"body":{"classes/Game.html":{}}}],["private",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":774,"title":{},"body":{"index.html":{}}}],["project",{"_index":93,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AuthModule.html":{}}}],["promise",{"_index":277,"title":{},"body":{"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":50,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{}}}],["proto",{"_index":518,"title":{},"body":{"injectables/PointsService.html":{},"dependencies.html":{}}}],["provide",{"_index":561,"title":{},"body":{"modules/RedisModule.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":556,"title":{},"body":{"modules/RedisModule.html":{}}}],["providers",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/LotteryModule.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["publish",{"_index":270,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["publish(routingpath",{"_index":273,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["published",{"_index":756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["publishgamecompleted",{"_index":503,"title":{},"body":{"injectables/PointsService.html":{}}}],["publishgamecompleted(gameid",{"_index":506,"title":{},"body":{"injectables/PointsService.html":{}}}],["put",{"_index":347,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id",{"_index":367,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["put('/:id')@apiokresponse({type",{"_index":345,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["queue",{"_index":541,"title":{},"body":{"injectables/PointsService.html":{}}}],["quiz/quiz.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["quizmodule",{"_index":156,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["r",{"_index":607,"title":{},"body":{"injectables/S3Service.html":{}}}],["r.merge(r.clone(this.s3setting",{"_index":624,"title":{},"body":{"injectables/S3Service.html":{}}}],["ramda",{"_index":608,"title":{},"body":{"injectables/S3Service.html":{}}}],["readfilesync",{"_index":482,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["record",{"_index":596,"title":{},"body":{"injectables/S3Service.html":{}}}],["redirecturl",{"_index":52,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{}}}],["redis",{"_index":408,"title":{},"body":{"injectables/GameService.html":{},"dependencies.html":{}}}],["redis/redis.module",{"_index":254,"title":{},"body":{"modules/CoreModule.html":{}}}],["redis_module_connection_token",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisclient",{"_index":407,"title":{},"body":{"injectables/GameService.html":{}}}],["redisconnectionprovider",{"_index":560,"title":{},"body":{"modules/RedisModule.html":{}}}],["redismodule",{"_index":252,"title":{"modules/RedisModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/RedisModule.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forrootasync",{"_index":261,"title":{},"body":{"modules/CoreModule.html":{}}}],["redismoduleasyncoptions",{"_index":554,"title":{"interfaces/RedisModuleAsyncOptions.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["redisoptions",{"_index":548,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{}}}],["reflect",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["region",{"_index":616,"title":{},"body":{"injectables/S3Service.html":{}}}],["repository",{"_index":406,"title":{},"body":{"injectables/GameService.html":{}}}],["request",{"_index":113,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{}}}],["request.path",{"_index":471,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request.url",{"_index":139,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["res",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.set('authorization",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}],["response",{"_index":114,"title":{},"body":{"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/LoggingInterceptor.html":{}}}],["response.json",{"_index":132,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["result",{"_index":39,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":41,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retries",{"_index":284,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["retry",{"_index":283,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["return",{"_index":35,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/EventBusSDKService.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["rimraf",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["routingpath",{"_index":276,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["rs256",{"_index":491,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["run",{"_index":769,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":464,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":466,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["s3",{"_index":577,"title":{},"body":{"injectables/S3Service.html":{}}}],["s3.service",{"_index":655,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["s3service",{"_index":575,"title":{"injectables/S3Service.html":{}},"body":{"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"coverage.html":{},"overview.html":{}}}],["s3setting",{"_index":578,"title":{},"body":{"injectables/S3Service.html":{}}}],["scoreingame",{"_index":508,"title":{},"body":{"injectables/PointsService.html":{}}}],["sdk",{"_index":271,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sdk.connect",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretaccesskey",{"_index":614,"title":{},"body":{"injectables/S3Service.html":{}}}],["secretorkey",{"_index":87,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["signoptions",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/LoggingInterceptor.html":{},"modules/LotteryModule.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"modules/OperationLogModule.html":{},"modules/PlayerModule.html":{},"injectables/PointsService.html":{},"modules/QuizModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"modules/ThirdPartyModule.html":{},"injectables/ValidationPipe.html":{}}}],["src/.../configuration.ts",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../decorators.ts",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../eventbussdk.provider.ts",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.interface.ts",{"_index":753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../logger.interceptor.ts",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":759,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../points.service.ts",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:13",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/adminlogin.dto.ts",{"_index":49,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"coverage.html":{}}}],["src/auth/dto/adminlogin.dto.ts:11",{"_index":57,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/dto/adminlogin.dto.ts:7",{"_index":56,"title":{},"body":{"classes/AdminLoginRequestDto.html":{}}}],["src/auth/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/admin.guard.ts:10",{"_index":14,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/admin.guard.ts:14",{"_index":24,"title":{},"body":{"injectables/AdminAuthGuard.html":{}}}],["src/auth/guards/member.guard.ts",{"_index":43,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{},"coverage.html":{}}}],["src/auth/guards/member.guard.ts:10",{"_index":44,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/guards/member.guard.ts:14",{"_index":45,"title":{},"body":{"injectables/AdminAuthGuard-1.html":{}}}],["src/auth/strategies/admin.strategy.ts",{"_index":63,"title":{},"body":{"injectables/AdminStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/admin.strategy.ts:18",{"_index":71,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/admin.strategy.ts:7",{"_index":69,"title":{},"body":{"injectables/AdminStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts",{"_index":479,"title":{},"body":{"injectables/MemberStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/member.strategy.ts:25",{"_index":481,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/auth/strategies/member.strategy.ts:9",{"_index":480,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["src/common/entities/operation.entity.ts",{"_index":492,"title":{},"body":{"classes/Operation.html":{},"coverage.html":{}}}],["src/common/entities/operation.entity.ts:11",{"_index":495,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:14",{"_index":496,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:5",{"_index":493,"title":{},"body":{"classes/Operation.html":{}}}],["src/common/entities/operation.entity.ts:8",{"_index":494,"title":{},"body":{"classes/Operation.html":{}}}],["src/core/config/configuration.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/core.module.ts",{"_index":253,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/health/health.controller.ts",{"_index":437,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/core/health/health.controller.ts:19",{"_index":441,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/core/health/health.module.ts",{"_index":451,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/core/middlewares/exception.filter.ts",{"_index":99,"title":{},"body":{"classes/AllExceptionFilter.html":{},"coverage.html":{}}}],["src/core/middlewares/exception.filter.ts:13",{"_index":107,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["src/core/middlewares/logger.interceptor.ts",{"_index":455,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/middlewares/logger.interceptor.ts:15",{"_index":460,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/core/middlewares/validation.pipe.ts",{"_index":657,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/core/middlewares/validation.pipe.ts:18",{"_index":661,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/core/middlewares/validation.pipe.ts:6",{"_index":665,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/core/redis/constants.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/redis/decorators.ts",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/redis/interface.ts",{"_index":567,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{},"coverage.html":{}}}],["src/core/redis/redis.module.ts",{"_index":544,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/redis.module.ts:21",{"_index":555,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/redis.module.ts:9",{"_index":549,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/core/redis/utils.ts",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/game/dtos/creategame.dto.ts",{"_index":265,"title":{},"body":{"classes/CreateGameReq.html":{},"coverage.html":{}}}],["src/game/dtos/creategame.dto.ts:7",{"_index":267,"title":{},"body":{"classes/CreateGameReq.html":{}}}],["src/game/dtos/game.dto.ts",{"_index":387,"title":{},"body":{"classes/GameDto.html":{},"coverage.html":{}}}],["src/game/dtos/game.dto.ts:11",{"_index":390,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/dtos/game.dto.ts:7",{"_index":389,"title":{},"body":{"classes/GameDto.html":{}}}],["src/game/entities/game.entity.ts",{"_index":289,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/game.entity.ts:15",{"_index":302,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:19",{"_index":304,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:23",{"_index":308,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/game.entity.ts:26",{"_index":299,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":374,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:26",{"_index":377,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":394,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":403,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:10",{"_index":409,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:17",{"_index":412,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:23",{"_index":417,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:28",{"_index":414,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:32",{"_index":413,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:37",{"_index":416,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/gameadmin.controller.ts",{"_index":327,"title":{},"body":{"controllers/GameAdminController.html":{},"coverage.html":{}}}],["src/game/gameadmin.controller.ts:30",{"_index":343,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:39",{"_index":337,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:49",{"_index":346,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/gameadmin.controller.ts:61",{"_index":340,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["src/game/interfaces/game.interface.ts",{"_index":754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/lottery/lottery.module.ts",{"_index":478,"title":{},"body":{"modules/LotteryModule.html":{}}}],["src/main.ts",{"_index":697,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/operationlog/operationlog.module.ts",{"_index":499,"title":{},"body":{"modules/OperationLogModule.html":{}}}],["src/player/player.module.ts",{"_index":500,"title":{},"body":{"modules/PlayerModule.html":{}}}],["src/quiz/quiz.module.ts",{"_index":543,"title":{},"body":{"modules/QuizModule.html":{}}}],["src/thirdparty/eventbussdk.provider.ts",{"_index":698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/eventbussdk.service.ts",{"_index":269,"title":{},"body":{"classes/EventBusSDKService.html":{},"coverage.html":{}}}],["src/thirdparty/eventbussdk.service.ts:10",{"_index":275,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/eventbussdk.service.ts:4",{"_index":272,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["src/thirdparty/points.service.ts",{"_index":502,"title":{},"body":{"injectables/PointsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/thirdparty/points.service.ts:10",{"_index":505,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/points.service.ts:16",{"_index":514,"title":{},"body":{"injectables/PointsService.html":{}}}],["src/thirdparty/s3.service.ts",{"_index":576,"title":{},"body":{"injectables/S3Service.html":{},"coverage.html":{}}}],["src/thirdparty/s3.service.ts:10",{"_index":605,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:11",{"_index":584,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:25",{"_index":597,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:32",{"_index":603,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:43",{"_index":586,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:55",{"_index":601,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:69",{"_index":592,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:80",{"_index":589,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/s3.service.ts:89",{"_index":594,"title":{},"body":{"injectables/S3Service.html":{}}}],["src/thirdparty/thirdparty.module.ts",{"_index":651,"title":{},"body":{"modules/ThirdPartyModule.html":{}}}],["start",{"_index":770,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":773,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":775,"title":{},"body":{"index.html":{}}}],["started",{"_index":762,"title":{"index.html":{}},"body":{}}],["statements",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":545,"title":{},"body":{"modules/RedisModule.html":{}}}],["status",{"_index":121,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Game.html":{}}}],["statuscode",{"_index":133,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["store",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["strategies/admin.strategy",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/member.strategy",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":74,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["string",{"_index":53,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/Game.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"classes/Operation.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":82,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["super.canactivate(context",{"_index":36,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["support",{"_index":783,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":784,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":184,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":465,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["terminusmodule",{"_index":452,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":778,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":781,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":780,"title":{},"body":{"index.html":{}}}],["tests",{"_index":777,"title":{},"body":{"index.html":{}}}],["thirdpartymodule",{"_index":647,"title":{"modules/ThirdPartyModule.html":{}},"body":{"modules/ThirdPartyModule.html":{},"modules.html":{},"overview.html":{}}}],["this.authservice.adminlogin",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('event_bus_max_timeout",{"_index":287,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('event_bus_retry_time",{"_index":285,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.configservice.get('s3_bucket",{"_index":623,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_bucket')}/${key",{"_index":635,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_key",{"_index":613,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_client_secret",{"_index":615,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('s3_region",{"_index":617,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.configservice.get('sso_google_cilentid",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('sso_google_secret",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":450,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.delete(key",{"_index":637,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.eventbussdkservice.publish(topic",{"_index":538,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.gamerepository.create",{"_index":424,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.findone(id",{"_index":427,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.save(newgame",{"_index":425,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.softdelete(id",{"_index":428,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gamerepository.update(id",{"_index":426,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameservice.creategame(name",{"_index":366,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.deletegame(id",{"_index":372,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgame(id",{"_index":364,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.gameservice.getgamewithcache(id",{"_index":383,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.updategame(id",{"_index":369,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["this.getobjecthead(key",{"_index":631,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(key",{"_index":626,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.gets3param(newkey",{"_index":633,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.health.check",{"_index":449,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.decode(tk.tokens.id_token",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(newpayload",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":525,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.logger.error('eventbus",{"_index":542,"title":{},"body":{"injectables/PointsService.html":{}}}],["this.redisclient.get(cachekey",{"_index":432,"title":{},"body":{"injectables/GameService.html":{}}}],["this.redisclient.set(cachekey",{"_index":434,"title":{},"body":{"injectables/GameService.html":{}}}],["this.s3",{"_index":618,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.copyobject(params).promise",{"_index":636,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.deleteobject(params).promise",{"_index":632,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.getobject(params).promise",{"_index":638,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.headobject(params).promise",{"_index":646,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3.upload(params).promise",{"_index":628,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.s3setting",{"_index":620,"title":{},"body":{"injectables/S3Service.html":{}}}],["this.sdk.publish",{"_index":281,"title":{},"body":{"classes/EventBusSDKService.html":{}}}],["this.tovalidate(metatype",{"_index":669,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":37,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"controllers/GameController.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":136,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["tk",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["todo",{"_index":279,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/MemberStrategy.html":{},"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["topic",{"_index":282,"title":{},"body":{"classes/EventBusSDKService.html":{},"injectables/PointsService.html":{}}}],["tovalidate",{"_index":658,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":660,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":659,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":663,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":668,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"injectables/S3Service.html":{}}}],["try",{"_index":527,"title":{},"body":{"injectables/PointsService.html":{},"injectables/S3Service.html":{}}}],["ttl",{"_index":400,"title":{},"body":{"modules/GameModule.html":{}}}],["type",{"_index":18,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{},"classes/AdminLoginRequestDto.html":{},"injectables/AdminStrategy.html":{},"classes/AllExceptionFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameReq.html":{},"classes/EventBusSDKService.html":{},"classes/Game.html":{},"controllers/GameAdminController.html":{},"controllers/GameController.html":{},"classes/GameDto.html":{},"injectables/GameService.html":{},"injectables/LoggingInterceptor.html":{},"injectables/MemberStrategy.html":{},"classes/Operation.html":{},"injectables/PointsService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":318,"title":{},"body":{"classes/Game.html":{},"injectables/GameService.html":{},"classes/Operation.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":444,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{}}}],["typeormmodule.forfeature([game",{"_index":402,"title":{},"body":{"modules/GameModule.html":{}}}],["typeormmodule.forrootasync",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":676,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":678,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["ui",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":27,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["undefined",{"_index":126,"title":{},"body":{"classes/AllExceptionFilter.html":{},"classes/Game.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":776,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":104,"title":{},"body":{"classes/AllExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["updatedat",{"_index":295,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updatedatecolumn",{"_index":314,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updatedby",{"_index":296,"title":{},"body":{"classes/Game.html":{},"classes/Operation.html":{}}}],["updategame",{"_index":333,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["updategame(id",{"_index":344,"title":{},"body":{"controllers/GameAdminController.html":{},"injectables/GameService.html":{}}}],["upload",{"_index":583,"title":{},"body":{"injectables/S3Service.html":{}}}],["upload(body",{"_index":602,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded",{"_index":627,"title":{},"body":{"injectables/S3Service.html":{}}}],["uploaded.location",{"_index":629,"title":{},"body":{"injectables/S3Service.html":{}}}],["useclass",{"_index":569,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["useexisting",{"_index":570,"title":{},"body":{"interfaces/RedisModuleAsyncOptions.html":{}}}],["usefactory",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"interfaces/RedisModuleAsyncOptions.html":{},"miscellaneous/variables.html":{}}}],["usefactory(options",{"_index":565,"title":{},"body":{"modules/RedisModule.html":{}}}],["useguards",{"_index":350,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useguards(adminauthguard",{"_index":360,"title":{},"body":{"controllers/GameAdminController.html":{}}}],["useinterceptors",{"_index":379,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":382,"title":{},"body":{"controllers/GameController.html":{}}}],["useinterceptors(cacheinterceptor)@apiokresponse({type",{"_index":375,"title":{},"body":{"controllers/GameController.html":{}}}],["user",{"_index":23,"title":{},"body":{"injectables/AdminAuthGuard.html":{},"injectables/AdminAuthGuard-1.html":{}}}],["userid",{"_index":94,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["username",{"_index":96,"title":{},"body":{"injectables/AdminStrategy.html":{},"modules/AppModule.html":{},"injectables/MemberStrategy.html":{}}}],["usevalue",{"_index":562,"title":{},"body":{"modules/RedisModule.html":{}}}],["using",{"_index":488,"title":{},"body":{"injectables/MemberStrategy.html":{}}}],["utils",{"_index":558,"title":{},"body":{"modules/RedisModule.html":{}}}],["uuid",{"_index":609,"title":{},"body":{"injectables/S3Service.html":{},"dependencies.html":{}}}],["uuid/v4",{"_index":610,"title":{},"body":{"injectables/S3Service.html":{}}}],["validate",{"_index":65,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":673,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":70,"title":{},"body":{"injectables/AdminStrategy.html":{},"injectables/MemberStrategy.html":{}}}],["validation_error",{"_index":131,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationerror",{"_index":112,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["validationpipe",{"_index":656,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":59,"title":{},"body":{"classes/AdminLoginRequestDto.html":{},"classes/AllExceptionFilter.html":{},"classes/CreateGameReq.html":{},"classes/GameDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":598,"title":{},"body":{"injectables/S3Service.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":793,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifyerr",{"_index":531,"title":{},"body":{"injectables/PointsService.html":{}}}],["void",{"_index":109,"title":{},"body":{"classes/AllExceptionFilter.html":{}}}],["watch",{"_index":771,"title":{},"body":{"index.html":{}}}],["yaml_config_filename",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GameModule.html":{},"modules/ThirdPartyModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AdminAuthGuard.html":{"url":"injectables/AdminAuthGuard.html","title":"injectable - AdminAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/admin.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/admin.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('admin') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminAuthGuard-1.html":{"url":"injectables/AdminAuthGuard-1.html","title":"injectable - AdminAuthGuard-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/member.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/member.guard.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class AdminAuthGuard extends AuthGuard('member') {\n  canActivate(context: ExecutionContext) {\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminLoginRequestDto.html":{"url":"classes/AdminLoginRequestDto.html","title":"class - AdminLoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminLoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/adminLogin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authCode\n                            \n                            \n                                redirectUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirectUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/adminLogin.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AdminLoginRequestDto {\n  @IsString()\n  @ApiProperty()\n  authCode: string;\n\n  @IsString()\n  @ApiProperty()\n  redirectUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminStrategy.html":{"url":"injectables/AdminStrategy.html","title":"injectable - AdminStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/admin.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/admin.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/admin.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AdminStrategy extends PassportStrategy(Strategy, 'admin') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('SSO_SECRET'),\n      algorithms: ['HS256'],\n      // issuer: 'hk01-project',\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionFilter.html":{"url":"classes/AllExceptionFilter.html","title":"class - AllExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: unknown, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/exception.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { ValidationError } from 'class-validator';\nimport { Request, Response } from 'express';\n\n@Catch()\nexport class AllExceptionFilter implements ExceptionFilter {\n  catch(exception: unknown, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let message = exception['message'];\n    let code = 'UNDEFINED';\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n    }\n    if (exception instanceof ValidationError) {\n      status = HttpStatus.BAD_REQUEST;\n      message = exception.constraints;\n      code = 'VALIDATION_ERROR';\n    }\n\n    response.json({\n      statusCode: status,\n      message: exception['details'] || message,\n      code: exception['code'] || code,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nLotteryModule\n\nLotteryModule\n\nAppModule -->\n\nLotteryModule->AppModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nAppModule -->\n\nPlayerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            LotteryModule\n                        \n                        \n                            PlayerModule\n                        \n                        \n                            QuizModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { CoreModule } from './core/core.module'\nimport { AuthModule } from './auth/auth.module'\nimport { GameModule } from './game/game.module'\nimport { LotteryModule } from './lottery/lottery.module'\nimport { PlayerModule } from './player/player.module'\nimport { QuizModule } from './quiz/quiz.module'\n\n@Module({\n  imports: [\n    CoreModule,\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'mysql',\n        host: configService.get('MYSQL_HOST'),\n        port: configService.get('MYSQL_PORT'),\n        username: configService.get('MYSQL_USER'),\n        password: configService.get('MYSQL_PASSWORD'),\n        database: configService.get('MYSQL_DATABASE'),\n        autoLoadEntities: true,\n        synchronize: true,\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    GameModule,\n    LotteryModule,\n    PlayerModule,\n    QuizModule,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(body: AdminLoginRequestDto, res: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('adminLogin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AdminLoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body, Response } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { AuthService } from './auth.service';\nimport { AdminLoginRequestDto } from './dto/adminLogin.dto';\n\n@Controller('')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n\n  @Post('adminLogin')\n  async adminLogin(@Body() body: AdminLoginRequestDto, @Response() res: any) {\n    const adminToken = await this.authService.adminLogin(\n      body.authCode,\n      body.redirectUrl,\n    );\n    res.set('Authorization', `Bearer ${adminToken}`);\n    return {};\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            MemberStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\n\nimport { AdminStrategy } from './strategies/admin.strategy';\nimport { MemberStrategy } from './strategies/member.strategy';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SSO_SECRET'),\n        signOptions: {\n          expiresIn: '12h',\n          algorithm: 'HS256',\n          // issuer: 'hk01-project',\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AdminStrategy, MemberStrategy, AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                adminLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            adminLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    adminLogin(authCode: string, redirectUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    redirectUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google } from 'googleapis';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async adminLogin(authCode: string, redirectUrl: string) {\n    const oAuth2Client = new google.auth.OAuth2(\n      this.configService.get('SSO_GOOGLE_CILENTID'),\n      this.configService.get('SSO_GOOGLE_SECRET'),\n      redirectUrl,\n    );\n    const tk = await oAuth2Client.getToken(authCode);\n    const payload: any = this.jwtService.decode(tk.tokens.id_token);\n    const newPayload = {\n      email: payload.email,\n      name: payload.name,\n      avatar: payload.picture,\n    };\n    return this.jwtService.sign(newPayload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHealthModule->CoreModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            RedisModule\n                        \n                        \n                            RedisModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\n\nimport { RedisModule } from './redis/redis.module'\nimport configuration from './config/configuration'\nimport { HealthModule } from './health/health.module'\n\n@Module({\n  imports: [\n    HealthModule,\n    RedisModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration],\n    }),\n    RedisModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        host: configService.get('REDIS_HOST'),\n        port: Number(configService.get('REDIS_PORT')),\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameReq.html":{"url":"classes/CreateGameReq.html","title":"class - CreateGameReq","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameReq\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/createGame.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/createGame.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGameReq {\n  @ApiProperty()\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventBusSDKService.html":{"url":"classes/EventBusSDKService.html","title":"class - EventBusSDKService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventBusSDKService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/eventBusSDK.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publish\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, sdk: any)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/eventBusSDK.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publish\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publish(routingPath: any, envelope: any)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/eventBusSDK.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routingPath\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    envelope\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nexport class EventBusSDKService {\n  constructor(\n    private configService: ConfigService,\n    @Inject('EVENT_BUS_SDK') private sdk: any, // TODO: type definition\n  ) {}\n\n  async publish(routingPath: any, envelope: any): Promise {\n    await this.sdk.publish({\n      topic: routingPath,\n      envelope: envelope,\n      retry: {\n        retries: this.configService.get('EVENT_BUS_RETRY_TIME'),\n        maxTimeout: this.configService.get('EVENT_BUS_MAX_TIMEOUT'),\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/game.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Operation\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@Index('game_name_idx')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({default: undefined, enum: GAME_STATUS_ENUM})@Index('game_status_idx')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/entities/game.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Operation\n\n                                \n                            \n                        \n                            \n                                    Defined in         Operation:14\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  Index,\n  PrimaryGeneratedColumn,\n  DeleteDateColumn,\n} from 'typeorm'\n\nimport { Operation } from '../../common'\nimport { GAME_STATUS_ENUM } from '../interfaces'\n\n@Entity()\nexport class Game extends Operation {\n  @PrimaryGeneratedColumn()\n  id: number\n\n  @Column()\n  @Index('game_name_idx')\n  name: string\n\n  @Column({ default: GAME_STATUS_ENUM.DRAFT, enum: GAME_STATUS_ENUM })\n  @Index('game_status_idx')\n  status: string\n\n  @DeleteDateColumn()\n  deletedAt: Date\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameAdminController.html":{"url":"controllers/GameAdminController.html","title":"controller - GameAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/gameAdmin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin/game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, body: CreateGameReq)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@ApiOkResponse({type: GameDto})\n                \n            \n\n            \n                \n                    Defined in src/game/gameAdmin.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGameReq\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Put,\n  Delete,\n  Body,\n  Param,\n  UseGuards,\n} from '@nestjs/common'\nimport { ApiTags, ApiOkResponse, ApiBearerAuth } from '@nestjs/swagger'\n\nimport { AdminAuthGuard } from '../auth/guards/admin.guard'\n\nimport { GameService } from './game.service'\nimport { CreateGameReq, GameDto } from './dtos'\nimport { Game } from './entities'\n\n@Controller('admin/game')\n@ApiTags('game')\n// @UseGuards(AdminAuthGuard)\n@ApiBearerAuth('admin')\nexport class GameAdminController {\n  constructor(private gameService: GameService) {}\n\n  @Get('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async getGame(@Param('id') id: number): Promise {\n    const result = await this.gameService.getGame(id)\n    return result\n  }\n\n  @Post('/')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async createGame(@Body() body: CreateGameReq): Promise {\n    const { name } = body\n    const result = await this.gameService.createGame(name)\n    return result\n  }\n\n  @Put('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async updateGame(\n    @Param('id') id: number,\n    @Body() body: CreateGameReq,\n  ): Promise {\n    await this.gameService.updateGame(id, body as Game)\n    return\n  }\n\n  @Delete('/:id')\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  async deleteGame(@Param('id') id: number): Promise {\n    await this.gameService.deleteGame(id)\n    return\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CacheInterceptor)@ApiOkResponse({type: GameDto})@Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  CacheInterceptor,\n  UseInterceptors,\n  HttpException,\n  HttpStatus,\n  ParseIntPipe,\n} from '@nestjs/common'\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger'\n\nimport { GameService } from './game.service'\nimport { GameDto } from './dtos'\n\n@Controller('game')\n@ApiTags('game')\nexport class GameController {\n  constructor(private gameService: GameService) {}\n\n  @UseInterceptors(CacheInterceptor)\n  @ApiOkResponse({\n    type: GameDto,\n  })\n  @Get('/:id')\n  async getGame(@Param('id', ParseIntPipe) id: number): Promise {\n    const result = await this.gameService.getGameWithCache(id)\n    if (!result) {\n      throw new HttpException('Game Not Found', HttpStatus.NOT_FOUND)\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameDto.html":{"url":"classes/GameDto.html","title":"class - GameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dtos/game.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/game/dtos/game.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString } from 'class-validator'\nimport { ApiProperty } from '@nestjs/swagger'\n\nexport class GameDto {\n  @IsInt()\n  @ApiProperty()\n  id: number\n\n  @IsString()\n  @ApiProperty()\n  name: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameAdminController\n                        \n                        \n                            GameController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, CacheModule } from '@nestjs/common'\nimport { ConfigModule, ConfigService } from '@nestjs/config'\nimport { TypeOrmModule } from '@nestjs/typeorm'\n\nimport { GameService } from './game.service'\nimport { GameAdminController } from './gameAdmin.controller'\nimport { GameController } from './game.controller'\n\nimport { Game } from './entities/game.entity'\n\n@Module({\n  imports: [\n    CacheModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        ttl: configService.get('HTTP_CACHE_TTL'),\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forFeature([Game]),\n  ],\n  controllers: [GameAdminController, GameController],\n  providers: [GameService],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGame\n                            \n                            \n                                    Async\n                                deleteGame\n                            \n                            \n                                    Async\n                                getGame\n                            \n                            \n                                    Async\n                                getGameWithCache\n                            \n                            \n                                    Async\n                                updateGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameRepository: Repository, redisClient: Redis)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGame(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGame(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGameWithCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameWithCache(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGame\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGame(id: number, game: Game)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                Game\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectRepository } from '@nestjs/typeorm'\nimport { Repository } from 'typeorm'\nimport { Redis } from 'ioredis'\n\nimport { Game } from './entities/game.entity'\nimport { InjectRedis } from '../core/redis'\n\n@Injectable()\nexport class GameService {\n  constructor(\n    @InjectRepository(Game)\n    private gameRepository: Repository,\n    @InjectRedis() private redisClient: Redis,\n  ) {}\n\n  async createGame(name: string): Promise {\n    const newGame = this.gameRepository.create({ name })\n    const result = await this.gameRepository.save(newGame)\n    return result\n  }\n\n  async updateGame(id: number, game: Game): Promise {\n    await this.gameRepository.update(id, game)\n    return\n  }\n\n  async getGame(id: number): Promise {\n    return this.gameRepository.findOne(id)\n  }\n\n  async deleteGame(id: number): Promise {\n    await this.gameRepository.softDelete(id)\n    return\n  }\n\n  async getGameWithCache(id: number): Promise {\n    const cacheKey = `game_data:${id}`\n    const cache = await this.redisClient.get(cacheKey)\n    if (cache) {\n      return JSON.parse(cache)\n    }\n    let result\n    if (!cache) {\n      result = await this.gameRepository.findOne(id)\n      await this.redisClient.set(cacheKey, JSON.stringify(result))\n    }\n    return result\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/core/health/health.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\nimport { ApiTags } from '@nestjs/swagger'\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus'\n\n@Controller('health')\n@ApiTags('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')])\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/logger.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/logger.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst logger = new Logger('RequestLog');\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n\n    logger.log(`Request Comming [${request.path}]`);\n\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(\n        tap(() =>\n          logger.log(\n            `Request Response [${request.path} (${Date.now() - now}ms)]`,\n          ),\n        ),\n      );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LotteryModule.html":{"url":"modules/LotteryModule.html","title":"module - LotteryModule","body":"\n                   \n\n\n\n\n    Modules\n    LotteryModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lottery/lottery.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class LotteryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberStrategy.html":{"url":"injectables/MemberStrategy.html","title":"injectable - MemberStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MemberStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/member.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/member.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/member.strategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\n\n@Injectable()\nexport class MemberStrategy extends PassportStrategy(Strategy, 'member') {\n  constructor(private configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: readFileSync(\n        join(\n          __dirname,\n          '../../..',\n          configService.get('HK01_SSO_PUBLIC_KEY'),\n        ), // TODO: using absolute path instead\n      ),\n      algorithms: ['RS256'],\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Operation.html":{"url":"classes/Operation.html","title":"class - Operation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Operation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/operation.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/common/entities/operation.entity.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Column, CreateDateColumn, UpdateDateColumn } from 'typeorm'\n\nexport abstract class Operation {\n  @CreateDateColumn()\n  createdAt: Date\n\n  @Column()\n  createdBy: string\n\n  @UpdateDateColumn()\n  updatedAt: Date\n\n  @Column()\n  updatedBy: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OperationLogModule.html":{"url":"modules/OperationLogModule.html","title":"module - OperationLogModule","body":"\n                   \n\n\n\n\n    Modules\n    OperationLogModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/operationLog/operationLog.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class OperationLogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlayerModule.html":{"url":"modules/PlayerModule.html","title":"module - PlayerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlayerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/player/player.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class PlayerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointsService.html":{"url":"injectables/PointsService.html","title":"injectable - PointsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PointsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/points.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                publishGameCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventBusSDKService: EventBusSDKService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventBusSDKService\n                                                  \n                                                        \n                                                                        EventBusSDKService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            publishGameCompleted\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    publishGameCompleted(gameId: number, accountId: number, scoreInGame: number, isFirstTimeGamer: boolean, completedTs: number, lotteryRewardId: number, attempt: number)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/points.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gameId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accountId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scoreInGame\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFirstTimeGamer\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    completedTs\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lotteryRewardId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attempt\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/points.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { hk01 } from '@hk01-digital/shared-event-proto';\nimport EventbusSDK from '@hk01-digital/eventbus-js-sdk';\nimport { EventBusSDKService } from './eventBusSDK.service';\n\nconst { GameCompleted } = hk01.protobuf.game.mcgame;\n\n@Injectable()\nexport class PointsService {\n  logger: Logger;\n\n  constructor(private eventBusSDKService: EventBusSDKService) {\n    this.logger = new Logger(PointsService.name);\n  }\n\n  async publishGameCompleted(\n    gameId: number,\n    accountId: number,\n    scoreInGame: number,\n    isFirstTimeGamer: boolean,\n    completedTs: number,\n    lotteryRewardId: number,\n    attempt: number,\n  ): Promise {\n    try {\n      const pojo = {\n        gameId: gameId.toString(),\n        accountId: accountId,\n        scoreInGame: scoreInGame,\n        isFirstTimeGamer: isFirstTimeGamer === true ? 1 : 0,\n        attempt: attempt,\n        completedTs: completedTs,\n        lotteryRewardId: lotteryRewardId,\n      };\n\n      const verifyErr = GameCompleted.verify(pojo);\n      if (verifyErr) {\n        //TODO: integrate error\n        throw new Error('protobuf error');\n      }\n\n      const message = GameCompleted.create(pojo);\n      const { topic, envelope } = EventbusSDK.createEnvelopeWithBody(message);\n      return this.eventBusSDKService.publish(topic, envelope);\n    } catch (error) {\n      //TODO: insert to eventbus retry queue\n      this.logger.error('eventbus publish error');\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/quiz/quiz.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\n@Module({\n  providers: [],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/redis/redis.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RedisOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/redis/redis.module.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            RedisOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options: RedisModuleAsyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/core/redis/redis.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RedisModuleAsyncOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, Provider, DynamicModule } from '@nestjs/common';\nimport IORedis, { RedisOptions } from 'ioredis';\n\nimport { getRedisToken } from './utils';\nimport { RedisModuleAsyncOptions } from './interface';\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useValue: new IORedis(options),\n    };\n    return {\n      global: true,\n      module: RedisModule,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n  static forRootAsync(options: RedisModuleAsyncOptions): DynamicModule {\n    const redisConnectionProvider: Provider = {\n      provide: getRedisToken(),\n      useFactory(options: RedisOptions) {\n        return new IORedis(options);\n      },\n    };\n\n    return {\n      global: true,\n      module: RedisModule,\n      imports: options.imports,\n      providers: [redisConnectionProvider],\n      exports: [redisConnectionProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisModuleAsyncOptions.html":{"url":"interfaces/RedisModuleAsyncOptions.html","title":"interface - RedisModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RedisModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/redis/interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleMetadata, Type } from '@nestjs/common/interfaces';\nimport { RedisOptions } from 'ioredis';\n\nexport interface RedisModuleAsyncOptions\n  extends Pick {\n  inject?: any[];\n  useClass?: Type;\n  useExisting?: Type;\n  useFactory?: (...args: any[]) => Promise | RedisOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3Service.html":{"url":"injectables/S3Service.html","title":"injectable - S3Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  S3Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/thirdParty/s3.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                s3\n                            \n                            \n                                s3Setting\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                genKeyByFilename\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                    Async\n                                getObjectHead\n                            \n                            \n                                    Private\n                                getS3Param\n                            \n                            \n                                    Async\n                                move\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKeyByFilename\n                        \n                        \n                    \n                \n            \n            \n                \ngenKeyByFilename(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getObjectHead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getObjectHead(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getS3Param\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getS3Param(key: string, options: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            move\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    move(key: string, newKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(body: string, key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/thirdParty/s3.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AWS.S3.Types\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            s3Setting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/thirdParty/s3.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { ConfigService } from '@nestjs/config'\nimport * as AWS from 'aws-sdk'\nimport * as R from 'ramda'\nimport path from 'path'\nimport uuid from 'uuid/v4'\n\n@Injectable()\nexport class S3Service {\n  s3: AWS.S3.Types\n  s3Setting: Record\n\n  constructor(private configService: ConfigService) {\n    AWS.config.update({\n      accessKeyId: this.configService.get('S3_CLIENT_KEY'),\n      secretAccessKey: this.configService.get('S3_CLIENT_SECRET'),\n      region: this.configService.get('S3_REGION'),\n    })\n    this.s3 = new AWS.S3()\n    this.s3Setting = Object.freeze({\n      Bucket: this.configService.get('S3_BUCKET'),\n    })\n  }\n\n  private getS3Param(key: string, options: Record = {}): any {\n    return R.merge(R.clone(this.s3Setting), {\n      Key: key,\n      ...options,\n    })\n  }\n\n  async upload(body: string, key: string): Promise {\n    const params = this.getS3Param(key, { Body: body })\n    try {\n      const uploaded = await this.s3.upload(params).promise()\n      return uploaded.Location\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async delete(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      await this.s3.deleteObject(params).promise()\n      return true\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async move(key: string, newKey: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(newKey, {\n      CopySource: `${this.configService.get('S3_BUCKET')}/${key}`,\n    })\n    try {\n      await this.s3.copyObject(params).promise()\n      return await this.delete(key)\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  async get(key: string): Promise {\n    await this.getObjectHead(key)\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.getObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n\n  genKeyByFilename(filename: string): string {\n    const ext = path.extname(filename)\n    let key = uuid() + ext\n    const folder1 = key.substr(0, 1)\n    const folder2 = key.substr(1, 1)\n    key = `${folder1}/${folder2}/${key}`\n    return key\n  }\n\n  async getObjectHead(key: string): Promise {\n    const params = this.getS3Param(key)\n    try {\n      return this.s3.headObject(params).promise()\n    } catch (error) {\n      //TODO: integrate error\n      throw new Error('s3 error')\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThirdPartyModule.html":{"url":"modules/ThirdPartyModule.html","title":"module - ThirdPartyModule","body":"\n                   \n\n\n\n\n    Modules\n    ThirdPartyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/thirdParty/thirdParty.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PointsService\n                        \n                        \n                            S3Service\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { PointsService } from './points.service'\nimport { EventBusSDKService } from './eventBusSDK.service'\nimport { eventBusSDKProviders } from './eventBusSDK.provider'\nimport { S3Service } from './s3.service'\n\n@Module({\n  imports: [ConfigModule],\n  providers: [\n    ...eventBusSDKProviders,\n    PointsService,\n    EventBusSDKService,\n    S3Service,\n  ],\n  exports: [PointsService, S3Service],\n})\nexport class ThirdPartyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/middlewares/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toValidate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: unknown)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/validation.pipe.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                            unknown\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/core/middlewares/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw errors[0];\n    }\n    return value;\n  }\n\n  private toValidate(metatype: unknown): boolean {\n    const types: unknown[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/adminLogin.dto.ts\n            \n            class\n            AdminLoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/admin.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/member.guard.ts\n            \n            injectable\n            AdminAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/admin.strategy.ts\n            \n            injectable\n            AdminStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/member.strategy.ts\n            \n            injectable\n            MemberStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/entities/operation.entity.ts\n            \n            class\n            Operation\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/config/configuration.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/configuration.ts\n            \n            variable\n            YAML_CONFIG_FILENAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/exception.filter.ts\n            \n            class\n            AllExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/logger.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/middlewares/logger.interceptor.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/middlewares/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/redis/constants.ts\n            \n            variable\n            REDIS_MODULE_CONNECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/redis/decorators.ts\n            \n            variable\n            InjectRedis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/redis/interface.ts\n            \n            interface\n            RedisModuleAsyncOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/redis/utils.ts\n            \n            function\n            getRedisToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dtos/createGame.dto.ts\n            \n            class\n            CreateGameReq\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/dtos/game.dto.ts\n            \n            class\n            GameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/entities/game.entity.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/game/gameAdmin.controller.ts\n            \n            controller\n            GameAdminController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            eventBusSDKProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.provider.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/eventBusSDK.service.ts\n            \n            class\n            EventBusSDKService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            injectable\n            PointsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/thirdParty/points.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/thirdParty/s3.service.ts\n            \n            injectable\n            S3Service\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @commitlint/config-conventional : ^12.1.4\n        \n            @grpc/proto-loader : ^0.6.0\n        \n            @hk01-digital/eventbus-js-sdk : ^3.2.0\n        \n            @hk01-digital/shared-event-proto : ^2.23.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.15\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/terminus : ^7.1.2\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            aws-sdk : ^2.908.0\n        \n            cache-manager : ^3.4.3\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            dotenv : ^9.0.2\n        \n            googleapis : ^73.0.0\n        \n            grpc : ^1.24.6\n        \n            helmet : ^4.6.0\n        \n            ioredis : ^4.27.2\n        \n            mysql2 : ^2.2.5\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n        \n            uuid : 3.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GAME_STATUS_ENUM   (src/.../game.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/game/interfaces/game.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        GAME_STATUS_ENUM\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : DRAFT\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : PUBLISHED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getRedisToken   (src/.../utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/core/redis/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRedisToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetRedisToken()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMCGame\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LotteryModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OperationLogModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlayerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThirdPartyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_ThirdPartyModule\n\n\n\ncluster_ThirdPartyModule_exports\n\n\n\ncluster_ThirdPartyModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nLotteryModule\n\nLotteryModule\n\nAppModule -->\n\nLotteryModule->AppModule\n\n\n\n\n\nPlayerModule\n\nPlayerModule\n\nAppModule -->\n\nPlayerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nAdminStrategy\n\nAdminStrategy\n\nAuthModule -->\n\nAdminStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nMemberStrategy\n\nMemberStrategy\n\nAuthModule -->\n\nMemberStrategy->AuthModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nCoreModule -->\n\nHealthModule->CoreModule\n\n\n\n\n\nRedisModule\n\nRedisModule\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\nCoreModule -->\n\nRedisModule->CoreModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nPointsService \n\nPointsService \n\n\n\nS3Service \n\nS3Service \n\n\n\nThirdPartyModule\n\nThirdPartyModule\n\nPointsService  -->\n\nThirdPartyModule->PointsService \n\n\n\nS3Service  -->\n\nThirdPartyModule->S3Service \n\n\n\n\n\nPointsService\n\nPointsService\n\nThirdPartyModule -->\n\nPointsService->ThirdPartyModule\n\n\n\n\n\nS3Service\n\nS3Service\n\nThirdPartyModule -->\n\nS3Service->ThirdPartyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            env   (src/.../configuration.ts)\n                        \n                        \n                            eventBusSDKProviders   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            InjectRedis   (src/.../decorators.ts)\n                        \n                        \n                            logger   (src/.../eventBusSDK.provider.ts)\n                        \n                        \n                            logger   (src/.../logger.interceptor.ts)\n                        \n                        \n                            REDIS_MODULE_CONNECTION_TOKEN   (src/.../constants.ts)\n                        \n                        \n                               (src/.../points.service.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../configuration.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/config/configuration.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            env\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : process.env.NODE_ENV || 'development'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            YAML_CONFIG_FILENAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${env}.config.yml`\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/eventBusSDK.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventBusSDKProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: 'EVENT_BUS_SDK',\n    useFactory: async (configService: ConfigService): Promise => {\n      const sdk = new EventBusSDK(\n        configService.get('RMQ_URL'),\n        configService.get('EVENT_BUS_EXCHANGE_CREATE_MODE'),\n      );\n\n      logger.log('RMQ connection initializing...');\n      sdk.connect();\n      logger.log('RMQ connection established');\n\n      return sdk;\n    },\n    inject: [ConfigService],\n  },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('EventBusSDK')\n                        \n                    \n\n\n            \n        \n\n    src/core/redis/decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            InjectRedis\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {\n  return Inject(getRedisToken());\n}\n                        \n                    \n\n\n            \n        \n\n    src/core/middlewares/logger.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('RequestLog')\n                        \n                    \n\n\n            \n        \n\n    src/core/redis/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REDIS_MODULE_CONNECTION_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'IORedisModuleConnectionToken'\n                        \n                    \n\n\n            \n        \n\n    src/thirdParty/points.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : hk01.protobuf.game.mcgame\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
